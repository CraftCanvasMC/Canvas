From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: l_MrBoom_l <admin@epserv.ru>
Date: Wed, 30 Sep 2020 18:20:12 +0300
Subject: [PATCH] Configurable flight checks

Original code by YatopiaMC, licensed under MIT
You can find the original code on https://github.com/YatopiaMC/Yatopia

diff --git a/src/main/java/dev/etil/mirai/MiraiConfig.java b/src/main/java/dev/etil/mirai/MiraiConfig.java
index 71a7e3abaeca1b0f74c17543bd85f3257f701aae..25a5528c0c402fbe08716be8f1b810c1e5417145 100644
--- a/src/main/java/dev/etil/mirai/MiraiConfig.java
+++ b/src/main/java/dev/etil/mirai/MiraiConfig.java
@@ -138,4 +138,13 @@ public class MiraiConfig {
                     "Allowing more bees in a hive can reduce the number of ticking hives.");
     }
 
+    public static boolean checkFlying;
+    public static boolean checkVehicleFlying;
+    private static void flightChecks() {
+        checkFlying = getBoolean("checks.flight", true,
+                            "Whether or not vanilla anticheat should check for players flying.");
+        checkVehicleFlying = getBoolean("checks.vehicle-flight", true,
+                                "Whether or not vanilla anticheat should check for passengers flying.");
+    }
+
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index b294bb43700f2e1b9668c305b41fc5702cc15bee..b9a3366c80a5594c767270a9d5c41d2197c65467 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -356,7 +356,7 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
         ++this.tickCount;
         this.knownMovePacketCount = this.receivedMovePacketCount;
         if (this.clientIsFloating && !this.player.isSleeping() && !this.player.isPassenger() && !this.player.isDeadOrDying()) {
-            if (++this.aboveGroundTickCount > 80) {
+            if (dev.etil.mirai.MiraiConfig.checkFlying && ++this.aboveGroundTickCount > 80) { // Yatopia - Configurable flight checks
                 ServerGamePacketListenerImpl.LOGGER.warn("{} was kicked for floating too long!", this.player.getName().getString());
                 this.disconnect(io.papermc.paper.configuration.GlobalConfiguration.get().messages.kick.flyingPlayer, org.bukkit.event.player.PlayerKickEvent.Cause.FLYING_PLAYER); // Paper - use configurable kick message & kick event cause
                 return;
@@ -375,7 +375,7 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
             this.vehicleLastGoodY = this.lastVehicle.getY();
             this.vehicleLastGoodZ = this.lastVehicle.getZ();
             if (this.clientVehicleIsFloating && this.player.getRootVehicle().getControllingPassenger() == this.player) {
-                if (++this.aboveGroundVehicleTickCount > 80) {
+                if (dev.etil.mirai.MiraiConfig.checkVehicleFlying && ++this.aboveGroundVehicleTickCount > 80) { // Yatopia - Configurable flight checks
                     ServerGamePacketListenerImpl.LOGGER.warn("{} was kicked for floating a vehicle too long!", this.player.getName().getString());
                     this.disconnect(io.papermc.paper.configuration.GlobalConfiguration.get().messages.kick.flyingVehicle, org.bukkit.event.player.PlayerKickEvent.Cause.FLYING_VEHICLE); // Paper - use configurable kick message & kick event cause
                     return;
