From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sun, 7 Apr 2024 14:27:31 -0700
Subject: [PATCH] More Constants Improvements


diff --git a/src/main/java/me/dueris/canvas/Constants.java b/src/main/java/me/dueris/canvas/Constants.java
index 021003ee3675802e3a13c02113149ac20bcd7d3b..1baff312ae42638d352ea5f4ab3e819e2df3158a 100644
--- a/src/main/java/me/dueris/canvas/Constants.java
+++ b/src/main/java/me/dueris/canvas/Constants.java
@@ -1,16 +1,25 @@
 package me.dueris.canvas;
 
-import net.minecraft.core.BlockPos;
+import net.minecraft.world.entity.ai.behavior.DoNothing;
+import net.minecraft.world.item.ItemCooldowns;
+import net.minecraft.world.phys.Vec3;
+import java.io.File;
 
-public final class Constants {
-    private Constants() {}
-
-    public static final Object[] EMPTY_object_arr = new Object[0];
-    public static final int[] EMPTY_int_arr = new int[0];
-    public static final int[] ZERO_int_arr = new int[]{0};
-    public static final byte[] EMPTY_byte_arr = new byte[0];
-    public static final String[] EMPTY_string_arr = new String[0];
-    public static final long[] EMPTY_long_arr = new long[0];
-    public static final org.bukkit.entity.Entity[] EMPTY_bukkit_entity_arr = new org.bukkit.entity.Entity[0];
-    public static final net.minecraft.world.entity.Entity[] EMPTY_entity_arr = new net.minecraft.world.entity.Entity[0];
-}
\ No newline at end of file
+public interface Constants {
+    Object[] EMPTY_object_arr = new Object[0];
+    int[] EMPTY_int_arr = new int[0];
+    int[] ZERO_int_arr = new int[]{0};
+    byte[] EMPTY_byte_arr = new byte[0];
+    String[] EMPTY_string_arr = new String[0];
+    long[] EMPTY_long_arr = new long[0];
+    org.bukkit.entity.Entity[] EMPTY_bukkit_entity_arr = new org.bukkit.entity.Entity[0];
+    net.minecraft.world.entity.Entity[] EMPTY_entity_arr = new net.minecraft.world.entity.Entity[0];
+    File SERVER_DIRECTORY = new File(".");
+    int[] ZERO = new int[0];
+    Vec3 EMPTY_VECTOR3 = new Vec3(0.0D, 0.0D, 1.0D);
+    ItemCooldowns ITEM_COOLDOWNS = new ItemCooldowns();
+    float[] WHITE_SHEEP_COLOR = new float[]{0.9019608F, 0.9019608F, 0.9019608F};
+    DoNothing DO_NOTHING = new DoNothing(30, 60);
+    DoNothing VILLAGERS_DO_NOTHING = new DoNothing(20, 40);
+    DoNothing PIGLIN_DO_NOTHING = new DoNothing(10, 20);
+}
diff --git a/src/main/java/me/dueris/canvas/SoundConstants.java b/src/main/java/me/dueris/canvas/SoundConstants.java
new file mode 100644
index 0000000000000000000000000000000000000000..581e5fd66a9a79f3a21b2c46edb5faadd43a1bec
--- /dev/null
+++ b/src/main/java/me/dueris/canvas/SoundConstants.java
@@ -0,0 +1,11 @@
+package me.dueris.canvas;
+
+import net.minecraft.sounds.SoundEvents;
+import net.minecraft.world.entity.LivingEntity;
+
+public interface SoundConstants {
+    LivingEntity.Fallsounds LIVING_ENTITY = new LivingEntity.Fallsounds(SoundEvents.GENERIC_SMALL_FALL, SoundEvents.GENERIC_BIG_FALL);
+    LivingEntity.Fallsounds PLAYER = new LivingEntity.Fallsounds(SoundEvents.PLAYER_SMALL_FALL, SoundEvents.PLAYER_BIG_FALL);
+    LivingEntity.Fallsounds MONSTER = new LivingEntity.Fallsounds(SoundEvents.HOSTILE_SMALL_FALL, SoundEvents.HOSTILE_BIG_FALL);
+    LivingEntity.Fallsounds ARMOR_STAND = new LivingEntity.Fallsounds(SoundEvents.ARMOR_STAND_FALL, SoundEvents.ARMOR_STAND_FALL);
+}
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index b9e01c94e0a66135ee81e68c5898dc7eee35e950..780ea7c67f958807087cdf508f3de99b0c68ea3a 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1600,7 +1600,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
     }
 
     public File getServerDirectory() {
-        return new File(".");
+        return me.dueris.canvas.Constants.SERVER_DIRECTORY;
     }
 
     public void onServerCrash(CrashReport report) {}
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 7ecbedb0a3c42d88427595bb66c104aa47337aec..6a1485f0f623ee4db0f40714409bd81d5a7adb10 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -2058,7 +2058,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
     }
 
     public LivingEntity.Fallsounds getFallSounds() {
-        return new LivingEntity.Fallsounds(SoundEvents.GENERIC_SMALL_FALL, SoundEvents.GENERIC_BIG_FALL);
+        return me.dueris.canvas.SoundConstants.LIVING_ENTITY; // Canvas
     }
 
     protected SoundEvent getDrinkingSound(ItemStack stack) {
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/VillagerGoalPackages.java b/src/main/java/net/minecraft/world/entity/ai/behavior/VillagerGoalPackages.java
index 47672e48c1cae73cffe532d622b296343fc12ef0..bf718e9ee0096308c9301ab89cfa88506702c56e 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/VillagerGoalPackages.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/VillagerGoalPackages.java
@@ -46,13 +46,13 @@ public class VillagerGoalPackages {
     }
 
     public static ImmutableList<Pair<Integer, ? extends BehaviorControl<? super Villager>>> getPlayPackage(float speed) {
-        return ImmutableList.of(Pair.of(0, new MoveToTargetSink(80, 120)), getFullLookBehavior(), Pair.of(5, PlayTagWithOtherKids.create()), Pair.of(5, new RunOne<>(ImmutableMap.of(MemoryModuleType.VISIBLE_VILLAGER_BABIES, MemoryStatus.VALUE_ABSENT), ImmutableList.of(Pair.of(InteractWith.of(EntityType.VILLAGER, 8, MemoryModuleType.INTERACTION_TARGET, speed, 2), 2), Pair.of(InteractWith.of(EntityType.CAT, 8, MemoryModuleType.INTERACTION_TARGET, speed, 2), 1), Pair.of(VillageBoundRandomStroll.create(speed), 1), Pair.of(SetWalkTargetFromLookTarget.create(speed, 2), 1), Pair.of(new JumpOnBed(speed), 2), Pair.of(new DoNothing(20, 40), 2)))), Pair.of(99, UpdateActivityFromSchedule.create()));
+        return ImmutableList.of(Pair.of(0, new MoveToTargetSink(80, 120)), getFullLookBehavior(), Pair.of(5, PlayTagWithOtherKids.create()), Pair.of(5, new RunOne<>(ImmutableMap.of(MemoryModuleType.VISIBLE_VILLAGER_BABIES, MemoryStatus.VALUE_ABSENT), ImmutableList.of(Pair.of(InteractWith.of(EntityType.VILLAGER, 8, MemoryModuleType.INTERACTION_TARGET, speed, 2), 2), Pair.of(InteractWith.of(EntityType.CAT, 8, MemoryModuleType.INTERACTION_TARGET, speed, 2), 1), Pair.of(VillageBoundRandomStroll.create(speed), 1), Pair.of(SetWalkTargetFromLookTarget.create(speed, 2), 1), Pair.of(new JumpOnBed(speed), 2), Pair.of(me.dueris.canvas.Constants.VILLAGERS_DO_NOTHING, 2)))), Pair.of(99, UpdateActivityFromSchedule.create())); // Canvas
     }
 
     public static ImmutableList<Pair<Integer, ? extends BehaviorControl<? super Villager>>> getRestPackage(VillagerProfession profession, float speed) {
         return ImmutableList.of(Pair.of(2, SetWalkTargetFromBlockMemory.create(MemoryModuleType.HOME, speed, 1, 150, 1200)), Pair.of(3, ValidateNearbyPoi.create((poiType) -> {
             return poiType.is(PoiTypes.HOME);
-        }, MemoryModuleType.HOME)), Pair.of(3, new SleepInBed()), Pair.of(5, new RunOne<>(ImmutableMap.of(MemoryModuleType.HOME, MemoryStatus.VALUE_ABSENT), ImmutableList.of(Pair.of(SetClosestHomeAsWalkTarget.create(speed), 1), Pair.of(InsideBrownianWalk.create(speed), 4), Pair.of(GoToClosestVillage.create(speed, 4), 2), Pair.of(new DoNothing(20, 40), 2)))), getMinimalLookBehavior(), Pair.of(99, UpdateActivityFromSchedule.create()));
+        }, MemoryModuleType.HOME)), Pair.of(3, new SleepInBed()), Pair.of(5, new RunOne<>(ImmutableMap.of(MemoryModuleType.HOME, MemoryStatus.VALUE_ABSENT), ImmutableList.of(Pair.of(SetClosestHomeAsWalkTarget.create(speed), 1), Pair.of(InsideBrownianWalk.create(speed), 4), Pair.of(GoToClosestVillage.create(speed, 4), 2), Pair.of(me.dueris.canvas.Constants.VILLAGERS_DO_NOTHING, 2)))), getMinimalLookBehavior(), Pair.of(99, UpdateActivityFromSchedule.create())); // Canvas
     }
 
     public static ImmutableList<Pair<Integer, ? extends BehaviorControl<? super Villager>>> getMeetPackage(VillagerProfession profession, float speed) {
@@ -62,7 +62,7 @@ public class VillagerGoalPackages {
     }
 
     public static ImmutableList<Pair<Integer, ? extends BehaviorControl<? super Villager>>> getIdlePackage(VillagerProfession profession, float speed) {
-        return ImmutableList.of(Pair.of(2, new RunOne<>(ImmutableList.of(Pair.of(InteractWith.of(EntityType.VILLAGER, 8, MemoryModuleType.INTERACTION_TARGET, speed, 2), 2), Pair.of(InteractWith.of(EntityType.VILLAGER, 8, AgeableMob::canBreed, AgeableMob::canBreed, MemoryModuleType.BREED_TARGET, speed, 2), 1), Pair.of(InteractWith.of(EntityType.CAT, 8, MemoryModuleType.INTERACTION_TARGET, speed, 2), 1), Pair.of(VillageBoundRandomStroll.create(speed), 1), Pair.of(SetWalkTargetFromLookTarget.create(speed, 2), 1), Pair.of(new JumpOnBed(speed), 1), Pair.of(new DoNothing(30, 60), 1)))), Pair.of(3, new GiveGiftToHero(100)), Pair.of(3, SetLookAndInteract.create(EntityType.PLAYER, 4)), Pair.of(3, new ShowTradesToPlayer(400, 1600)), Pair.of(3, new GateBehavior<>(ImmutableMap.of(), ImmutableSet.of(MemoryModuleType.INTERACTION_TARGET), GateBehavior.OrderPolicy.ORDERED, GateBehavior.RunningPolicy.RUN_ONE, ImmutableList.of(Pair.of(new TradeWithVillager(), 1)))), Pair.of(3, new GateBehavior<>(ImmutableMap.of(), ImmutableSet.of(MemoryModuleType.BREED_TARGET), GateBehavior.OrderPolicy.ORDERED, GateBehavior.RunningPolicy.RUN_ONE, ImmutableList.of(Pair.of(new VillagerMakeLove(), 1)))), getFullLookBehavior(), Pair.of(99, UpdateActivityFromSchedule.create()));
+        return ImmutableList.of(Pair.of(2, new RunOne<>(ImmutableList.of(Pair.of(InteractWith.of(EntityType.VILLAGER, 8, MemoryModuleType.INTERACTION_TARGET, speed, 2), 2), Pair.of(InteractWith.of(EntityType.VILLAGER, 8, AgeableMob::canBreed, AgeableMob::canBreed, MemoryModuleType.BREED_TARGET, speed, 2), 1), Pair.of(InteractWith.of(EntityType.CAT, 8, MemoryModuleType.INTERACTION_TARGET, speed, 2), 1), Pair.of(VillageBoundRandomStroll.create(speed), 1), Pair.of(SetWalkTargetFromLookTarget.create(speed, 2), 1), Pair.of(new JumpOnBed(speed), 1), Pair.of(me.dueris.canvas.Constants.DO_NOTHING, 1)))), Pair.of(3, new GiveGiftToHero(100)), Pair.of(3, SetLookAndInteract.create(EntityType.PLAYER, 4)), Pair.of(3, new ShowTradesToPlayer(400, 1600)), Pair.of(3, new GateBehavior<>(ImmutableMap.of(), ImmutableSet.of(MemoryModuleType.INTERACTION_TARGET), GateBehavior.OrderPolicy.ORDERED, GateBehavior.RunningPolicy.RUN_ONE, ImmutableList.of(Pair.of(new TradeWithVillager(), 1)))), Pair.of(3, new GateBehavior<>(ImmutableMap.of(), ImmutableSet.of(MemoryModuleType.BREED_TARGET), GateBehavior.OrderPolicy.ORDERED, GateBehavior.RunningPolicy.RUN_ONE, ImmutableList.of(Pair.of(new VillagerMakeLove(), 1)))), getFullLookBehavior(), Pair.of(99, UpdateActivityFromSchedule.create())); // Canvas
     }
 
     public static ImmutableList<Pair<Integer, ? extends BehaviorControl<? super Villager>>> getPanicPackage(VillagerProfession profession, float speed) {
@@ -84,11 +84,11 @@ public class VillagerGoalPackages {
     }
 
     private static Pair<Integer, BehaviorControl<LivingEntity>> getFullLookBehavior() {
-        return Pair.of(5, new RunOne<>(ImmutableList.of(Pair.of(SetEntityLookTarget.create(EntityType.CAT, 8.0F), 8), Pair.of(SetEntityLookTarget.create(EntityType.VILLAGER, 8.0F), 2), Pair.of(SetEntityLookTarget.create(EntityType.PLAYER, 8.0F), 2), Pair.of(SetEntityLookTarget.create(MobCategory.CREATURE, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.WATER_CREATURE, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.AXOLOTLS, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.UNDERGROUND_WATER_CREATURE, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.WATER_AMBIENT, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.MONSTER, 8.0F), 1), Pair.of(new DoNothing(30, 60), 2))));
+        return Pair.of(5, new RunOne<>(ImmutableList.of(Pair.of(SetEntityLookTarget.create(EntityType.CAT, 8.0F), 8), Pair.of(SetEntityLookTarget.create(EntityType.VILLAGER, 8.0F), 2), Pair.of(SetEntityLookTarget.create(EntityType.PLAYER, 8.0F), 2), Pair.of(SetEntityLookTarget.create(MobCategory.CREATURE, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.WATER_CREATURE, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.AXOLOTLS, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.UNDERGROUND_WATER_CREATURE, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.WATER_AMBIENT, 8.0F), 1), Pair.of(SetEntityLookTarget.create(MobCategory.MONSTER, 8.0F), 1), Pair.of(me.dueris.canvas.Constants.DO_NOTHING, 2)))); // Canvas
     }
 
     private static Pair<Integer, BehaviorControl<LivingEntity>> getMinimalLookBehavior() {
-        return Pair.of(5, new RunOne<>(ImmutableList.of(Pair.of(SetEntityLookTarget.create(EntityType.VILLAGER, 8.0F), 2), Pair.of(SetEntityLookTarget.create(EntityType.PLAYER, 8.0F), 2), Pair.of(new DoNothing(30, 60), 8))));
+        return Pair.of(5, new RunOne<>(ImmutableList.of(Pair.of(SetEntityLookTarget.create(EntityType.VILLAGER, 8.0F), 2), Pair.of(SetEntityLookTarget.create(EntityType.PLAYER, 8.0F), 2), Pair.of(me.dueris.canvas.Constants.DO_NOTHING, 8)))); // Canvas
     }
 
     private static boolean raidExistsAndActive(ServerLevel world, LivingEntity entity) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pig.java b/src/main/java/net/minecraft/world/entity/animal/Pig.java
index 10d6361077a74c5685eca72d12f99e33a458ec43..476ea36baf03d071ff994c5640b7be7b307ac2f3 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pig.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pig.java
@@ -333,7 +333,7 @@ public class Pig extends Animal implements ItemSteerable, Saddleable {
 
     @Override
     protected Vec3 getRiddenInput(Player controllingPlayer, Vec3 movementInput) {
-        return new Vec3(0.0D, 0.0D, 1.0D);
+        return me.dueris.canvas.Constants.EMPTY_VECTOR3; // Canvas
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Sheep.java b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
index 658f7943d275267d3fc556572831cc095259d12e..490cec6558764b3d0a9a7c720b4f21aa1c514cd4 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Sheep.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
@@ -102,10 +102,10 @@ public class Sheep extends Animal implements Shearable {
 
     private static float[] createSheepColor(DyeColor color) {
         if (color == DyeColor.WHITE) {
-            return new float[]{0.9019608F, 0.9019608F, 0.9019608F};
+            return me.dueris.canvas.Constants.WHITE_SHEEP_COLOR; // Canvas
         } else {
             float[] afloat = color.getTextureDiffuseColors();
-            float f = 0.75F;
+            // float f = 0.75F; // Canvas
 
             return new float[]{afloat[0] * 0.75F, afloat[1] * 0.75F, afloat[2] * 0.75F};
         }
diff --git a/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java b/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
index fef18455da5ae020f9875663984b26e54a1c4bf7..38e73bf4c4bc1f3cbb91fc01c629f5ea8156f971 100644
--- a/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
+++ b/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
@@ -916,7 +916,7 @@ public class ArmorStand extends LivingEntity {
 
     @Override
     public LivingEntity.Fallsounds getFallSounds() {
-        return new LivingEntity.Fallsounds(SoundEvents.ARMOR_STAND_FALL, SoundEvents.ARMOR_STAND_FALL);
+        return me.dueris.canvas.SoundConstants.ARMOR_STAND; // Canvas
     }
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/monster/Monster.java b/src/main/java/net/minecraft/world/entity/monster/Monster.java
index 1be6f724fa6447fe733c8374ac295c6d4db6eb87..bc376ab145c8bdb5cba51692d7a31340fc2da7a0 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Monster.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Monster.java
@@ -80,7 +80,7 @@ public abstract class Monster extends PathfinderMob implements Enemy {
 
     @Override
     public LivingEntity.Fallsounds getFallSounds() {
-        return new LivingEntity.Fallsounds(SoundEvents.HOSTILE_SMALL_FALL, SoundEvents.HOSTILE_BIG_FALL);
+        return me.dueris.canvas.SoundConstants.MONSTER; // Canvas
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Strider.java b/src/main/java/net/minecraft/world/entity/monster/Strider.java
index 85bff727079972d6bc6f8820f251f747fe4e586c..66196d61fa011bd4de3a6f59f4d9cb8ab5371ca7 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Strider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Strider.java
@@ -321,7 +321,7 @@ public class Strider extends Animal implements ItemSteerable, Saddleable {
 
     @Override
     protected Vec3 getRiddenInput(Player controllingPlayer, Vec3 movementInput) {
-        return new Vec3(0.0D, 0.0D, 1.0D);
+        return me.dueris.canvas.Constants.EMPTY_VECTOR3; // Canvas
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
index 1d36459ee10da702d65b4a6d139a05fdd487556f..159890013a6d66080adcfd84dee9eb7a7f3bf7f4 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
@@ -123,7 +123,7 @@ public class Zoglin extends Monster implements Enemy, HoglinBase {
     }
 
     private static void initIdleActivity(Brain<Zoglin> brain) {
-        brain.addActivity(Activity.IDLE, 10, ImmutableList.of(StartAttacking.create(Zoglin::findNearestValidAttackTarget), SetEntityLookTargetSometimes.create(8.0F, UniformInt.of(30, 60)), new RunOne<>(ImmutableList.of(Pair.of(RandomStroll.stroll(0.4F), 2), Pair.of(SetWalkTargetFromLookTarget.create(0.4F, 3), 2), Pair.of(new DoNothing(30, 60), 1)))));
+        brain.addActivity(Activity.IDLE, 10, ImmutableList.of(StartAttacking.create(Zoglin::findNearestValidAttackTarget), SetEntityLookTargetSometimes.create(8.0F, UniformInt.of(30, 60)), new RunOne<>(ImmutableList.of(Pair.of(RandomStroll.stroll(0.4F), 2), Pair.of(SetWalkTargetFromLookTarget.create(0.4F, 3), 2), Pair.of(me.dueris.canvas.Constants.DO_NOTHING, 1))))); // Canvas
     }
 
     private static void initFightActivity(Brain<Zoglin> brain) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java
index dd4313e0507d3adda0ec84c79f1af13ecc2d7ef3..ba65ab37f98f9aef0a2be08110d068551f49d904 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java
@@ -159,7 +159,7 @@ public class PiglinAi {
     private static void initCelebrateActivity(Brain<Piglin> brain) {
         brain.addActivityAndRemoveMemoryWhenStopped(Activity.CELEBRATE, 10, ImmutableList.of(PiglinAi.avoidRepellent(), SetEntityLookTarget.create(PiglinAi::isPlayerHoldingLovedItem, 14.0F), StartAttacking.create(AbstractPiglin::isAdult, PiglinAi::findNearestValidAttackTarget), BehaviorBuilder.triggerIf((entitypiglin) -> {
             return !entitypiglin.isDancing();
-        }, GoToTargetLocation.create(MemoryModuleType.CELEBRATE_LOCATION, 2, 1.0F)), BehaviorBuilder.triggerIf(Piglin::isDancing, GoToTargetLocation.create(MemoryModuleType.CELEBRATE_LOCATION, 4, 0.6F)), new RunOne<>(ImmutableList.of(Pair.of(SetEntityLookTarget.create(EntityType.PIGLIN, 8.0F), 1), Pair.of(RandomStroll.stroll(0.6F, 2, 1), 1), Pair.of(new DoNothing(10, 20), 1)))), MemoryModuleType.CELEBRATE_LOCATION);
+        }, GoToTargetLocation.create(MemoryModuleType.CELEBRATE_LOCATION, 2, 1.0F)), BehaviorBuilder.triggerIf(Piglin::isDancing, GoToTargetLocation.create(MemoryModuleType.CELEBRATE_LOCATION, 4, 0.6F)), new RunOne<>(ImmutableList.of(Pair.of(SetEntityLookTarget.create(EntityType.PIGLIN, 8.0F), 1), Pair.of(RandomStroll.stroll(0.6F, 2, 1), 1), Pair.of(me.dueris.canvas.Constants.PIGLIN_DO_NOTHING, 1)))), MemoryModuleType.CELEBRATE_LOCATION); // Canvas
     }
 
     private static void initAdmireItemActivity(Brain<Piglin> brain) {
@@ -182,11 +182,11 @@ public class PiglinAi {
     }
 
     private static RunOne<LivingEntity> createIdleLookBehaviors() {
-        return new RunOne<>(ImmutableList.<Pair<? extends BehaviorControl<? super LivingEntity>, Integer>>builder().addAll(PiglinAi.createLookBehaviors()).add(Pair.of(new DoNothing(30, 60), 1)).build()); // CraftBukkit - decompile error
+        return new RunOne<>(ImmutableList.<Pair<? extends BehaviorControl<? super LivingEntity>, Integer>>builder().addAll(PiglinAi.createLookBehaviors()).add(Pair.of(me.dueris.canvas.Constants.DO_NOTHING, 1)).build()); // CraftBukkit - decompile error // Canvas
     }
 
     private static RunOne<Piglin> createIdleMovementBehaviors() {
-        return new RunOne<>(ImmutableList.of(Pair.of(RandomStroll.stroll(0.6F), 2), Pair.of(InteractWith.of(EntityType.PIGLIN, 8, MemoryModuleType.INTERACTION_TARGET, 0.6F, 2), 2), Pair.of(BehaviorBuilder.triggerIf(PiglinAi::doesntSeeAnyPlayerHoldingLovedItem, SetWalkTargetFromLookTarget.create(0.6F, 3)), 2), Pair.of(new DoNothing(30, 60), 1)));
+        return new RunOne<>(ImmutableList.of(Pair.of(RandomStroll.stroll(0.6F), 2), Pair.of(InteractWith.of(EntityType.PIGLIN, 8, MemoryModuleType.INTERACTION_TARGET, 0.6F, 2), 2), Pair.of(BehaviorBuilder.triggerIf(PiglinAi::doesntSeeAnyPlayerHoldingLovedItem, SetWalkTargetFromLookTarget.create(0.6F, 3)), 2), Pair.of(me.dueris.canvas.Constants.DO_NOTHING, 1))); // Canvas
     }
 
     private static BehaviorControl<PathfinderMob> avoidRepellent() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/warden/WardenAi.java b/src/main/java/net/minecraft/world/entity/monster/warden/WardenAi.java
index fe3d3d00a79c9b1aa9a0a1c3ba8898317a77f5f3..30a64e84b3986d2b139d1b829df4cca42d59dbbd 100644
--- a/src/main/java/net/minecraft/world/entity/monster/warden/WardenAi.java
+++ b/src/main/java/net/minecraft/world/entity/monster/warden/WardenAi.java
@@ -100,7 +100,7 @@ public class WardenAi {
     }
 
     public static void initIdleActivity(Brain<Warden> brain) { // Canvas - private -> public
-        brain.addActivity(Activity.IDLE, 10, ImmutableList.of(SetRoarTarget.create(Warden::getEntityAngryAt), TryToSniff.create(), new RunOne<>(ImmutableMap.of(MemoryModuleType.IS_SNIFFING, MemoryStatus.VALUE_ABSENT), ImmutableList.of(Pair.of(RandomStroll.stroll(0.5F), 2), Pair.of(new DoNothing(30, 60), 1)))));
+        brain.addActivity(Activity.IDLE, 10, ImmutableList.of(SetRoarTarget.create(Warden::getEntityAngryAt), TryToSniff.create(), new RunOne<>(ImmutableMap.of(MemoryModuleType.IS_SNIFFING, MemoryStatus.VALUE_ABSENT), ImmutableList.of(Pair.of(RandomStroll.stroll(0.5F), 2), Pair.of(me.dueris.canvas.Constants.DO_NOTHING, 1))))); // Canvas
     }
 
     public static void initInvestigateActivity(Brain<Warden> brain) { // Canvas - private -> public
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index b55ea11830c1d5d24152772a989202014a6ed3c7..bf68f58294de7c0c993f6ab6240f02d6dae9439f 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -390,7 +390,7 @@ public abstract class Player extends LivingEntity {
     }
 
     protected ItemCooldowns createItemCooldowns() {
-        return new ItemCooldowns();
+        return me.dueris.canvas.Constants.ITEM_COOLDOWNS; // Canvas
     }
 
     private void moveCloak() {
@@ -1823,7 +1823,7 @@ public abstract class Player extends LivingEntity {
 
     @Override
     public LivingEntity.Fallsounds getFallSounds() {
-        return new LivingEntity.Fallsounds(SoundEvents.PLAYER_SMALL_FALL, SoundEvents.PLAYER_BIG_FALL);
+        return me.dueris.canvas.SoundConstants.PLAYER;
     }
 
     @Override
