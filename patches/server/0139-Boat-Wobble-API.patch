From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Mon, 20 Nov 2023 22:13:29 +0000
Subject: [PATCH] Boat Wobble API


diff --git a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
index cfdd14e0f272371ae8e824cf228ec7bdcec67ec6..52b29ac8d2d5bd130c3878a5bf907cb78f24ae40 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
@@ -102,7 +102,7 @@ public class Boat extends Entity implements VariantHolder<Boat.Type> {
     private Boat.Status oldStatus;
     private double lastYd;
     private boolean isAboveBubbleColumn;
-    private boolean bubbleColumnDirectionIsDown;
+    public boolean bubbleColumnDirectionIsDown; // Canvas - private -> public
     private float bubbleMultiplier;
     private float bubbleAngle;
     private float bubbleAngleO;
@@ -558,14 +558,25 @@ public class Boat extends Entity implements VariantHolder<Boat.Type> {
                     this.setBubbleTime(0);
                     Vec3 vec3d = this.getDeltaMovement();
 
+                    // Canvas start
+                    org.bukkit.util.Vector velocity = org.bukkit.craftbukkit.util.CraftVector.toBukkit(vec3d);
                     if (this.bubbleColumnDirectionIsDown) {
-                        this.setDeltaMovement(vec3d.add(0.0D, -0.7D, 0.0D));
-                        this.ejectPassengers();
+                        velocity.setY(velocity.getY() - 0.7D);
                     } else {
-                        this.setDeltaMovement(vec3d.x, this.hasPassenger((entity) -> {
+                        velocity.setY(this.hasPassenger((entity) -> {
                             return entity instanceof Player;
-                        }) ? 2.7D : 0.6D, vec3d.z);
+                        }) ? 2.7D : 0.6D);
                     }
+
+                    io.github.dueris.event.entity.BoatBobEvent event = new io.github.dueris.event.entity.BoatBobEvent((org.bukkit.entity.Boat) this.getBukkitEntity(), velocity);
+                    event.callEvent();
+                    if(event.isCanceled()) {
+                        if (event.getVelocity().getY() < 0.0D) {
+                            this.ejectPassengers();
+                        }
+                        this.getBukkitEntity().setVelocity(event.getVelocity());
+                    }
+                    // Canvas end
                 }
 
                 this.isAboveBubbleColumn = false;
@@ -1018,11 +1029,11 @@ public class Boat extends Entity implements VariantHolder<Boat.Type> {
         return (Integer) this.entityData.get(Boat.DATA_ID_HURT);
     }
 
-    private void setBubbleTime(int wobbleTicks) {
+    public void setBubbleTime(int wobbleTicks) { // Canvas - private -> public
         this.entityData.set(Boat.DATA_ID_BUBBLE_TIME, wobbleTicks);
     }
 
-    private int getBubbleTime() {
+    public int getBubbleTime() { // Canvas - private -> public
         return (Integer) this.entityData.get(Boat.DATA_ID_BUBBLE_TIME);
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftBoat.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftBoat.java
index 700796371b811cec2cb8cb324b885e9fe0a947c5..803b9be4c201ebd15d895f478341db402d4b7e1f 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftBoat.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftBoat.java
@@ -43,6 +43,29 @@ public class CraftBoat extends CraftVehicle implements Boat {
 
         this.getHandle().setVariant(CraftBoat.boatTypeToNms(type));
     }
+    // Canvas start
+
+    @Override
+    public int getWobbleTicks(){
+        return this.getHandle().getBubbleTime();
+    }
+
+    @Override
+    public void setWobbleTicks(int ticks){
+        Preconditions.checkArgument(0 < ticks, "Ticks cannot be less than 0");
+
+        this.getHandle().setBubbleTime(ticks);
+    }
+
+    @Override
+    public net.kyori.adventure.util.TriState willSinkAfterWobble() {
+        if (this.getWobbleTicks() == 0) {
+            return net.kyori.adventure.util.TriState.NOT_SET;
+        }
+
+        return net.kyori.adventure.util.TriState.byBoolean(this.getHandle().bubbleColumnDirectionIsDown);
+    }
+    // Canvas end
 
     @Override
     public double getMaxSpeed() {
