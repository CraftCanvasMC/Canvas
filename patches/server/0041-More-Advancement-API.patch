From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Fri, 8 Dec 2023 05:11:49 +0000
Subject: [PATCH] More Advancement API


diff --git a/src/main/java/net/minecraft/advancements/DisplayInfo.java b/src/main/java/net/minecraft/advancements/DisplayInfo.java
index d83acd5eac3d7d1893b1b97ab0b0764c06da016b..60a335392a74cde99773544b96554b28dc50a0d7 100644
--- a/src/main/java/net/minecraft/advancements/DisplayInfo.java
+++ b/src/main/java/net/minecraft/advancements/DisplayInfo.java
@@ -14,14 +14,16 @@ public class DisplayInfo {
     public static final Codec<DisplayInfo> CODEC = RecordCodecBuilder.create((instance) -> {
         return instance.group(ItemStack.ADVANCEMENT_ICON_CODEC.fieldOf("icon").forGetter(DisplayInfo::getIcon), ComponentSerialization.CODEC.fieldOf("title").forGetter(DisplayInfo::getTitle), ComponentSerialization.CODEC.fieldOf("description").forGetter(DisplayInfo::getDescription), ExtraCodecs.strictOptionalField(ResourceLocation.CODEC, "background").forGetter(DisplayInfo::getBackground), ExtraCodecs.strictOptionalField(AdvancementType.CODEC, "frame", AdvancementType.TASK).forGetter(DisplayInfo::getType), ExtraCodecs.strictOptionalField(Codec.BOOL, "show_toast", true).forGetter(DisplayInfo::shouldShowToast), ExtraCodecs.strictOptionalField(Codec.BOOL, "announce_to_chat", true).forGetter(DisplayInfo::shouldAnnounceChat), ExtraCodecs.strictOptionalField(Codec.BOOL, "hidden", false).forGetter(DisplayInfo::isHidden)).apply(instance, DisplayInfo::new);
     });
-    private final Component title;
-    private final Component description;
-    private final ItemStack icon;
-    private final Optional<ResourceLocation> background;
-    private final AdvancementType type;
-    private final boolean showToast;
-    private final boolean announceChat;
-    private final boolean hidden;
+    // Canvas start - private -> public && final -> !final
+    public Component title;
+    public Component description;
+    public ItemStack icon;
+    public Optional<ResourceLocation> background;
+    public AdvancementType type;
+    public boolean showToast;
+    public boolean announceChat;
+    public boolean hidden;
+    // Canvas end
     private float x;
     private float y;
     public final io.papermc.paper.advancement.AdvancementDisplay paper = new io.papermc.paper.advancement.PaperAdvancementDisplay(this); // Paper
@@ -45,6 +47,16 @@ public class DisplayInfo {
     public Component getTitle() {
         return this.title;
     }
+    // Canvas start
+
+    public void setTitle(Component title){
+        this.title = title;
+    }
+
+    public void setDescription(Component description){
+        this.description = description;
+    }
+    // Canvas end
 
     public Component getDescription() {
         return this.description;
@@ -53,6 +65,12 @@ public class DisplayInfo {
     public ItemStack getIcon() {
         return this.icon;
     }
+    // Canvas start
+
+    public void setIcon(ItemStack icon) {
+        this.icon = icon;
+    }
+    // Canvas end
 
     public Optional<ResourceLocation> getBackground() {
         return this.background;
@@ -73,6 +91,20 @@ public class DisplayInfo {
     public boolean shouldShowToast() {
         return this.showToast;
     }
+    // Canvas start
+    
+    public void setShouldShowToast(boolean should){
+        this.showToast = should;
+    }
+
+    public void setShouldAnnounceChat(boolean should){
+        this.announceChat = should;
+    }
+
+    public void setHidden(boolean hidden) {
+        this.hidden = hidden;
+    }
+    // Canvas end
 
     public boolean shouldAnnounceChat() {
         return this.announceChat;
diff --git a/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancement.java b/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancement.java
index bd640e0d8d796ee114ff787def7e07edbeffc0a5..ae06c2a2547af758b8a94e8cfbd89dd7a6ea591d 100644
--- a/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancement.java
+++ b/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancement.java
@@ -4,6 +4,7 @@ import java.util.Collection;
 import java.util.Collections;
 import net.minecraft.advancements.AdvancementHolder;
 import org.bukkit.NamespacedKey;
+import org.bukkit.advancement.Advancement;
 import org.bukkit.advancement.AdvancementDisplay;
 import org.bukkit.craftbukkit.util.CraftNamespacedKey;
 
diff --git a/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancementDisplay.java b/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancementDisplay.java
index 62ada73302c6b3ce3fb2dcc8c31a1d9c0ac4fd09..3aa86f247ff364b24a0e98a700ad0b6f98201ece 100644
--- a/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancementDisplay.java
+++ b/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancementDisplay.java
@@ -23,6 +23,18 @@ public class CraftAdvancementDisplay implements org.bukkit.advancement.Advanceme
     public String getTitle() {
         return CraftChatMessage.fromComponent(this.handle.getTitle());
     }
+    // Canvas start
+
+    @Override
+    public void setTitle(String title){
+        this.getHandle().setTitle(CraftChatMessage.fromStringOrNull(title));
+    }
+
+    @Override
+    public void setDescription(String description){
+        this.getHandle().setTitle(CraftChatMessage.fromStringOrNull(description));
+    }
+    // Canvas end
 
     @Override
     public String getDescription() {
@@ -38,6 +50,18 @@ public class CraftAdvancementDisplay implements org.bukkit.advancement.Advanceme
     public boolean shouldShowToast() {
         return this.handle.shouldShowToast();
     }
+    // Canvas start
+
+    @Override
+    public void setShouldShowToast(boolean should){
+        this.getHandle().setShouldShowToast(should);
+    }
+
+    @Override
+    public void setShouldAnnounceChat(boolean should){
+        this.getHandle().setShouldAnnounceChat(should);
+    }
+    // Canvas end
 
     @Override
     public boolean shouldAnnounceChat() {
@@ -63,4 +87,16 @@ public class CraftAdvancementDisplay implements org.bukkit.advancement.Advanceme
     public AdvancementDisplayType getType() {
         return AdvancementDisplayType.values()[this.handle.getType().ordinal()];
     }
+    // Canvas start - more advancement apis
+
+    @Override
+    public void setHidden(boolean hidden) {
+        this.getHandle().setHidden(hidden);
+    }
+
+    @Override
+    public void setIcon(org.bukkit.inventory.ItemStack item){
+        this.getHandle().setIcon(CraftItemStack.unwrap(item));
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancementProgress.java b/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancementProgress.java
index ec3b9cb901913b093c3eb0bda8dc0dbb738c165e..6bd0000ea3365f10876f8cd9462ac0d1195cd491 100644
--- a/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancementProgress.java
+++ b/src/main/java/org/bukkit/craftbukkit/advancement/CraftAdvancementProgress.java
@@ -20,6 +20,12 @@ public class CraftAdvancementProgress implements AdvancementProgress {
         this.playerData = player;
         this.handle = handle;
     }
+    // Canvas start - no handle method?
+
+    public net.minecraft.advancements.AdvancementProgress getHandle(){
+        return this.handle;
+    }
+    // Canvas end
 
     @Override
     public Advancement getAdvancement() {
