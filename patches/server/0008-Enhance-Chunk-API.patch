From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Thu, 13 Jun 2024 17:40:14 -0700
Subject: [PATCH] Enhance Chunk API


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
index 92f1ea81b5e90529905d9c508aca18c31443ff6a..549c27ee994c34a20d331e6c07fa4390090bc2bf 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
@@ -5,10 +5,16 @@ import com.google.common.base.Predicates;
 import com.mojang.serialization.Codec;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
 import java.util.Objects;
+import java.util.Random;
+import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.locks.LockSupport;
 import java.util.function.BooleanSupplier;
 import java.util.function.Predicate;
+import io.papermc.paper.math.Position;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Holder;
 import net.minecraft.core.Registry;
@@ -17,6 +23,8 @@ import net.minecraft.core.registries.Registries;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtOps;
 import net.minecraft.server.level.ServerLevel;
+import net.minecraft.util.Mth;
+import net.minecraft.util.RandomSource;
 import net.minecraft.util.thread.ProcessorMailbox;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.LightLayer;
@@ -25,6 +33,7 @@ import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.chunk.ChunkAccess;
 import net.minecraft.world.level.chunk.DataLayer;
 import net.minecraft.world.level.chunk.ImposterProtoChunk;
+import net.minecraft.world.level.chunk.LevelChunk;
 import net.minecraft.world.level.chunk.LevelChunkSection;
 import net.minecraft.world.level.chunk.PalettedContainer;
 import net.minecraft.world.level.chunk.PalettedContainerRO;
@@ -35,8 +44,11 @@ import net.minecraft.world.level.entity.PersistentEntitySectionManager;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
 import net.minecraft.world.level.lighting.LevelLightEngine;
+import org.bukkit.Bukkit;
 import org.bukkit.Chunk;
 import org.bukkit.ChunkSnapshot;
+import org.bukkit.Location;
+import org.bukkit.Material;
 import org.bukkit.World;
 import org.bukkit.block.Biome;
 import org.bukkit.block.Block;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 8211ec2c701687d8e5334156772cf435b89f3cb3..f06590946f5c78a440d53fd5fe1231d323919461 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -110,6 +110,7 @@ import net.minecraft.world.phys.Vec3;
 import org.bukkit.BanEntry;
 import org.bukkit.BanList;
 import org.bukkit.Bukkit;
+import org.bukkit.Chunk;
 import org.bukkit.DyeColor;
 import org.bukkit.Effect;
 import org.bukkit.GameMode;
@@ -3103,6 +3104,32 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         this.getHandle().adventure$displayName = displayName != null ? displayName : net.kyori.adventure.text.Component.text(this.getName());
         this.getHandle().displayName = null;
     }
+    // Canvas start
+    
+    @Override
+    public Chunk[] getChunksInRenderDistance() {
+        int viewDistance = this.getClientViewDistance();
+        int playerChunkX = this.getLocation().getChunk().getX();
+        int playerChunkZ = this.getLocation().getChunk().getZ();
+
+        int startChunkX = playerChunkX - viewDistance;
+        int endChunkX = playerChunkX + viewDistance;
+        int startChunkZ = playerChunkZ - viewDistance;
+        int endChunkZ = playerChunkZ + viewDistance;
+
+        Chunk[] chunksInPlayerView = new Chunk[(endChunkX - startChunkX + 1) * (endChunkZ - startChunkZ + 1)];
+        int index = 0;
+
+        for (int x = startChunkX; x <= endChunkX; x++) {
+            for (int z = startChunkZ; z <= endChunkZ; z++) {
+                chunksInPlayerView[index] = this.getWorld().getChunkAt(x, z);
+                index++;
+            }
+        }
+
+        return chunksInPlayerView;
+    }
+    // Canvas end
 
     @Override
     public void deleteMessage(net.kyori.adventure.chat.SignedMessage.Signature signature) {
diff --git a/src/main/java/org/bukkit/craftbukkit/generator/CustomChunkGenerator.java b/src/main/java/org/bukkit/craftbukkit/generator/CustomChunkGenerator.java
index c77f722131e0e40e9de29bf8d42f9bc5d8fa2f7d..13e82c36da87d6e28e88529d3cdd429c3d84fde3 100644
--- a/src/main/java/org/bukkit/craftbukkit/generator/CustomChunkGenerator.java
+++ b/src/main/java/org/bukkit/craftbukkit/generator/CustomChunkGenerator.java
@@ -96,7 +96,7 @@ public class CustomChunkGenerator extends InternalChunkGenerator {
         return this.delegate;
     }
 
-    private static WorldgenRandom getSeededRandom() {
+    public static WorldgenRandom getSeededRandom() { // Canvas - private -> public
         return new WorldgenRandom(new LegacyRandomSource(0));
     }
 
