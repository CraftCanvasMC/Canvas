From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Wed, 1 Nov 2023 21:41:26 +0000
Subject: [PATCH] More Animal APIs


diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 4c58be79a9e8249a5aa0476a472c350dfb9b1fa0..533d917eab8e483aeff5f989dfa7e24716756312 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -2834,10 +2834,25 @@ public abstract class LivingEntity extends Entity implements Attackable {
     public void setWaterSlowdown(float slowdown){
         this.waterslowdown = waterslowdown;
     }
+    // Canvas start
+    private boolean canStandWater = false;
+    private boolean canStandLava = false;
+    public void setCanStandOnWater(boolean can){
+        this.canStandWater = can;
+    }
+
+    public void setCanStandOnLava(boolean can){
+        this.canStandLava = can;
+    }
 
     public boolean canStandOnFluid(FluidState state) {
-        return false;
+        if(state.is(FluidTags.WATER)){
+            return canStandWater;
+        }else{
+            return canStandLava;
+        }
     }
+    // Canvas end
 
     public void travel(Vec3 movementInput) {
         if (this.isControlledByLocalInstance()) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cow.java b/src/main/java/net/minecraft/world/entity/animal/Cow.java
index 6d00b3cd4a9cb0fc8a9e9c27f37429a25fcf6e9d..cbcc2961a17ce3562904913742ca1186072ea137 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cow.java
@@ -47,8 +47,12 @@ public class Cow extends Animal {
     public Cow(EntityType<? extends Cow> type, Level world) {
         super(type, world);
     }
+    // Canvas start
 
-    // Purpur start
+    public void convertToMushroom(){
+        this.convertTo(EntityType.MOOSHROOM, false);
+    }
+    // Canvas end -/- Purpur start
     @Override
     public boolean isRidable() {
         return level().purpurConfig.cowRidable;
diff --git a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
index 59ef1070c6c1ac876e097cd23835e4ed8b6e732f..baec9ec880d2eeacb9d41f4238483a6ab625603c 100644
--- a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
@@ -62,8 +62,12 @@ public class MushroomCow extends Cow implements Shearable, VariantHolder<Mushroo
     public MushroomCow(EntityType<? extends MushroomCow> type, Level world) {
         super(type, world);
     }
+    // Canvas start
 
-    // Purpur start
+    public void convertToNormal(){
+        this.convertTo(EntityType.COW, false);
+    }
+    // Canvas end -/- Purpur start
     @Override
     public boolean isRidable() {
         return level().purpurConfig.mooshroomRidable;
diff --git a/src/main/java/net/minecraft/world/entity/animal/Panda.java b/src/main/java/net/minecraft/world/entity/animal/Panda.java
index 505469cf6b7fa66c6cbac73a49e4eec850d5bfec..2b081f3b646d68fb6d6d454b006fe70ec7a1032c 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Panda.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Panda.java
@@ -51,6 +51,7 @@ import net.minecraft.world.entity.ai.goal.TemptGoal;
 import net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal;
 import net.minecraft.world.entity.ai.goal.target.HurtByTargetGoal;
 import net.minecraft.world.entity.ai.targeting.TargetingConditions;
+import net.minecraft.world.entity.animal.Panda.PandaSneezeGoal;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.monster.Monster;
 import net.minecraft.world.entity.player.Player;
@@ -318,6 +319,11 @@ public class Panda extends Animal {
 
         return entitypanda;
     }
+    // Canvas start
+    public PandaSneezeGoal sneezGoal;
+    public PandaLieOnBackGoal lieOnBackGoal;
+    public PandaRollGoal rollGoal;
+    // Canvas end
 
     @Override
     protected void registerGoals() {
@@ -330,12 +336,18 @@ public class Panda extends Animal {
         this.goalSelector.addGoal(6, new Panda.PandaAvoidGoal<>(this, Player.class, 8.0F, 2.0D, 2.0D));
         this.goalSelector.addGoal(6, new Panda.PandaAvoidGoal<>(this, Monster.class, 4.0F, 2.0D, 2.0D));
         this.goalSelector.addGoal(7, new Panda.PandaSitGoal());
-        this.goalSelector.addGoal(8, new Panda.PandaLieOnBackGoal(this));
-        this.goalSelector.addGoal(8, new Panda.PandaSneezeGoal(this));
+        // Canvas start
+        this.sneezGoal = new PandaSneezeGoal(this);
+        this.goalSelector.addGoal(8, this.sneezGoal);
+        this.lieOnBackGoal = new PandaLieOnBackGoal(this);
+        this.goalSelector.addGoal(8, this.lieOnBackGoal);
+        this.rollGoal = new PandaRollGoal(this);
+        this.goalSelector.addGoal(12, this.rollGoal);
+        // Canvas end
         this.lookAtPlayerGoal = new Panda.PandaLookAtPlayerGoal(this, Player.class, 6.0F);
         this.goalSelector.addGoal(9, this.lookAtPlayerGoal);
         this.goalSelector.addGoal(10, new RandomLookAroundGoal(this));
-        this.goalSelector.addGoal(12, new Panda.PandaRollGoal(this));
+//         this.goalSelector.addGoal(12, new Panda.PandaRollGoal(this));
         this.goalSelector.addGoal(13, new FollowParentGoal(this, 1.25D));
         this.goalSelector.addGoal(14, new WaterAvoidingRandomStrollGoal(this, 1.0D));
         this.targetSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
@@ -541,7 +553,7 @@ public class Panda extends Animal {
         return Mth.lerp(tickDelta, this.rollAmountO, this.rollAmount);
     }
 
-    private void handleRoll() {
+    public void handleRoll() { // Canvas - private -> public
         ++this.rollCounter;
         if (this.rollCounter > 32) {
             this.roll(false);
@@ -1010,7 +1022,7 @@ public class Panda extends Animal {
         }
     }
 
-    private static class PandaLieOnBackGoal extends Goal {
+    public static class PandaLieOnBackGoal extends Goal { // Canvas - private -> public
 
         private final Panda panda;
         private int cooldown;
@@ -1042,7 +1054,7 @@ public class Panda extends Animal {
         }
     }
 
-    private static class PandaSneezeGoal extends Goal {
+    public static class PandaSneezeGoal extends Goal { // Canvas - private -> public
 
         private final Panda panda;
 
@@ -1112,7 +1124,7 @@ public class Panda extends Animal {
         }
     }
 
-    private static class PandaRollGoal extends Goal {
+    public static class PandaRollGoal extends Goal { // Canvas - private -> public
 
         private final Panda panda;
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Parrot.java b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
index d97ca9d567df224c34eba306b4c9b7df65f31824..9ee7399308475ea16211efb902bdaa8235f4c26c 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Parrot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
@@ -70,6 +70,8 @@ import net.minecraft.world.level.block.LeavesBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.Vec3;
+
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 import org.joml.Vector3f;
 
 public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot.Variant>, FlyingAnimal {
@@ -80,7 +82,16 @@ public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot
             return entityinsentient != null && Parrot.MOB_SOUND_MAP.containsKey(entityinsentient.getType());
         }
     };
-    private static final Item POISONOUS_FOOD = Items.COOKIE;
+    private Item POISONOUS_FOOD = Items.COOKIE; // Canvas - static/final -> private
+    // Canvas start
+    public void setPoisonousFood(org.bukkit.Material material){
+        this.POISONOUS_FOOD = CraftMagicNumbers.getItem(material);
+    }
+
+    public org.bukkit.Material getPoisonousFood(){
+        return CraftMagicNumbers.getMaterial(this.POISONOUS_FOOD);
+    }
+    // Canvas end
     private static final Set<Item> TAME_FOOD = Sets.newHashSet(new Item[]{Items.WHEAT_SEEDS, Items.MELON_SEEDS, Items.PUMPKIN_SEEDS, Items.BEETROOT_SEEDS, Items.TORCHFLOWER_SEEDS, Items.PITCHER_POD});
     static final Map<EntityType<?>, SoundEvent> MOB_SOUND_MAP = (Map) Util.make(Maps.newHashMap(), (hashmap) -> {
         hashmap.put(EntityType.BLAZE, SoundEvents.PARROT_IMITATE_BLAZE);
@@ -227,6 +238,13 @@ public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot
     public boolean isBaby() {
         return false;
     }
+    // Canvas start
+    public LandOnOwnersShoulderGoal landOnOwnersShoulderGoal;
+
+    public void landOnShoulder(){
+        this.landOnOwnersShoulderGoal.start();
+    }
+    // Canvas end
 
     @Override
     protected void registerGoals() {
@@ -239,7 +257,10 @@ public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot
         this.goalSelector.addGoal(2, new SitWhenOrderedToGoal(this));
         this.goalSelector.addGoal(2, new FollowOwnerGoal(this, 1.0D, 5.0F, 1.0F, true));
         this.goalSelector.addGoal(2, new Parrot.ParrotWanderGoal(this, 1.0D));
-        this.goalSelector.addGoal(3, new LandOnOwnersShoulderGoal(this));
+        // Canvas start
+        this.landOnOwnersShoulderGoal = new LandOnOwnersShoulderGoal(this);
+        this.goalSelector.addGoal(3, this.landOnOwnersShoulderGoal);
+        // Canvas end
         this.goalSelector.addGoal(3, new FollowMobGoal(this, 1.0D, 3.0F, 7.0F));
     }
 
@@ -351,7 +372,7 @@ public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot
 
             if (this.level().purpurConfig.parrotBreedable) return super.mobInteract(player, hand); // Purpur
             return InteractionResult.sidedSuccess(this.level().isClientSide);
-        } else if (itemstack.is(Parrot.POISONOUS_FOOD)) {
+        } else if (itemstack.is(this.POISONOUS_FOOD)) {
             if (!player.getAbilities().instabuild) {
                 itemstack.shrink(1);
             }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pig.java b/src/main/java/net/minecraft/world/entity/animal/Pig.java
index b8de9c4630fbdaad2d3a4ca6d27a61873ddbda2e..85d5466c4891deadb1c35399826281147b092660 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pig.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pig.java
@@ -41,6 +41,7 @@ import net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal;
 import net.minecraft.world.entity.monster.ZombifiedPiglin;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.vehicle.DismountHelper;
+import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.item.crafting.Ingredient;
@@ -54,6 +55,7 @@ import org.joml.Vector3f;
 // CraftBukkit start
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 // CraftBukkit end
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 
 public class Pig extends Animal implements ItemSteerable, Saddleable {
 
@@ -103,6 +105,25 @@ public class Pig extends Animal implements ItemSteerable, Saddleable {
     protected boolean isAlwaysExperienceDropper() {
         return this.level().purpurConfig.pigAlwaysDropExp;
     }
+    // Canvas start
+    public TemptGoal RIDE_ITEM_GOAL;
+    public Item rideItem = Items.CARROT_ON_A_STICK;
+
+    public void setRideItem(org.bukkit.Material material){
+        this.rideItem = CraftMagicNumbers.getItem(material);
+        this.updateRideGoal();
+    }
+
+    protected void updateRideGoal(){
+        this.goalSelector.removeGoal(this.RIDE_ITEM_GOAL);
+        this.RIDE_ITEM_GOAL = new TemptGoal(this, 1.2D, Ingredient.of(this.rideItem), false);
+        this.goalSelector.addGoal(4, this.RIDE_ITEM_GOAL);
+    }
+
+    public org.bukkit.Material getRideItem(){
+        return CraftMagicNumbers.getMaterial(this.rideItem);
+    }
+    // Canvas end
 
     @Override
     protected void registerGoals() {
@@ -110,7 +131,10 @@ public class Pig extends Animal implements ItemSteerable, Saddleable {
         this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
         this.goalSelector.addGoal(1, new PanicGoal(this, 1.25D));
         this.goalSelector.addGoal(3, new BreedGoal(this, 1.0D));
-        this.goalSelector.addGoal(4, new TemptGoal(this, 1.2D, Ingredient.of(Items.CARROT_ON_A_STICK), false));
+        // Canvas start
+        this.RIDE_ITEM_GOAL = new TemptGoal(this, 1.2D, Ingredient.of(this.rideItem), false);
+        this.goalSelector.addGoal(4, this.RIDE_ITEM_GOAL);
+        // Canvas end
         this.goalSelector.addGoal(4, new TemptGoal(this, 1.2D, Pig.FOOD_ITEMS, false));
         this.goalSelector.addGoal(5, new FollowParentGoal(this, 1.1D));
         this.goalSelector.addGoal(6, new WaterAvoidingRandomStrollGoal(this, 1.0D));
diff --git a/src/main/java/net/minecraft/world/entity/monster/Strider.java b/src/main/java/net/minecraft/world/entity/monster/Strider.java
index 2f49b528601a1feb7246fe7a9b83ce828c2d78fc..63feee4f0b8cffab20f523cb2bf069b8099e354f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Strider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Strider.java
@@ -82,7 +82,7 @@ public class Strider extends Animal implements ItemSteerable, Saddleable {
     private static final float SUFFOCATE_STEERING_MODIFIER = 0.35F;
     private static final float STEERING_MODIFIER = 0.55F;
     private static final Ingredient FOOD_ITEMS = Ingredient.of(Items.WARPED_FUNGUS);
-    private static final Ingredient TEMPT_ITEMS = Ingredient.of(Items.WARPED_FUNGUS, Items.WARPED_FUNGUS_ON_A_STICK);
+    // private static final Ingredient TEMPT_ITEMS = Ingredient.of(Items.WARPED_FUNGUS, Items.WARPED_FUNGUS_ON_A_STICK); - Canvas - move to this.rideItem for steering item customization
     private static final EntityDataAccessor<Integer> DATA_BOOST_TIME = SynchedEntityData.defineId(Strider.class, EntityDataSerializers.INT);
     private static final EntityDataAccessor<Boolean> DATA_SUFFOCATING = SynchedEntityData.defineId(Strider.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Boolean> DATA_SADDLE_ID = SynchedEntityData.defineId(Strider.class, EntityDataSerializers.BOOLEAN);
@@ -189,13 +189,35 @@ public class Strider extends Animal implements ItemSteerable, Saddleable {
         }
 
     }
+    // Canvas start
+    public TemptGoal RIDE_ITEM_GOAL;
+    public net.minecraft.world.item.Item rideItem = Items.WARPED_FUNGUS_ON_A_STICK;
+
+    public void setRideItem(org.bukkit.Material material){
+        this.rideItem = org.bukkit.craftbukkit.util.CraftMagicNumbers.getItem(material);
+        this.updateRideGoal();
+    }
+
+    protected void updateRideGoal(){
+        this.goalSelector.removeGoal(this.RIDE_ITEM_GOAL);
+        this.RIDE_ITEM_GOAL = new TemptGoal(this, 1.2D, Ingredient.of(this.rideItem), false);
+        this.goalSelector.addGoal(4, this.RIDE_ITEM_GOAL);
+    }
+
+    public org.bukkit.Material getRideItem(){
+        return org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(this.rideItem);
+    }
+    // Canvas end
 
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new PanicGoal(this, 1.65D));
         this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
         this.goalSelector.addGoal(2, new BreedGoal(this, 1.0D));
-        this.temptGoal = new TemptGoal(this, 1.4D, Strider.TEMPT_ITEMS, false);
+        // Canvas start
+        this.RIDE_ITEM_GOAL = new TemptGoal(this, 1.2D, Ingredient.of(this.rideItem), false);
+        this.goalSelector.addGoal(4, this.RIDE_ITEM_GOAL);
+        // Canvas end
         this.goalSelector.addGoal(3, this.temptGoal);
         this.goalSelector.addGoal(4, new Strider.StriderGoToLavaGoal(this, 1.0D));
         this.goalSelector.addGoal(5, new FollowParentGoal(this, 1.0D));
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftCat.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftCat.java
index cea78de9713d5be1df3a6abdd167cd51093501f4..81d50b484a97565e176418a2cae1790fe38b1226 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftCat.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftCat.java
@@ -111,5 +111,5 @@ public class CraftCat extends CraftTameableAnimal implements Cat {
     public void spawnMorningGift() {
         this.getHandle().giveMorningGift();
     }
-    // Paper End - More cat api -&- Canvas end
+    // Paper End - More cat api -/- Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftCow.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftCow.java
index 7babc404e4920cd264206d4e83b1be6f841cdb8c..520bbdbb59a110ca8828ec7114da25df81a53f81 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftCow.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftCow.java
@@ -18,4 +18,11 @@ public class CraftCow extends CraftAnimals implements Cow {
     public String toString() {
         return "CraftCow";
     }
+    // Canvas start
+
+    @Override
+    public void convertToMushroom(){
+        this.getHandle().convertToMushroom();
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntityType.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntityType.java
index 18ef90b574dca82c1729868a83612ca06a6ccdce..814ee0946b6c977a695189ba818d7a2d3b9d6f68 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntityType.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntityType.java
@@ -26,4 +26,4 @@ public class CraftEntityType {
         return CraftRegistry.getMinecraftRegistry(Registries.ENTITY_TYPE)
                 .getOptional(KEY_CACHE.computeIfAbsent(bukkit, type -> net.minecraft.resources.ResourceKey.create(Registries.ENTITY_TYPE, CraftNamespacedKey.toMinecraft(type.getKey())))).orElseThrow();
     }
-}
+}
\ No newline at end of file
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
index 9df999aad9caab2261e1c9dcb06072f2c23bce5d..4cf0f7601fb061c0f33632c580d08d128ed9d83e 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
@@ -59,7 +59,13 @@ public abstract class CraftMob extends CraftLivingEntity implements Mob {
     private CraftMob getSelf(){
         return this;
     }
+    // Canvas start
 
+    @Override
+    public void convertTo(EntityType entityType, boolean keepEquipment){
+        net.minecraft.world.entity.EntityType ENT = org.bukkit.craftbukkit.entity.CraftEntityType.bukkitToMinecraft(entityType);
+        this.getHandle().convertTo(ENT, keepEquipment);
+    }
     // Canvas end
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftMushroomCow.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftMushroomCow.java
index 7ee489da5963fd722fc2531fef14911447a16557..e74febc54a82256a0a63d7f5806094f1154fd9f4 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftMushroomCow.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftMushroomCow.java
@@ -53,4 +53,11 @@ public class CraftMushroomCow extends CraftCow implements MushroomCow, io.paperm
     public String toString() {
         return "CraftMushroomCow";
     }
+    // Canvas start
+
+    @Override
+    public void convertToNormal(){
+        this.getHandle().convertToNormal();
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPanda.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPanda.java
index 56f9630dbe5d18d5ec33dc85f6531723022d6a3b..2b6404f8c41ea01a62917fe1ba3f77fa7556b9b7 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPanda.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPanda.java
@@ -4,6 +4,7 @@ import com.google.common.base.Preconditions;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.entity.Panda;
 import org.bukkit.entity.Panda.Gene;
+import org.jetbrains.annotations.ApiStatus.OverrideOnly;
 
 public class CraftPanda extends CraftAnimals implements Panda {
 
@@ -138,4 +139,20 @@ public class CraftPanda extends CraftAnimals implements Panda {
 
         return net.minecraft.world.entity.animal.Panda.Gene.values()[gene.ordinal()];
     }
+    // Canvas start
+    @Override
+    public void roll(){
+        this.getHandle().rollGoal.start();
+    }
+
+    @Override
+    public void sneeze(){
+        this.getHandle().sneezGoal.start();
+    }
+
+    @Override
+    public void lieOnBack(){
+        this.getHandle().lieOnBackGoal.start();
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftParrot.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftParrot.java
index 04d6cf6a1f3ae8316e3b2862c2d1b04e84a3b20a..2dd49a3accf529b85d575aa1c30edbb383a27dbe 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftParrot.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftParrot.java
@@ -4,6 +4,7 @@ import com.google.common.base.Preconditions;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.entity.Parrot;
 import org.bukkit.entity.Parrot.Variant;
+import org.jetbrains.annotations.ApiStatus.OverrideOnly;
 
 public class CraftParrot extends CraftTameableAnimal implements Parrot {
 
@@ -37,4 +38,21 @@ public class CraftParrot extends CraftTameableAnimal implements Parrot {
     public boolean isDancing() {
         return this.getHandle().isPartyParrot();
     }
+    // Canvas start
+
+    @Override
+    public void landOnShoulder(){
+        this.getHandle().landOnShoulder();
+    }
+
+    @Override
+    public void setPoisonousFood(org.bukkit.Material material){
+        this.getHandle().setPoisonousFood(material);
+    }
+
+    @Override
+    public org.bukkit.Material getPoisonousFood(){
+        return this.getHandle().getPoisonousFood();
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPig.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPig.java
index afafa56927af170abe92cfe0d7aced4722f1652a..2ef32f4f86d458404e3c698997d2f314132dc1f2 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPig.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPig.java
@@ -52,8 +52,18 @@ public class CraftPig extends CraftAnimals implements Pig {
 
     @Override
     public Material getSteerMaterial() {
-        return Material.CARROT_ON_A_STICK;
+        return this.getRideItem(); // Canvas
     }
+    // Canvas start
+
+    public void setSteerMaterial(org.bukkit.Material material){
+        this.getHandle().setRideItem(material);
+    }
+
+    private org.bukkit.Material getRideItem(){
+        return this.getHandle().getRideItem();
+    }
+    // Canvas end
 
     @Override
     public net.minecraft.world.entity.animal.Pig getHandle() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftStrider.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftStrider.java
index fde5d08bbdad9bbd340075a3dd082a7f05df0136..848700bf7547ac738fa819a2d15ebe6f27225ae8 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftStrider.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftStrider.java
@@ -62,8 +62,15 @@ public class CraftStrider extends CraftAnimals implements Strider {
 
     @Override
     public Material getSteerMaterial() {
-        return Material.WARPED_FUNGUS_ON_A_STICK;
+        return this.getHandle().getRideItem(); // Canvas
     }
+    // Canvas start
+
+    @Override
+    public void setSteerMaterial(org.bukkit.Material material){
+        this.getHandle().setRideItem(material);
+    }
+    // Canvas end
 
     @Override
     public net.minecraft.world.entity.monster.Strider getHandle() {
