From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Fri, 8 Dec 2023 04:31:37 +0000
Subject: [PATCH] fixed Purpur upstream patches


diff --git a/build.gradle.kts b/build.gradle.kts
index 0490d26838f131b2fae967eada18cf150579c7f6..9e190462397a15e75592f3f02e1f2017d727c346 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -93,7 +93,7 @@ tasks.jar {
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
             "Implementation-Title" to "CraftBukkit",
-            "Implementation-Version" to "git-Purpur-$implementationVersion", // Purpur
+            "Implementation-Version" to "git-Canvas-$implementationVersion", // Purpur // Canvas
             "Implementation-Vendor" to date, // Paper
             "Specification-Title" to "Bukkit",
             "Specification-Version" to project.version,
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 2e70ac06c1a6414d9fbbc7a929968e804f0a91f5..f296961fdb7cf82e6e7ccaee950c64fa099fa440 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -1,5 +1,6 @@
 package net.minecraft.server.dedicated;
 
+import me.dueris.canvas.CanvasConfig;
 import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.DataFixer;
@@ -16,6 +17,7 @@ import java.nio.file.Path;
 import java.util.Collections;
 import java.util.List;
 import java.util.Locale;
+import java.util.Objects;
 import java.util.Optional;
 import java.util.function.BooleanSupplier;
 import javax.annotation.Nullable;
@@ -205,6 +207,14 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         org.spigotmc.SpigotConfig.init((java.io.File) this.options.valueOf("spigot-settings"));
         org.spigotmc.SpigotConfig.registerCommands();
         // Spigot end
+        // Canvas start
+        try {
+                CanvasConfig.init((java.io.File) options.valueOf("canvas-settings"));
+            } catch (Exception e) {
+                DedicatedServer.LOGGER.error("Unable to load canvas-server configuration", e);
+                return false;
+            }
+        // Canvas end
         // Paper start
         io.papermc.paper.util.ObfHelper.INSTANCE.getClass(); // Paper - load mappings for stacktrace deobf and etc.
         paperConfigurations.initializeGlobalConfiguration(this.registryAccess());
@@ -582,11 +592,19 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
 
     public void showGui() {
         if (this.gui == null) {
-            this.gui = MinecraftServerGui.showFrameFor(this);
+            try {
+                this.gui = MinecraftServerGui.showFrameFor(this, javax.imageio.ImageIO.read(Objects.requireNonNull(MinecraftServerGui.class.getClassLoader().getResourceAsStream("logo.png"))));
+            } catch (IOException e) {
+                throw new RuntimeException(e);
+            }
         }
 
     }
 
+    public MinecraftServerGui getGui(){
+        return this.gui;
+    }
+
     @Override
     public boolean hasGui() {
         return this.gui != null;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 1677e737daa272d7669777a75214170a8e9c7d74..fc8a7ce4181a117316798c762eefb3e35d593f90 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1,5 +1,12 @@
 package org.bukkit.craftbukkit;
 
+import me.dueris.canvas.CanvasConfig;
+import me.dueris.canvas.CraftServerGui;
+import me.dueris.canvas.logger.CanvasLogger;
+import me.dueris.canvas.logger.CraftCanvasLogger;
+import me.dueris.canvas.logger.Obfuscator;
+import me.dueris.canvas.network.ChatChannelContainer;
+import me.dueris.canvas.network.ChatChannelManager;
 import com.google.common.base.Charsets;
 import com.google.common.base.Function;
 import com.google.common.base.Preconditions;
@@ -259,6 +266,7 @@ import org.bukkit.scoreboard.Criteria;
 import org.bukkit.structure.StructureManager;
 import org.bukkit.util.StringUtil;
 import org.bukkit.util.permissions.DefaultPermissions;
+import org.jetbrains.annotations.NotNull;
 import org.yaml.snakeyaml.LoaderOptions;
 import org.yaml.snakeyaml.Yaml;
 import org.yaml.snakeyaml.constructor.SafeConstructor;
@@ -270,8 +278,14 @@ import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper
 
 public final class CraftServer implements Server {
-    private final String serverName = "Purpur"; // Paper // Purpur
+    private final String serverName = "Canvas"; // Paper // Purpur // Canvas
     private final String serverVersion;
+    // Canvas start
+    public static CraftCanvasLogger.Obfuscator canvas_obfuscator = null;
+    private final CraftCanvasLogger craftCanvasLogger = new CraftCanvasLogger();
+    private final ChatChannelManager chatChannelManager = new ChatChannelManager();
+
+    // Canvas end
     private final String bukkitVersion = Versioning.getBukkitVersion();
     private final Logger logger = Logger.getLogger("Minecraft");
     private final ServicesManager servicesManager = new SimpleServicesManager();
@@ -663,6 +677,26 @@ public final class CraftServer implements Server {
         return this.serverName;
     }
 
+    @Override
+    public @NotNull Obfuscator getObfuscator() {
+        return this.canvas_obfuscator;
+    }
+
+    @Override
+    public @NotNull CanvasLogger getCanvasLogger() {
+        return this.craftCanvasLogger;
+    }
+
+    @Override
+    public @NotNull CraftServerGui getServerGui() {
+        return this.console.getGui();
+    }
+
+    // @Override
+    // public @NotNull ChatChannelContainer getChatChannelManager() {
+    //     return this.chatChannelManager;
+    // }
+
     @Override
     public String getVersion() {
         return this.serverVersion + " (MC: " + this.console.getServerVersion() + ")";
@@ -1051,6 +1085,7 @@ public final class CraftServer implements Server {
         org.spigotmc.SpigotConfig.init((File) this.console.options.valueOf("spigot-settings")); // Spigot
         this.console.paperConfigurations.reloadConfigs(this.console);
         org.purpurmc.purpur.PurpurConfig.init((File) console.options.valueOf("purpur-settings")); // Purpur
+        CanvasConfig.init((File) console.options.valueOf("canvas-settings")); // Canvas
         for (ServerLevel world : this.console.getAllLevels()) {
             // world.serverLevelData.setDifficulty(config.difficulty); // Paper - per level difficulty
             world.setSpawnSettings(world.serverLevelData.getDifficulty() != Difficulty.PEACEFUL && config.spawnMonsters, config.spawnAnimals); // Paper - per level difficulty (from MinecraftServer#setDifficulty(ServerLevel, Difficulty, boolean))
