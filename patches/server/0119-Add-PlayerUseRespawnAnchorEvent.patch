From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sat, 11 Nov 2023 14:48:52 -0800
Subject: [PATCH] Add PlayerUseRespawnAnchorEvent


diff --git a/src/main/java/net/minecraft/world/level/block/RespawnAnchorBlock.java b/src/main/java/net/minecraft/world/level/block/RespawnAnchorBlock.java
index ae17d6a54fad0bd2d71d306f418b5ced2f11b863..4f0d7e8acbae03d5db5a9f3ae910dabe82a0e39b 100644
--- a/src/main/java/net/minecraft/world/level/block/RespawnAnchorBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/RespawnAnchorBlock.java
@@ -7,6 +7,7 @@ import java.util.Objects;
 import java.util.Optional;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
+import io.github.dueris.event.player.PlayerUseRespawnAnchorEvent;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.Vec3i;
@@ -57,41 +58,49 @@ public class RespawnAnchorBlock extends Block {
     @Override
     public InteractionResult use(BlockState state, Level world, BlockPos pos, Player player, InteractionHand hand, BlockHitResult hit) {
         ItemStack itemstack = player.getItemInHand(hand);
+        // Canvas start - add PlayerUseRespawnAnchorEvent
+        org.bukkit.entity.Player bukkitPlayer = player.getBukkitEntity() instanceof org.bukkit.entity.Player ? (org.bukkit.entity.Player) player.getBukkitEntity() : null;
+        org.bukkit.block.Block block = org.bukkit.craftbukkit.block.CraftBlock.at(world, pos);
+        PlayerUseRespawnAnchorEvent useRespawnAnchorEvent = new PlayerUseRespawnAnchorEvent(block, bukkitPlayer);
+        useRespawnAnchorEvent.callEvent();
+        if(!useRespawnAnchorEvent.getCanceled()){
+            if (hand == InteractionHand.MAIN_HAND && !RespawnAnchorBlock.isRespawnFuel(itemstack) && RespawnAnchorBlock.isRespawnFuel(player.getItemInHand(InteractionHand.OFF_HAND))) {
+                return InteractionResult.PASS;
+            } else if (RespawnAnchorBlock.isRespawnFuel(itemstack) && RespawnAnchorBlock.canBeCharged(state)) {
+                RespawnAnchorBlock.charge(player, world, pos, state);
+                if (!player.getAbilities().instabuild) {
+                    itemstack.shrink(1);
+                }
 
-        if (hand == InteractionHand.MAIN_HAND && !RespawnAnchorBlock.isRespawnFuel(itemstack) && RespawnAnchorBlock.isRespawnFuel(player.getItemInHand(InteractionHand.OFF_HAND))) {
-            return InteractionResult.PASS;
-        } else if (RespawnAnchorBlock.isRespawnFuel(itemstack) && RespawnAnchorBlock.canBeCharged(state)) {
-            RespawnAnchorBlock.charge(player, world, pos, state);
-            if (!player.getAbilities().instabuild) {
-                itemstack.shrink(1);
-            }
-
-            return InteractionResult.sidedSuccess(world.isClientSide);
-        } else if ((Integer) state.getValue(RespawnAnchorBlock.CHARGE) == 0) {
-            return InteractionResult.PASS;
-        } else if (!RespawnAnchorBlock.canSetSpawn(world)) {
-            if (!world.isClientSide) {
-                this.explode(state, world, pos);
-            }
+                return InteractionResult.sidedSuccess(world.isClientSide);
+            } else if ((Integer) state.getValue(RespawnAnchorBlock.CHARGE) == 0) {
+                return InteractionResult.PASS;
+            } else if (!RespawnAnchorBlock.canSetSpawn(world)) {
+                if (!world.isClientSide) {
+                    this.explode(state, world, pos);
+                }
 
-            return InteractionResult.sidedSuccess(world.isClientSide);
-        } else {
-            if (!world.isClientSide) {
-                ServerPlayer entityplayer = (ServerPlayer) player;
-
-                if (entityplayer.getRespawnDimension() != world.dimension() || !pos.equals(entityplayer.getRespawnPosition())) {
-                    if (entityplayer.setRespawnPosition(world.dimension(), pos, 0.0F, false, true, com.destroystokyo.paper.event.player.PlayerSetSpawnEvent.Cause.RESPAWN_ANCHOR)) { // Paper - PlayerSetSpawnEvent
-                    world.playSound((Player) null, (double) pos.getX() + 0.5D, (double) pos.getY() + 0.5D, (double) pos.getZ() + 0.5D, SoundEvents.RESPAWN_ANCHOR_SET_SPAWN, SoundSource.BLOCKS, 1.0F, 1.0F);
-                    return InteractionResult.SUCCESS;
-                    // Paper start - handle failed set spawn
-                    } else {
-                        return InteractionResult.FAIL;
+                return InteractionResult.sidedSuccess(world.isClientSide);
+            } else {
+                if (!world.isClientSide) {
+                    ServerPlayer entityplayer = (ServerPlayer) player;
+
+                    if (entityplayer.getRespawnDimension() != world.dimension() || !pos.equals(entityplayer.getRespawnPosition())) {
+                        if (entityplayer.setRespawnPosition(world.dimension(), pos, 0.0F, false, true, com.destroystokyo.paper.event.player.PlayerSetSpawnEvent.Cause.RESPAWN_ANCHOR)) { // Paper - PlayerSetSpawnEvent
+                            world.playSound((Player) null, (double) pos.getX() + 0.5D, (double) pos.getY() + 0.5D, (double) pos.getZ() + 0.5D, SoundEvents.RESPAWN_ANCHOR_SET_SPAWN, SoundSource.BLOCKS, 1.0F, 1.0F);
+                            return InteractionResult.SUCCESS;
+                            // Paper start - handle failed set spawn
+                        } else {
+                            return InteractionResult.FAIL;
+                        }
+                        // Paper end
                     }
-                    // Paper end
                 }
-            }
 
-            return InteractionResult.CONSUME;
+                return InteractionResult.CONSUME;
+            }
+        }else{
+            return InteractionResult.PASS;
         }
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index f6e2b35f2d3347935754987f548fc632973e5f41..b8209bc6d91e1bff0599b557c30a7b777edea3e8 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -7,6 +7,7 @@ import io.github.dueris.logger.CraftCanvasLogger;
 import io.github.dueris.logger.Obfuscator;
 import io.github.dueris.network.ChatChannelContainer;
 import io.github.dueris.network.ChatChannelManager;
+import io.github.dueris.properties.*;
 import com.google.common.base.Charsets;
 import com.google.common.base.Function;
 import com.google.common.base.Preconditions;
