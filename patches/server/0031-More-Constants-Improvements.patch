From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Wed, 19 Jun 2024 20:19:06 -0700
Subject: [PATCH] More Constants Improvements


diff --git a/src/main/java/io/github/dueris/canvas/Constants.java b/src/main/java/io/github/dueris/canvas/Constants.java
new file mode 100644
index 0000000000000000000000000000000000000000..74e31fcede79c6d5900222b19c70953508c625c7
--- /dev/null
+++ b/src/main/java/io/github/dueris/canvas/Constants.java
@@ -0,0 +1,25 @@
+package io.github.dueris.canvas;
+
+import net.minecraft.world.entity.ai.behavior.DoNothing;
+import net.minecraft.world.item.ItemCooldowns;
+import net.minecraft.world.phys.Vec3;
+import java.io.File;
+
+public interface Constants {
+    Object[] EMPTY_object_arr = new Object[0];
+    int[] EMPTY_int_arr = new int[0];
+    int[] ZERO_int_arr = new int[]{0};
+    byte[] EMPTY_byte_arr = new byte[0];
+    String[] EMPTY_string_arr = new String[0];
+    long[] EMPTY_long_arr = new long[0];
+    org.bukkit.entity.Entity[] EMPTY_bukkit_entity_arr = new org.bukkit.entity.Entity[0];
+    net.minecraft.world.entity.Entity[] EMPTY_entity_arr = new net.minecraft.world.entity.Entity[0];
+    File SERVER_DIRECTORY = new File(".");
+    int[] ZERO = new int[0];
+    Vec3 EMPTY_VECTOR3 = new Vec3(0.0D, 0.0D, 1.0D);
+    ItemCooldowns ITEM_COOLDOWNS = new ItemCooldowns();
+    float[] WHITE_SHEEP_COLOR = new float[]{0.9019608F, 0.9019608F, 0.9019608F};
+    DoNothing DO_NOTHING = new DoNothing(30, 60);
+    DoNothing VILLAGERS_DO_NOTHING = new DoNothing(20, 40);
+    DoNothing PIGLIN_DO_NOTHING = new DoNothing(10, 20);
+}
diff --git a/src/main/java/io/github/dueris/canvas/SoundConstants.java b/src/main/java/io/github/dueris/canvas/SoundConstants.java
new file mode 100644
index 0000000000000000000000000000000000000000..68ef32e24f3b3128771191fd9ab18d22dfeff7a5
--- /dev/null
+++ b/src/main/java/io/github/dueris/canvas/SoundConstants.java
@@ -0,0 +1,11 @@
+package io.github.dueris.canvas;
+
+import net.minecraft.sounds.SoundEvents;
+import net.minecraft.world.entity.LivingEntity;
+
+public interface SoundConstants {
+    LivingEntity.Fallsounds LIVING_ENTITY = new LivingEntity.Fallsounds(SoundEvents.GENERIC_SMALL_FALL, SoundEvents.GENERIC_BIG_FALL);
+    LivingEntity.Fallsounds PLAYER = new LivingEntity.Fallsounds(SoundEvents.PLAYER_SMALL_FALL, SoundEvents.PLAYER_BIG_FALL);
+    LivingEntity.Fallsounds MONSTER = new LivingEntity.Fallsounds(SoundEvents.HOSTILE_SMALL_FALL, SoundEvents.HOSTILE_BIG_FALL);
+    LivingEntity.Fallsounds ARMOR_STAND = new LivingEntity.Fallsounds(SoundEvents.ARMOR_STAND_FALL, SoundEvents.ARMOR_STAND_FALL);
+}
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 0a5cbfee55020e16af86044dbcd173cd3cd96f34..da625072ce4b3378bf25d8a33fb7f73fbacea68d 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1650,7 +1650,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
     }
 
     public Path getServerDirectory() {
-        return Path.of("");
+        return io.github.dueris.canvas.Constants.SERVER_DIRECTORY.toPath(); // Canvas
     }
 
     public void onServerCrash(CrashReport report) {}
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index e522202b542eb7778eb5996503eb052e3de851e1..7942bb21a955a8c2ccc2039b6ba40e35ec7057a2 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -2169,7 +2169,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
     }
 
     public LivingEntity.Fallsounds getFallSounds() {
-        return new LivingEntity.Fallsounds(SoundEvents.GENERIC_SMALL_FALL, SoundEvents.GENERIC_BIG_FALL);
+        return io.github.dueris.canvas.SoundConstants.LIVING_ENTITY; // Canvas
     }
 
     // CraftBukkit start - Add delegate methods
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/VillagerGoalPackages.java b/src/main/java/net/minecraft/world/entity/ai/behavior/VillagerGoalPackages.java
index 7f4156e4690bbd57f9e9141f008851062cae733d..f822556a9f5ccb93ca8b57fd0072024d28b74744 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/VillagerGoalPackages.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/VillagerGoalPackages.java
@@ -102,7 +102,7 @@ public class VillagerGoalPackages {
                         Pair.of(VillageBoundRandomStroll.create(speed), 1),
                         Pair.of(SetWalkTargetFromLookTarget.create(speed, 2), 1),
                         Pair.of(new JumpOnBed(speed), 2),
-                        Pair.of(new DoNothing(20, 40), 2)
+                        Pair.of(io.github.dueris.canvas.Constants.VILLAGERS_DO_NOTHING, 2) // Canvas
                     )
                 )
             ),
@@ -123,7 +123,7 @@ public class VillagerGoalPackages {
                         Pair.of(SetClosestHomeAsWalkTarget.create(speed), 1),
                         Pair.of(InsideBrownianWalk.create(speed), 4),
                         Pair.of(GoToClosestVillage.create(speed, 4), 2),
-                        Pair.of(new DoNothing(20, 40), 2)
+                        Pair.of(io.github.dueris.canvas.Constants.VILLAGERS_DO_NOTHING, 2) // Canvas
                     )
                 )
             ),
@@ -172,7 +172,7 @@ public class VillagerGoalPackages {
                         Pair.of(VillageBoundRandomStroll.create(speed), 1),
                         Pair.of(SetWalkTargetFromLookTarget.create(speed, 2), 1),
                         Pair.of(new JumpOnBed(speed), 1),
-                        Pair.of(new DoNothing(30, 60), 1)
+                        Pair.of(io.github.dueris.canvas.Constants.DO_NOTHING, 1)
                     )
                 )
             ),
@@ -272,7 +272,7 @@ public class VillagerGoalPackages {
                     Pair.of(SetEntityLookTarget.create(MobCategory.UNDERGROUND_WATER_CREATURE, 8.0F), 1),
                     Pair.of(SetEntityLookTarget.create(MobCategory.WATER_AMBIENT, 8.0F), 1),
                     Pair.of(SetEntityLookTarget.create(MobCategory.MONSTER, 8.0F), 1),
-                    Pair.of(new DoNothing(30, 60), 2)
+                    Pair.of(io.github.dueris.canvas.Constants.DO_NOTHING, 2) // Canvas
                 )
             )
         );
@@ -285,7 +285,7 @@ public class VillagerGoalPackages {
                 ImmutableList.of(
                     Pair.of(SetEntityLookTarget.create(EntityType.VILLAGER, 8.0F), 2),
                     Pair.of(SetEntityLookTarget.create(EntityType.PLAYER, 8.0F), 2),
-                    Pair.of(new DoNothing(30, 60), 8)
+                    Pair.of(io.github.dueris.canvas.Constants.DO_NOTHING, 8) // Canvas
                 )
             )
         );
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pig.java b/src/main/java/net/minecraft/world/entity/animal/Pig.java
index 7895fca01c20da24a10ac6a642ebba87f73f2799..afbf12a1e231220e82cbfd195815cd195f2bb80a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pig.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pig.java
@@ -329,7 +329,7 @@ public class Pig extends Animal implements ItemSteerable, Saddleable {
 
     @Override
     protected Vec3 getRiddenInput(Player controllingPlayer, Vec3 movementInput) {
-        return new Vec3(0.0D, 0.0D, 1.0D);
+        return io.github.dueris.canvas.Constants.EMPTY_VECTOR3; // Canvas
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java b/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
index 037586c0fdb42a02660aba89dd741a647c67e52b..01b371b3e6651cac48729b743cf5a1047122426d 100644
--- a/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
+++ b/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
@@ -925,7 +925,7 @@ public class ArmorStand extends LivingEntity {
 
     @Override
     public LivingEntity.Fallsounds getFallSounds() {
-        return new LivingEntity.Fallsounds(SoundEvents.ARMOR_STAND_FALL, SoundEvents.ARMOR_STAND_FALL);
+        return io.github.dueris.canvas.SoundConstants.ARMOR_STAND; // Canvas
     }
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/monster/Monster.java b/src/main/java/net/minecraft/world/entity/monster/Monster.java
index c2061f575c731ecc6071384b007517c08e0cf983..59e7e5f81d00731beeede90acaa39fbfe52c03a8 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Monster.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Monster.java
@@ -79,7 +79,7 @@ public abstract class Monster extends PathfinderMob implements Enemy {
 
     @Override
     public LivingEntity.Fallsounds getFallSounds() {
-        return new LivingEntity.Fallsounds(SoundEvents.HOSTILE_SMALL_FALL, SoundEvents.HOSTILE_BIG_FALL);
+        return io.github.dueris.canvas.SoundConstants.MONSTER; // Canvas
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Strider.java b/src/main/java/net/minecraft/world/entity/monster/Strider.java
index daf6f332220d50ac59460a29a5164a83fcd796e8..0a0b9d7e696abcf74acc9ee2a3e87207215257c1 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Strider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Strider.java
@@ -322,7 +322,7 @@ public class Strider extends Animal implements ItemSteerable, Saddleable {
 
     @Override
     protected Vec3 getRiddenInput(Player controllingPlayer, Vec3 movementInput) {
-        return new Vec3(0.0D, 0.0D, 1.0D);
+        return io.github.dueris.canvas.Constants.EMPTY_VECTOR3; // Canvas
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
index cb20c018c11a0e707c2083cf964bd5303d216edd..c90b49f7979b4696483f67e9f9638cc092f3b662 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
@@ -148,7 +148,7 @@ public class Zoglin extends Monster implements HoglinBase {
                 SetEntityLookTargetSometimes.create(8.0F, UniformInt.of(30, 60)),
                 new RunOne<>(
                     ImmutableList.of(
-                        Pair.of(RandomStroll.stroll(0.4F), 2), Pair.of(SetWalkTargetFromLookTarget.create(0.4F, 3), 2), Pair.of(new DoNothing(30, 60), 1)
+                        Pair.of(RandomStroll.stroll(0.4F), 2), Pair.of(SetWalkTargetFromLookTarget.create(0.4F, 3), 2), Pair.of(io.github.dueris.canvas.Constants.DO_NOTHING, 1)
                     )
                 )
             )
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java
index 27a6de70530c2a1cbe2f77a7fb493038121710ea..1ec4e7b4299bc3061c443751eeb1908d7c7ff9c6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinAi.java
@@ -161,7 +161,7 @@ public class PiglinAi {
             return entitypiglin.isAdult();
         }, PiglinAi::findNearestValidAttackTarget), BehaviorBuilder.triggerIf((entitypiglin) -> {
             return !entitypiglin.isDancing();
-        }, GoToTargetLocation.create(MemoryModuleType.CELEBRATE_LOCATION, 2, 1.0F)), BehaviorBuilder.triggerIf(Piglin::isDancing, GoToTargetLocation.create(MemoryModuleType.CELEBRATE_LOCATION, 4, 0.6F)), new RunOne<>(ImmutableList.of(Pair.of(SetEntityLookTarget.create(EntityType.PIGLIN, 8.0F), 1), Pair.of(RandomStroll.stroll(0.6F, 2, 1), 1), Pair.of(new DoNothing(10, 20), 1)))), MemoryModuleType.CELEBRATE_LOCATION);
+        }, GoToTargetLocation.create(MemoryModuleType.CELEBRATE_LOCATION, 2, 1.0F)), BehaviorBuilder.triggerIf(Piglin::isDancing, GoToTargetLocation.create(MemoryModuleType.CELEBRATE_LOCATION, 4, 0.6F)), new RunOne<>(ImmutableList.of(Pair.of(SetEntityLookTarget.create(EntityType.PIGLIN, 8.0F), 1), Pair.of(RandomStroll.stroll(0.6F, 2, 1), 1), Pair.of(io.github.dueris.canvas.Constants.PIGLIN_DO_NOTHING, 1)))), MemoryModuleType.CELEBRATE_LOCATION); // Canvas
     }
 
     private static void initAdmireItemActivity(Brain<Piglin> brain) {
@@ -184,11 +184,11 @@ public class PiglinAi {
     }
 
     private static RunOne<LivingEntity> createIdleLookBehaviors() {
-        return new RunOne<>(ImmutableList.<Pair<? extends BehaviorControl<? super LivingEntity>, Integer>>builder().addAll(PiglinAi.createLookBehaviors()).add(Pair.of(new DoNothing(30, 60), 1)).build()); // CraftBukkit - decompile error
+        return new RunOne<>(ImmutableList.<Pair<? extends BehaviorControl<? super LivingEntity>, Integer>>builder().addAll(PiglinAi.createLookBehaviors()).add(Pair.of(io.github.dueris.canvas.Constants.DO_NOTHING, 1)).build()); // CraftBukkit - decompile error // Canvas
     }
 
     private static RunOne<Piglin> createIdleMovementBehaviors() {
-        return new RunOne<>(ImmutableList.of(Pair.of(RandomStroll.stroll(0.6F), 2), Pair.of(InteractWith.of(EntityType.PIGLIN, 8, MemoryModuleType.INTERACTION_TARGET, 0.6F, 2), 2), Pair.of(BehaviorBuilder.triggerIf(PiglinAi::doesntSeeAnyPlayerHoldingLovedItem, SetWalkTargetFromLookTarget.create(0.6F, 3)), 2), Pair.of(new DoNothing(30, 60), 1)));
+        return new RunOne<>(ImmutableList.of(Pair.of(RandomStroll.stroll(0.6F), 2), Pair.of(InteractWith.of(EntityType.PIGLIN, 8, MemoryModuleType.INTERACTION_TARGET, 0.6F, 2), 2), Pair.of(BehaviorBuilder.triggerIf(PiglinAi::doesntSeeAnyPlayerHoldingLovedItem, SetWalkTargetFromLookTarget.create(0.6F, 3)), 2), Pair.of(io.github.dueris.canvas.Constants.DO_NOTHING, 1))); // Canvas
     }
 
     private static BehaviorControl<PathfinderMob> avoidRepellent() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/warden/WardenAi.java b/src/main/java/net/minecraft/world/entity/monster/warden/WardenAi.java
index 12eee420ec89705b8f08d6039830c07c128a4541..0dfa19908b4c9c2fa105a0b674e8186abfc0fbe5 100644
--- a/src/main/java/net/minecraft/world/entity/monster/warden/WardenAi.java
+++ b/src/main/java/net/minecraft/world/entity/monster/warden/WardenAi.java
@@ -143,7 +143,7 @@ public class WardenAi {
                 TryToSniff.create(),
                 new RunOne<>(
                     ImmutableMap.of(MemoryModuleType.IS_SNIFFING, MemoryStatus.VALUE_ABSENT),
-                    ImmutableList.of(Pair.of(RandomStroll.stroll(0.5F), 2), Pair.of(new DoNothing(30, 60), 1))
+                    ImmutableList.of(Pair.of(RandomStroll.stroll(0.5F), 2), Pair.of(io.github.dueris.canvas.Constants.DO_NOTHING, 1)) // Canvas
                 )
             )
         );
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index fe925dd7949c371490f35cfd525d04d1a7ae599a..325f53a46203047a9340b36a1a4bf6873d62e8fd 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -443,7 +443,7 @@ public abstract class Player extends LivingEntity {
     }
 
     protected ItemCooldowns createItemCooldowns() {
-        return new ItemCooldowns();
+        return io.github.dueris.canvas.Constants.ITEM_COOLDOWNS; // Canvas
     }
 
     private void moveCloak() {
@@ -1801,7 +1801,7 @@ public abstract class Player extends LivingEntity {
 
     @Override
     public LivingEntity.Fallsounds getFallSounds() {
-        return new LivingEntity.Fallsounds(SoundEvents.PLAYER_SMALL_FALL, SoundEvents.PLAYER_BIG_FALL);
+        return io.github.dueris.canvas.SoundConstants.PLAYER;
     }
 
     @Override
