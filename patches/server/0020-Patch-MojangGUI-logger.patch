From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sun, 22 Oct 2023 18:06:12 -0700
Subject: [PATCH] Patch MojangGUI logger


diff --git a/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java b/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java
index bb79f0ae7621e78f48e3fc94fa90659fdd437004..05b49a99f956d41ef1b344a0547df2d4fe091189 100644
--- a/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java
+++ b/src/main/java/net/minecraft/server/gui/MinecraftServerGui.java
@@ -3,20 +3,15 @@ package net.minecraft.server.gui;
 import me.dueris.canvas.CraftServerGui;
 import me.dueris.canvas.MojangServerGui;
 import com.google.common.collect.Lists;
-import com.mojang.logging.LogQueues;
 import com.mojang.logging.LogUtils;
 import java.awt.*;
-import java.awt.event.FocusAdapter;
-import java.awt.event.FocusEvent;
-import java.awt.event.MouseAdapter;
-import java.awt.event.MouseEvent;
-import java.awt.event.WindowAdapter;
-import java.awt.event.WindowEvent;
-import java.awt.event.WindowListener;
-import java.io.IOException;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.Objects;
+// Canvas start
+import java.awt.event.*;
+import java.io.*;
+import java.net.URISyntaxException;
+import java.nio.file.*;
+import java.util.*;
+// Canvas end
 import java.util.concurrent.atomic.AtomicBoolean;
 import javax.swing.*;
 import javax.swing.border.EtchedBorder;
@@ -24,9 +19,10 @@ import javax.swing.border.TitledBorder;
 import javax.swing.text.Document;
 import net.minecraft.DefaultUncaughtExceptionHandler;
 import net.minecraft.server.dedicated.DedicatedServer;
-import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.Main;
 import org.bukkit.craftbukkit.scheduler.MinecraftInternalPlugin;
 import org.bukkit.scheduler.BukkitRunnable;
+import org.purpurmc.purpur.gui.JColorTextPane;
 import org.slf4j.Logger;
 
 public class MinecraftServerGui extends CraftServerGui implements MojangServerGui {
@@ -110,8 +106,21 @@ public class MinecraftServerGui extends CraftServerGui implements MojangServerGu
         this.setPreferredSize(new Dimension(854, 480));
         this.setLayout(new BorderLayout());
 
+        // Canvas start
+        try {
+            mainfile = new File(Main.class.getProtectionDomain().getCodeSource().getLocation().toURI());
+        } catch (URISyntaxException e) {
+            throw new RuntimeException(e);
+        }
+
+        try{
+            path = getJarLocation().getParent() + File.separator + ".." + File.separator + ".." + File.separator + "logs" + File.separator + "latest.log";
+            LogUtils.getLogger().info("latest.log found! Starting patched mojang gui service...");
+        } catch (Exception e){
+            LogUtils.getLogger().error("Unable to find latest.log! Attempted file location: &1".replace("&1", path));
+        }
+
         try {
-            // Canvas start
 
             chatPanel = this.buildChatPanel();
             infoPanel = this.buildInfoPanel();
@@ -124,11 +133,10 @@ public class MinecraftServerGui extends CraftServerGui implements MojangServerGu
             // this.add(this.buildChatPanel(), "Center");
             // this.add(this.buildInfoPanel(), "West");
 
-            // Canvas end
         } catch (Exception exception) {
             MinecraftServerGui.LOGGER.error("Couldn't build server GUI", exception);
         }
-
+        // Canvas end
     }
 
     public void addFinalizer(Runnable task) {
@@ -181,51 +189,80 @@ public class MinecraftServerGui extends CraftServerGui implements MojangServerGu
         // Purpur start
         jtextfield.getInputMap().put(javax.swing.KeyStroke.getKeyStroke("UP"), "up");
         jtextfield.getInputMap().put(javax.swing.KeyStroke.getKeyStroke("DOWN"), "down");
-        jtextfield.getActionMap().put("up", new javax.swing.AbstractAction() {
+        // Canvas start
+        jtextfield.getActionMap().put("up", new AbstractAction() {
             @Override
-            public void actionPerformed(java.awt.event.ActionEvent actionEvent) {
-                if (historyIndex < 0) {
-                    currentCommand = jtextfield.getText();
-                }
+            public void actionPerformed(ActionEvent actionEvent) {
                 if (historyIndex < history.size() - 1) {
-                    jtextfield.setText(history.get(historyIndex));
+                    historyIndex++;
+                    jtextfield.setText(history.get(history.size() - historyIndex - 1));
                 }
             }
         });
-        jtextfield.getActionMap().put("down", new javax.swing.AbstractAction() {
+
+        jtextfield.getActionMap().put("down", new AbstractAction() {
             @Override
-            public void actionPerformed(java.awt.event.ActionEvent actionEvent) {
+            public void actionPerformed(ActionEvent actionEvent) {
                 if (historyIndex >= 0) {
-                    if (historyIndex == 0) {
-                        --historyIndex;
-                        jtextfield.setText(currentCommand);
+                    historyIndex--;
+                    if (historyIndex >= 0) {
+                        jtextfield.setText(history.get(history.size() - historyIndex - 1));
                     } else {
-                        --historyIndex;
-                        jtextfield.setText(history.get(historyIndex));
+                        jtextfield.setText(currentCommand);
                     }
                 }
             }
         });
-        // Purpur end
+        // Purpur end -/- Canvas end
         jtextarea.addFocusListener(new FocusAdapter() {
             public void focusGained(FocusEvent focusevent) {}
         });
         jpanel.add(jscrollpane, "Center");
         jpanel.add(jtextfield, "South");
         jpanel.setBorder(new TitledBorder(new EtchedBorder(), "Log and chat"));
+        // Canvas start
+        this.textPane = jtextarea;
+        this.scrollPane = jscrollpane;
         this.logAppenderThread = new Thread(() -> {
-            String s;
-
-            while ((s = LogQueues.getNextLogEvent("ServerGuiConsole")) != null) {
-                this.print(jtextarea, jscrollpane, s);
+            try {
+                java.util.List<String> allLines = Files.readAllLines(Path.of(path));
+                int starting = allLines.size();
+                for (String line : allLines) {
+                    print(jtextarea, jscrollpane, line);
+                }
+                while(true){
+                    if(starting < Files.readAllLines(Path.of(path)).size()){
+                        print(jtextarea, jscrollpane, Files.readAllLines(Path.of(path)).get(starting));
+                        starting++;
+                    }
+                    if(this.isClosing.get()){
+                        print(jtextarea, jscrollpane, "Server shutting down, Mojang logger halted.");
+                        break;
+                    }
+                }
+            } catch (IOException e) {
+                e.printStackTrace();
             }
-
         });
+        // Canvas end
         this.logAppenderThread.setUncaughtExceptionHandler(new DefaultUncaughtExceptionHandler(MinecraftServerGui.LOGGER));
         this.logAppenderThread.setDaemon(true);
         return jpanel;
     }
 
+    // Canvas start
+    private JColorTextPane textPane;
+    private JScrollPane scrollPane;
+    private String path;
+
+    private File mainfile;
+    public File getJarLocation(){
+        return mainfile;
+    }
+
+    // Canvas end
+
+    @Deprecated(forRemoval = true) // Canvas
     public void start() {
         this.logAppenderThread.start();
     }
@@ -243,19 +280,13 @@ public class MinecraftServerGui extends CraftServerGui implements MojangServerGu
 
     private static final java.util.regex.Pattern ANSI = java.util.regex.Pattern.compile("\\e\\[[\\d;]*[^\\d;]"); // CraftBukkit // Paper
     public void print(org.purpurmc.purpur.gui.JColorTextPane textArea, JScrollPane scrollPane, String message) { // Purpur
-        if (!SwingUtilities.isEventDispatchThread()) {
-            SwingUtilities.invokeLater(() -> {
-                this.print(textArea, scrollPane, message);
-            });
-        } else {
-            Document document = textArea.getDocument();
-            JScrollBar jscrollbar = scrollPane.getVerticalScrollBar();
-            boolean flag = false;
-
-            if (scrollPane.getViewport().getView() == textArea) {
-                flag = (double) jscrollbar.getValue() + jscrollbar.getSize().getHeight() + (double) (MinecraftServerGui.FONT.getSize() * 4) > (double) jscrollbar.getMaximum(); // Canvas
-            }
+        Document document = textArea.getDocument();
+        JScrollBar jscrollbar = scrollPane.getVerticalScrollBar();
+        boolean flag = false;
 
+        if (scrollPane.getViewport().getView() == textArea) {
+            flag = (double) jscrollbar.getValue() + jscrollbar.getSize().getHeight() + (double) (MinecraftServerGui.FONT.getSize() * 4) > (double) jscrollbar.getMaximum(); // Canvas
+        }
             /* // Purpur
             try {
                 document.insertString(document.getLength(), MinecraftServerGui.ANSI.matcher(message).replaceAll(""), (AttributeSet) null); // CraftBukkit
@@ -263,12 +294,10 @@ public class MinecraftServerGui extends CraftServerGui implements MojangServerGu
                 ;
             }
             */ // Purpur
-            textArea.append(message); // Purpur
-
-            if (flag) {
-                jscrollbar.setValue(Integer.MAX_VALUE);
-            }
+        textArea.append(message+ "\n"); // Purpur // Canvas
 
+        if (flag) {
+            jscrollbar.setValue(Integer.MAX_VALUE);
         }
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 7dc228278dfd41deea27a29288dd7a241815f87c..0d800d244c8531bb69c034153e81e0b963a951cb 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -286,7 +286,6 @@ public final class CraftServer implements Server {
     public static CraftCanvasLogger.Obfuscator canvas_obfuscator = null;
     private final CraftCanvasLogger craftCanvasLogger = new CraftCanvasLogger();
     private final ChatChannelManager chatChannelManager = new ChatChannelManager();
-
     // Canvas end
     private final String bukkitVersion = Versioning.getBukkitVersion();
     private final Logger logger = Logger.getLogger("Minecraft");
