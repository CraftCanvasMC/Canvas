From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolf1909 <160778222+PurpleWolf1909@users.noreply.github.com>
Date: Tue, 30 Apr 2024 20:50:55 +0000
Subject: [PATCH] More Block API


diff --git a/src/main/java/me/dueris/canvas/CanvasConfig.java b/src/main/java/me/dueris/canvas/CanvasConfig.java
index 2b84679ab281474d30fcd98ce51a24af19c1a068..bbf155dc497e740db472356fe5dd743af8f7d158 100644
--- a/src/main/java/me/dueris/canvas/CanvasConfig.java
+++ b/src/main/java/me/dueris/canvas/CanvasConfig.java
@@ -167,5 +167,14 @@ public class CanvasConfig {
         }
         return builder.build();
     }
-
+    
+    public static boolean useCanvasBedSetDye = true;
+    public static boolean makeCampfireAlwaysLots = false;
+    public static int farmlandSearchRadius = 4;
+
+    private static void blocks(){
+        useCanvasBedSetDye = getBoolean("blocks.useCanvasBedSetDyeMethod", useCanvasBedSetDye);
+        makeCampfireAlwaysLots = getBoolean("block.forceCampfireEmitLotsOfParticles", makeCampfireAlwaysLots);
+        farmlandSearchRadius = getInt("block.farmlandSearchRadius", farmlandSearchRadius);
+    }
 }
diff --git a/src/main/java/net/minecraft/world/level/block/FarmBlock.java b/src/main/java/net/minecraft/world/level/block/FarmBlock.java
index d0ec0722496ed931b48c4e7076fddbb1ed36e111..ef7aa2df55224d6df6b739e38547ec5c65b0744f 100644
--- a/src/main/java/net/minecraft/world/level/block/FarmBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/FarmBlock.java
@@ -167,15 +167,18 @@ public class FarmBlock extends Block {
         return world.getBlockState(pos.above()).is(BlockTags.MAINTAINS_FARMLAND);
     }
 
+    // Canvas start
+    private static int searchRadius = me.dueris.canvas.CanvasConfig.farmlandSearchRadius;
+    
     private static boolean isNearWater(LevelReader world, BlockPos pos) {
         // Paper start - Perf: remove abstract block iteration
         int xOff = pos.getX();
         int yOff = pos.getY();
         int zOff = pos.getZ();
 
-        for (int dz = -4; dz <= 4; ++dz) {
+        for (int dz = -searchRadius; dz <= searchRadius; ++dz) {
             int z = dz + zOff;
-            for (int dx = -4; dx <= 4; ++dx) {
+            for (int dx = -searchRadius; dx <= searchRadius; ++dx) {
                 int x = xOff + dx;
                 for (int dy = 0; dy <= 1; ++dy) {
                     int y = dy + yOff;
@@ -191,6 +194,7 @@ public class FarmBlock extends Block {
         return ((ServerLevel) world).purpurConfig.farmlandGetsMoistFromBelow && world.getFluidState(pos.relative(Direction.DOWN)).is(FluidTags.WATER); // Purpur;
         // Paper end - Perf: remove abstract block iteration
     }
+    // Canvas end
 
     @Override
     protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> builder) {
diff --git a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
index 24563a43f25d4621291b1ba6f24773cccedddbfe..125724488f5fd4a102efeb703f3a69299398b464 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
@@ -138,7 +138,7 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
 
         if (randomsource.nextFloat() < 0.11F) {
             for (i = 0; i < randomsource.nextInt(2) + 2; ++i) {
-                CampfireBlock.makeParticles(world, pos, (Boolean) state.getValue(CampfireBlock.SIGNAL_FIRE), false);
+                CampfireBlock.makeParticles(world, pos, (Boolean) state.getValue(CampfireBlock.SIGNAL_FIRE), getShouldBeLots(false)); // Canvas
             }
         }
 
@@ -159,6 +159,13 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
         }
 
     }
+    // Canvas start
+    private static boolean forceLots = me.dueris.canvas.CanvasConfig.makeCampfireAlwaysLots;
+
+    public static boolean getShouldBeLots(boolean original){
+        return forceLots ? true : original;
+    }
+    // Canvas end
 
     public NonNullList<ItemStack> getItems() {
         return this.items;
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBed.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBed.java
index b5bc9b22e4d8e8b9c4dfd5b9260c25374b425460..4add24af787d0647dff40510cc778233800f5a1d 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBed.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBed.java
@@ -1,8 +1,12 @@
 package org.bukkit.craftbukkit.block;
 
 import net.minecraft.world.level.block.entity.BedBlockEntity;
+
+import java.nio.channels.UnsupportedAddressTypeException;
+
 import org.bukkit.DyeColor;
 import org.bukkit.Location;
+import org.bukkit.Material;
 import org.bukkit.World;
 import org.bukkit.block.Bed;
 
@@ -58,7 +62,17 @@ public class CraftBed extends CraftBlockEntityState<BedBlockEntity> implements B
 
     @Override
     public void setColor(DyeColor color) {
-        throw new UnsupportedOperationException("Must set block type to appropriate bed colour");
+        // Canvas start
+        // throw new UnsupportedOperationException("Must set block type to appropriate bed colour"); - Canvas - why tho lol
+        if(me.dueris.canvas.CanvasConfig.useCanvasBedSetDye){
+            this.getBlock().setType(Material.valueOf(
+                color.toDyeString().toUpperCase() + "_BED"
+            ));
+        }else{
+            // Then we can use Paper/Bukkits throw exception
+            throw new UnsupportedOperationException("Must set block type to appropriate bed colour");
+        }
+        // Canvas end
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftCampfire.java b/src/main/java/org/bukkit/craftbukkit/block/CraftCampfire.java
index a776bba2ec51c6aecce98a3abceb2c235522d99d..4844d5fe4c4a6e9fcb94ffb81e622e461238588c 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftCampfire.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftCampfire.java
@@ -21,6 +21,13 @@ public class CraftCampfire extends CraftBlockEntityState<CampfireBlockEntity> im
     public int getSize() {
         return this.getSnapshot().getItems().size();
     }
+    // Canvas start
+
+    @Override
+    public void extinguish(){
+        this.getSnapshot().dowse();
+    }
+    // Canvas end
 
     @Override
     public ItemStack getItem(int index) {
