From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris Bauer <jedimastertoothless@hotmail.com>
Date: Tue, 24 Oct 2023 15:39:28 +0000
Subject: [PATCH] Make attribute listners use self


diff --git a/src/main/java/io/papermc/paper/attribute/UnmodifiableAttributeMap.java b/src/main/java/io/papermc/paper/attribute/UnmodifiableAttributeMap.java
index 23aa17731d95dbcfe90c19ef169afb05dfaf7cc5..2ddc4c7181461ab9eeea67950f668592f3f4baf5 100644
--- a/src/main/java/io/papermc/paper/attribute/UnmodifiableAttributeMap.java
+++ b/src/main/java/io/papermc/paper/attribute/UnmodifiableAttributeMap.java
@@ -34,7 +34,7 @@ public class UnmodifiableAttributeMap implements Attributable {
     }
     // Canvas start
     @Override
-    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate, Player player){
+    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate){
         throw new UnsupportedOperationException("Cannot register new listener here");
     }
     // Canvas end
diff --git a/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java b/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java
index 36aed3ed152b9f46c5ee24848be46573f44b5e94..6fe4d77f4e13e25051d0fb4fe32c96b197ecf71d 100644
--- a/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java
+++ b/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java
@@ -48,19 +48,27 @@ public class CraftAttributeMap implements Attributable {
     }
     // Paper end -/- Canvas start
     @Override
-    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate, Player player){
+    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate){
         new BukkitRunnable(){
             @Override
             public void run(){
-                if(player.getAttribute(attribute) != null){
-                    if(condition){
-                        player.getAttribute(attribute).setBaseValue(trueValue);
-                    }else{
-                        player.getAttribute(attribute).setBaseValue(falseValue);
+                // if(!getSelf().isDead()){ --- Canvas - method not exist because not instance of an entity.
+                    if(getSelf().getAttribute(attribute) != null){
+                        if(condition){
+                            getSelf().getAttribute(attribute).setBaseValue(trueValue);
+                        }else{
+                            getSelf().getAttribute(attribute).setBaseValue(falseValue);
+                        }
                     }
-                }
+                // }else{
+                //     this.cancel(); --- Canvas - method not exist because not instance of an entity.
+                // }
             }
         }.runTaskTimer(plugin, 0, tickrate);
     }
+
+    private CraftAttributeMap getSelf(){
+        return this;
+    }
     // Canvas end
 }
\ No newline at end of file
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index fac1725d919f5e25ccd89d0b1fe96c6802763c55..aa8efff39ca3b2c2ed69a19f1872a295b7103c6b 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -194,10 +194,6 @@ import org.bukkit.plugin.Plugin;
 import org.bukkit.util.BoundingBox;
 import org.bukkit.util.NumberConversions;
 import org.bukkit.util.Vector;
-import org.bukkit.scheduler.BukkitRunnable;
-import org.bukkit.entity.*;
-import org.bukkit.attribute.*;
-import org.bukkit.plugin.*;
 
 import net.md_5.bungee.api.chat.BaseComponent; // Spigot
 
@@ -232,23 +228,6 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         return getHandle().fireImmune();
     }
 
-    // Canvas start
-    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate, Player player){
-        new BukkitRunnable(){
-            @Override
-            public void run(){
-                if(player.getAttribute(attribute) != null){
-                    if(condition){
-                        player.getAttribute(attribute).setBaseValue(trueValue);
-                    }else{
-                        player.getAttribute(attribute).setBaseValue(falseValue);
-                    }
-                }
-            }
-        }.runTaskTimer(plugin, 0, tickrate);
-    }
-    // Canvas end
-
     @Override
     public void setImmuneToFire(Boolean fireImmune) {
         getHandle().immuneToFire = fireImmune;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
index 9c94fd78cbd0d3ef0c4dd3678262126b6ed2847b..957ac54707b5fd6fcd783ef64ed0ccbdeb44942a 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
@@ -46,31 +46,6 @@ import org.bukkit.craftbukkit.inventory.CraftEntityEquipment;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.craftbukkit.potion.CraftPotionEffectType;
 import org.bukkit.craftbukkit.potion.CraftPotionUtil;
-import org.bukkit.entity.AbstractArrow;
-import org.bukkit.entity.Arrow;
-import org.bukkit.entity.DragonFireball;
-import org.bukkit.entity.Egg;
-import org.bukkit.entity.EnderPearl;
-import org.bukkit.entity.Entity;
-import org.bukkit.entity.EntityCategory;
-import org.bukkit.entity.Fireball;
-import org.bukkit.entity.Firework;
-import org.bukkit.entity.FishHook;
-import org.bukkit.entity.HumanEntity;
-import org.bukkit.entity.LingeringPotion;
-import org.bukkit.entity.LivingEntity;
-import org.bukkit.entity.LlamaSpit;
-import org.bukkit.entity.Player;
-import org.bukkit.entity.Projectile;
-import org.bukkit.entity.ShulkerBullet;
-import org.bukkit.entity.SmallFireball;
-import org.bukkit.entity.Snowball;
-import org.bukkit.entity.SpectralArrow;
-import org.bukkit.entity.ThrownExpBottle;
-import org.bukkit.entity.ThrownPotion;
-import org.bukkit.entity.TippedArrow;
-import org.bukkit.entity.Trident;
-import org.bukkit.entity.WitherSkull;
 import org.bukkit.entity.memory.MemoryKey;
 import org.bukkit.event.entity.EntityPotionEffectEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
@@ -83,6 +58,12 @@ import org.bukkit.potion.PotionType;
 import org.bukkit.util.BlockIterator;
 import org.bukkit.util.RayTraceResult;
 import org.bukkit.util.Vector;
+// Canvas start
+import org.bukkit.scheduler.BukkitRunnable;
+import org.bukkit.entity.*;
+import org.bukkit.attribute.*;
+import org.bukkit.plugin.*;
+// Canvas end
 
 public class CraftLivingEntity extends CraftEntity implements LivingEntity {
     private CraftEntityEquipment equipment;
@@ -100,6 +81,31 @@ public class CraftLivingEntity extends CraftEntity implements LivingEntity {
         return Math.min(Math.max(0, this.getHandle().getHealth()), this.getMaxHealth());
     }
 
+    // Canvas start
+    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate){
+        new BukkitRunnable(){
+            @Override
+            public void run(){
+                if(!getSelf().isDead()){
+                    if(getSelf().getAttribute(attribute) != null){
+                        if(condition){
+                            getSelf().getAttribute(attribute).setBaseValue(trueValue);
+                        }else{
+                            getSelf().getAttribute(attribute).setBaseValue(falseValue);
+                        }
+                    }
+                }else{
+                    this.cancel();
+                }
+            }
+        }.runTaskTimer(plugin, 0, tickrate);
+    }
+
+    private CraftLivingEntity getSelf(){
+        return this;
+    }
+    // Canvas end
+
     @Override
     public void setHealth(double health) {
         health = (float) health;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
index a68669ba63a107f7f11100c7572ff2ad9a9ecab5..5fa6d582583da6c8551fae8727ba90aca73950a6 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
@@ -8,10 +8,13 @@ import org.bukkit.Sound;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.craftbukkit.CraftSound;
 import org.bukkit.craftbukkit.util.CraftNamespacedKey;
-import org.bukkit.entity.LivingEntity;
-import org.bukkit.entity.Mob;
-import org.bukkit.entity.Player;
 import org.bukkit.loot.LootTable;
+// Canvas start
+import org.bukkit.scheduler.BukkitRunnable;
+import org.bukkit.entity.*;
+import org.bukkit.attribute.*;
+import org.bukkit.plugin.*;
+// Canvas end
 
 public abstract class CraftMob extends CraftLivingEntity implements Mob {
     public CraftMob(CraftServer server, net.minecraft.world.entity.Mob entity) {
@@ -33,6 +36,32 @@ public abstract class CraftMob extends CraftLivingEntity implements Mob {
         }
     }
 
+    // Canvas start
+    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate){
+        new BukkitRunnable(){
+            @Override
+            public void run(){
+                if(!getSelf().isDead()){
+                    if(getSelf().getAttribute(attribute) != null){
+                        if(condition){
+                            getSelf().getAttribute(attribute).setBaseValue(trueValue);
+                        }else{
+                            getSelf().getAttribute(attribute).setBaseValue(falseValue);
+                        }
+                    }
+                }else{
+                    this.cancel();
+                }
+            }
+        }.runTaskTimer(plugin, 0, tickrate);
+    }
+
+    private CraftMob getSelf(){
+        return this;
+    }
+
+    // Canvas end
+
     @Override
     public boolean canBeLeashed(Player player){
         return this.getHandle().canBeLeashed(((CraftPlayer) player).getHandle());
