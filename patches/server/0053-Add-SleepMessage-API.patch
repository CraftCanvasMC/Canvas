From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Tue, 21 Nov 2023 01:33:57 +0000
Subject: [PATCH] Add SleepMessage API


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index a56ea5cab7141820ef166189334faa1382be9064..1bccb7691366925dc5b4a8839c98a8e5c90d4f8c 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1247,6 +1247,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                 int i = this.getGameRules().getInt(GameRules.RULE_PLAYERS_SLEEPING_PERCENTAGE);
                 Component ichatmutablecomponent;
 
+                me.dueris.canvas.event.player.PlayerSleepMessageEvent.SleepMessageType messageType = me.dueris.canvas.event.player.PlayerSleepMessageEvent.SleepMessageType.UNKNOWN; // Canvas
                 if (this.sleepStatus.areEnoughSleeping(i)) {
                     // Purpur start
                     if (org.purpurmc.purpur.PurpurConfig.sleepSkippingNight.isBlank()) {
@@ -1255,6 +1256,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                     if (!org.purpurmc.purpur.PurpurConfig.sleepSkippingNight.equalsIgnoreCase("default")) {
                         ichatmutablecomponent = io.papermc.paper.adventure.PaperAdventure.asVanilla(net.kyori.adventure.text.minimessage.MiniMessage.miniMessage().deserialize(org.purpurmc.purpur.PurpurConfig.sleepSkippingNight));
                     } else
+                    messageType = me.dueris.canvas.event.player.PlayerSleepMessageEvent.SleepMessageType.SKIPPING_NIGHT; // Canvas
                     ichatmutablecomponent = Component.translatable("sleep.skipping_night");
                 } else {
                     if (org.purpurmc.purpur.PurpurConfig.sleepingPlayersPercent.isBlank()) {
@@ -1268,13 +1270,24 @@ public class ServerLevel extends Level implements WorldGenLevel {
                     // Purpur end
                     ichatmutablecomponent = Component.translatable("sleep.players_sleeping", this.sleepStatus.amountSleeping(), this.sleepStatus.sleepersNeeded(i));
                 }
+                // Canvas start
+                boolean shouldDisplayMessage =
+                    (messageType == me.dueris.canvas.event.player.PlayerSleepMessageEvent.SleepMessageType.SKIPPING_NIGHT)
+                    || (messageType == me.dueris.canvas.event.player.PlayerSleepMessageEvent.SleepMessageType.PLAYERS_SLEEPING_COUNT);
+                var adventureComponent = io.papermc.paper.adventure.PaperAdventure.asAdventure(ichatmutablecomponent);
+                // Canvas end
 
                 Iterator iterator = this.players.iterator();
 
                 while (iterator.hasNext()) {
                     ServerPlayer entityplayer = (ServerPlayer) iterator.next();
 
-                    entityplayer.displayClientMessage(ichatmutablecomponent, true);
+                    // Canvas start
+                    var event = new me.dueris.canvas.event.player.PlayerSleepMessageEvent(entityplayer.getBukkitEntity(), messageType, adventureComponent, !shouldDisplayMessage);
+                    if (event.callEvent()) {
+                        entityplayer.displayClientMessage(io.papermc.paper.adventure.PaperAdventure.asVanilla(event.getMessage()), true);
+                    }
+                    // Canvas end
                 }
 
             }
