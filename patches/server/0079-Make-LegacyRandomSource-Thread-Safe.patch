From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <122416109+Dueris@users.noreply.github.com>
Date: Sun, 14 Apr 2024 20:41:59 +0000
Subject: [PATCH] Make LegacyRandomSource Thread-Safe


diff --git a/src/main/java/net/minecraft/world/level/levelgen/LegacyRandomSource.java b/src/main/java/net/minecraft/world/level/levelgen/LegacyRandomSource.java
index 65ac9d2058c07b4b16473008908f66fbf553b207..7edcdc4a7d5b25e9ffea01eff7f88922e300a987 100644
--- a/src/main/java/net/minecraft/world/level/levelgen/LegacyRandomSource.java
+++ b/src/main/java/net/minecraft/world/level/levelgen/LegacyRandomSource.java
@@ -30,23 +30,19 @@ public class LegacyRandomSource implements BitRandomSource {
 
     @Override
     public void setSeed(long seed) {
-        if (!this.seed.compareAndSet(this.seed.get(), (seed ^ 25214903917L) & 281474976710655L)) {
-            throw ThreadingDetector.makeThreadingException("LegacyRandomSource", null);
-        } else {
-            this.gaussianSource.reset();
-        }
+        this.seed.set((seed ^ 25214903917L) & 281474976710655L);
     }
 
     @Override
     public int next(int bits) {
-        long l = this.seed.get();
-        long m = l * 25214903917L + 11L & 281474976710655L;
-        if (!this.seed.compareAndSet(l, m)) {
-            if(!(Thread.currentThread() instanceof io.papermc.paper.util.TickThread)) throw ThreadingDetector.makeThreadingException("LegacyRandomSource", null); // Canvas
-            else return (int)(m >> 48 - bits); // Canvas
-        } else {
-            return (int)(m >> 48 - bits);
-        }
+        long l;
+        long m;
+        do {
+            l = this.seed.get();
+            m = l * 25214903917L + 11L & 281474976710655L;
+        } while (!this.seed.compareAndSet(l, m));
+
+        return (int)(m >>> 48 - bits);
     }
 
     @Override
