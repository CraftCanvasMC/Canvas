From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sun, 15 Oct 2023 17:49:48 -0700
Subject: [PATCH] Create ChatChannel api


diff --git a/src/main/java/com/dueris/canvas/network/ChatChannelManager.java b/src/main/java/com/dueris/canvas/network/ChatChannelManager.java
new file mode 100644
index 0000000000000000000000000000000000000000..9b34071168294c7e2e81c8fb7ebe692635767437
--- /dev/null
+++ b/src/main/java/com/dueris/canvas/network/ChatChannelManager.java
@@ -0,0 +1,41 @@
+package com.dueris.canvas.network;
+
+import com.dueris.canvas.network.channels.ChatChannel;
+import com.dueris.canvas.network.channels.CraftChatChannel;
+import org.bukkit.NamespacedKey;
+import java.util.ArrayList;
+
+public class ChatChannelManager implements ChatChannelContainer{
+
+    public ArrayList<ChatChannel> craftChannels = new ArrayList<>();
+
+    @Override
+    public CraftChatChannel createChannel(final NamespacedKey namespacedKey, String title) {
+        CraftChatChannel channel = new CraftChatChannel(namespacedKey, title);
+        craftChannels.add(channel);
+        return channel;
+    }
+
+    @Override
+    public void deleteChannel(ChatChannel chatChannel) {
+        craftChannels.remove(chatChannel);
+    }
+
+    @Override
+    public ChatChannel getChatChannel(final NamespacedKey namespacedKey) {
+        for(ChatChannel chatChannel : craftChannels){
+            if(chatChannel.getChannelKey() == namespacedKey) return chatChannel;
+        }
+        return null;
+    }
+
+    @Override
+    public ArrayList<ChatChannel> getChannels() {
+        return craftChannels;
+    }
+
+    @Override
+    public boolean containsChannel(final ChatChannel chatChannel) {
+        return craftChannels.contains(chatChannel);
+    }
+}
diff --git a/src/main/java/com/dueris/canvas/network/channels/CraftChannelSettings.java b/src/main/java/com/dueris/canvas/network/channels/CraftChannelSettings.java
new file mode 100644
index 0000000000000000000000000000000000000000..bbea4aa68641121a60a594e8139cb2f533cd0cb9
--- /dev/null
+++ b/src/main/java/com/dueris/canvas/network/channels/CraftChannelSettings.java
@@ -0,0 +1,68 @@
+package com.dueris.canvas.network.channels;
+
+public class CraftChannelSettings implements ChannelSettings{
+    CraftChatChannel channel;
+    boolean viewOtherChannelLogs;
+    boolean sendAdvancements;
+    boolean sendDeathMessages;
+    boolean privateChannel;
+    boolean receiveWhispers;
+
+    public CraftChannelSettings(CraftChatChannel channel){
+        this.channel = channel;
+    }
+
+    @Override
+    public void canViewOtherChannelLogs(final boolean T) {
+        viewOtherChannelLogs = T;
+    }
+
+    @Override
+    public void sendAdvancements(final boolean T) {
+        sendAdvancements = T;
+    }
+
+    @Override
+    public void sendDeathMessages(final boolean T) {
+        sendDeathMessages = T;
+    }
+
+    @Override
+    public void privateChannel(final boolean T) {
+        privateChannel = T;
+    }
+
+    @Override
+    public void resetSettings() {
+        privateChannel = true;
+        sendDeathMessages = false;
+        sendAdvancements = false;
+        viewOtherChannelLogs = true;
+        receiveWhispers = true;
+    }
+
+    @Override
+    public boolean isPrivateChannel() {
+        return privateChannel;
+    }
+
+    @Override
+    public boolean canSendDeathMessages() {
+        return sendDeathMessages;
+    }
+
+    @Override
+    public boolean canSendAdvancements() {
+        return sendAdvancements;
+    }
+
+    @Override
+    public boolean canViewOtherChannelLogs() {
+        return viewOtherChannelLogs;
+    }
+
+    @Override
+    public boolean canReceiveWhisperFromOtherChannelMembers() {
+        return receiveWhispers;
+    }
+}
diff --git a/src/main/java/com/dueris/canvas/network/channels/CraftChatChannel.java b/src/main/java/com/dueris/canvas/network/channels/CraftChatChannel.java
new file mode 100644
index 0000000000000000000000000000000000000000..abb7b9dc37d7093c8a729875f7fe52fbe0ea0355
--- /dev/null
+++ b/src/main/java/com/dueris/canvas/network/channels/CraftChatChannel.java
@@ -0,0 +1,89 @@
+package com.dueris.canvas.network.channels;
+
+import org.bukkit.NamespacedKey;
+import org.bukkit.entity.Player;
+import java.util.ArrayList;
+
+public class CraftChatChannel implements ChatChannel {
+
+    private NamespacedKey namespacedKey;
+    private String title;
+    private ChannelSettings settings = null;
+
+    public CraftChatChannel(NamespacedKey namespacedKey, String title){
+        this.namespacedKey = namespacedKey;
+        this.title = title;
+        this.settings = new CraftChannelSettings(this);
+    }
+
+    public ArrayList<Player> players = new ArrayList<>();
+
+    @Override
+    public ArrayList<Player> getPlayers() {
+        return players;
+    }
+
+    @Override
+    public void addPlayer(final Player player) {
+        players.add(player);
+    }
+
+    @Override
+    public void removePlayer(final Player player) {
+        players.remove(player);
+    }
+
+    @Override
+    public void changeNamespace(final NamespacedKey namespacedKey) {
+        this.namespacedKey = namespacedKey;
+    }
+
+    @Override
+    public void sendMessage(final String msg) {
+        players.forEach((player) -> player.sendMessage(msg));
+    }
+
+    @Override
+    public void sendMessages(final String[] msgs) {
+        for(String msg : msgs){
+            players.forEach((player) -> player.sendMessage(msg));
+        }
+    }
+
+    @Override
+    public void executeCommand(final String cmd) {
+        players.forEach((player) -> player.sendMessage(cmd));
+    }
+
+    @Override
+    public void executeCommands(final String[] cmds) {
+        for(String cmd : cmds){
+            players.forEach((player) -> player.performCommand(cmd));
+        }
+    }
+
+    @Override
+    public boolean containsPlayer(final Player player) {
+        return players.contains(player);
+    }
+
+    @Override
+    public NamespacedKey getChannelKey() {
+        return this.namespacedKey;
+    }
+
+    @Override
+    public String getChannelName() {
+        return this.title;
+    }
+
+    @Override
+    public void changeName(final String name) {
+        this.title = name;
+    }
+
+    @Override
+    public ChannelSettings getChannelSettings() {
+        return this.settings;
+    }
+}
diff --git a/src/main/java/net/minecraft/network/chat/OutgoingChatMessage.java b/src/main/java/net/minecraft/network/chat/OutgoingChatMessage.java
index 74cf1c043beef03cfd5adf481414a5ee78bef2a6..f7b473f05b13c23f755cd5d8047ca6d97135fc2a 100644
--- a/src/main/java/net/minecraft/network/chat/OutgoingChatMessage.java
+++ b/src/main/java/net/minecraft/network/chat/OutgoingChatMessage.java
@@ -1,6 +1,7 @@
 package net.minecraft.network.chat;
 
 import net.minecraft.server.level.ServerPlayer;
+import org.bukkit.event.player.PlayerChatEvent;
 
 public interface OutgoingChatMessage {
     Component content();
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index b6515c469ae3ff06daf631f0d5e5f792b41f8e48..5b8237d4f2de162c6f116fc876665d136ca79291 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -1,6 +1,8 @@
 package org.bukkit.craftbukkit.entity;
 
 import com.destroystokyo.paper.Title;
+import com.dueris.canvas.network.ChatChannelManager;
+import com.dueris.canvas.network.channels.ChatChannel;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableSet;
 import com.google.common.io.BaseEncoding;
@@ -54,6 +56,7 @@ import net.minecraft.network.protocol.game.ClientboundHurtAnimationPacket;
 import net.minecraft.network.protocol.game.ClientboundLevelEventPacket;
 import net.minecraft.network.protocol.game.ClientboundLevelParticlesPacket;
 import net.minecraft.network.protocol.game.ClientboundMapItemDataPacket;
+import net.minecraft.network.protocol.game.ClientboundPlayerChatPacket;
 import net.minecraft.network.protocol.game.ClientboundPlayerInfoRemovePacket;
 import net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket;
 import net.minecraft.network.protocol.game.ClientboundSectionBlocksUpdatePacket;
@@ -2917,6 +2920,26 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         this.getHandle().displayName = null;
     }
 
+    @Override
+    public ChatChannel getChatChannel() {
+        for(ChatChannel channel : this.getServer().getChatChannelManager().getChannels()){
+            if(channel.containsPlayer(this)) {
+                return channel;
+            }
+        }
+        return null;
+    }
+
+    @Override
+    public boolean isInChatChannel() {
+        for(ChatChannel channel : this.getServer().getChatChannelManager().getChannels()){
+            if(channel.containsPlayer(this)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
     @Override
     public void deleteMessage(net.kyori.adventure.chat.SignedMessage.Signature signature) {
         if (getHandle().connection == null) return;
