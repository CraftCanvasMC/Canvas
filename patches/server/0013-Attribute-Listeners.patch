From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <159172167+PurpleWolfMC@users.noreply.github.com>
Date: Wed, 7 Feb 2024 07:49:22 +0000
Subject: [PATCH] Attribute Listeners


diff --git a/src/main/java/io/papermc/paper/attribute/UnmodifiableAttributeMap.java b/src/main/java/io/papermc/paper/attribute/UnmodifiableAttributeMap.java
index 68044b8439c302114240d0ae4da93ab3e0789cd2..2ddc4c7181461ab9eeea67950f668592f3f4baf5 100644
--- a/src/main/java/io/papermc/paper/attribute/UnmodifiableAttributeMap.java
+++ b/src/main/java/io/papermc/paper/attribute/UnmodifiableAttributeMap.java
@@ -7,6 +7,9 @@ import org.bukkit.attribute.AttributeInstance;
 import org.bukkit.craftbukkit.attribute.CraftAttribute;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
+import org.bukkit.entity.*;
+import org.bukkit.attribute.*;
+import org.bukkit.plugin.*;
 
 public class UnmodifiableAttributeMap implements Attributable {
 
@@ -29,4 +32,10 @@ public class UnmodifiableAttributeMap implements Attributable {
     public void registerAttribute(@NotNull Attribute attribute) {
         throw new UnsupportedOperationException("Cannot register new attributes here");
     }
-}
+    // Canvas start
+    @Override
+    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate){
+        throw new UnsupportedOperationException("Cannot register new listener here");
+    }
+    // Canvas end
+}
\ No newline at end of file
diff --git a/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java b/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java
index 8a678df56fcf30535957e111d81ad07be5b501ec..b3ae0106f290971387be6f9bd1976ff74a24c51d 100644
--- a/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java
+++ b/src/main/java/org/bukkit/craftbukkit/attribute/CraftAttributeMap.java
@@ -5,6 +5,11 @@ import net.minecraft.world.entity.ai.attributes.AttributeMap;
 import org.bukkit.attribute.Attributable;
 import org.bukkit.attribute.Attribute;
 import org.bukkit.attribute.AttributeInstance;
+// Canvas start
+import org.bukkit.scheduler.BukkitRunnable;
+import org.bukkit.plugin.*;
+import org.bukkit.entity.*;
+// Canvas end
 
 public class CraftAttributeMap implements Attributable {
 
@@ -42,4 +47,29 @@ public class CraftAttributeMap implements Attributable {
         handle.registerAttribute(CraftAttribute.bukkitToMinecraft(attribute));
     }
     // Paper end - living entity allow attribute registration
+    // Canvas start
+    @Override
+    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate){
+        new BukkitRunnable(){
+            @Override
+            public void run(){
+                // if(!getSelf().isDead()){ --- Canvas - method not exist because not instance of an entity.
+                    if(getSelf().getAttribute(attribute) != null){
+                        if(condition){
+                            getSelf().getAttribute(attribute).setBaseValue(trueValue);
+                        }else{
+                            getSelf().getAttribute(attribute).setBaseValue(falseValue);
+                        }
+                    }
+                // }else{
+                //     this.cancel(); --- Canvas - method not exist because not instance of an entity.
+                // }
+            }
+        }.runTaskTimer(plugin, 0, tickrate);
+    }
+
+    private CraftAttributeMap getSelf(){
+        return this;
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
index 4d297382ca113222936e934788e8071c4ba65947..779487ac289ea7c84b5ab58bd059f191b1dcb920 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
@@ -92,6 +92,7 @@ import org.bukkit.util.Vector;
 // Canvas start
 import org.bukkit.scheduler.BukkitRunnable;
 import org.bukkit.entity.*;
+import org.bukkit.attribute.*;
 import org.bukkit.plugin.*;
 // Canvas end
 
@@ -111,6 +112,31 @@ public class CraftLivingEntity extends CraftEntity implements LivingEntity {
         return Math.min(Math.max(0, this.getHandle().getHealth()), this.getMaxHealth());
     }
 
+    // Canvas start
+    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate){
+        new BukkitRunnable(){
+            @Override
+            public void run(){
+                if(!getSelf().isDead()){
+                    if(getSelf().getAttribute(attribute) != null){
+                        if(condition){
+                            getSelf().getAttribute(attribute).setBaseValue(trueValue);
+                        }else{
+                            getSelf().getAttribute(attribute).setBaseValue(falseValue);
+                        }
+                    }
+                }else{
+                    this.cancel();
+                }
+            }
+        }.runTaskTimer(plugin, 0, tickrate);
+    }
+
+    private CraftLivingEntity getSelf(){
+        return this;
+    }
+    // Canvas end
+
     @Override
     public void setHealth(double health) {
         health = (float) health;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
index 459d5763933d690d0d242b6747121ab05cb66423..ce8af08831e6fd4a2d05161a8049b5f49a7f9a74 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
@@ -8,10 +8,13 @@ import org.bukkit.Sound;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.craftbukkit.CraftSound;
 import org.bukkit.craftbukkit.util.CraftNamespacedKey;
-import org.bukkit.entity.LivingEntity;
-import org.bukkit.entity.Mob;
-import org.bukkit.entity.Player;
 import org.bukkit.loot.LootTable;
+// Canvas start
+import org.bukkit.scheduler.BukkitRunnable;
+import org.bukkit.entity.*;
+import org.bukkit.attribute.*;
+import org.bukkit.plugin.*;
+// Canvas end
 
 public abstract class CraftMob extends CraftLivingEntity implements Mob {
     public CraftMob(CraftServer server, net.minecraft.world.entity.Mob entity) {
@@ -33,6 +36,32 @@ public abstract class CraftMob extends CraftLivingEntity implements Mob {
         }
     }
 
+    // Canvas start
+    public void registerAttributeListener(boolean condition, int falseValue, int trueValue, Attribute attribute, Plugin plugin, int tickrate){
+        new BukkitRunnable(){
+            @Override
+            public void run(){
+                if(!getSelf().isDead()){
+                    if(getSelf().getAttribute(attribute) != null){
+                        if(condition){
+                            getSelf().getAttribute(attribute).setBaseValue(trueValue);
+                        }else{
+                            getSelf().getAttribute(attribute).setBaseValue(falseValue);
+                        }
+                    }
+                }else{
+                    this.cancel();
+                }
+            }
+        }.runTaskTimer(plugin, 0, tickrate);
+    }
+
+    private CraftMob getSelf(){
+        return this;
+    }
+
+    // Canvas end
+
     @Override
     public boolean canBeLeashed(Player player){
         return this.getHandle().canBeLeashed(((CraftPlayer) player).getHandle());
