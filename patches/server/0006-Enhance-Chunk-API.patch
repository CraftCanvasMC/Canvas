From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Tue, 5 Nov 2024 19:05:41 -0800
Subject: [PATCH] Enhance Chunk API


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
index 0074bc0e7147dc3a8c538e796f14ac9bf8725896..88d20603fcf4b6a8acb62300449a34fa19438434 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
@@ -5,10 +5,16 @@ import com.google.common.base.Predicates;
 import com.mojang.serialization.Codec;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
 import java.util.Objects;
+import java.util.Random;
+import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.locks.LockSupport;
 import java.util.function.BooleanSupplier;
 import java.util.function.Predicate;
+import io.papermc.paper.math.Position;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Holder;
 import net.minecraft.core.Registry;
@@ -17,6 +23,8 @@ import net.minecraft.core.registries.Registries;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtOps;
 import net.minecraft.server.level.ServerLevel;
+import net.minecraft.util.Mth;
+import net.minecraft.util.RandomSource;
 import net.minecraft.util.thread.ConsecutiveExecutor;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.LightLayer;
@@ -25,6 +33,7 @@ import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.chunk.ChunkAccess;
 import net.minecraft.world.level.chunk.DataLayer;
 import net.minecraft.world.level.chunk.ImposterProtoChunk;
+import net.minecraft.world.level.chunk.LevelChunk;
 import net.minecraft.world.level.chunk.LevelChunkSection;
 import net.minecraft.world.level.chunk.PalettedContainer;
 import net.minecraft.world.level.chunk.PalettedContainerRO;
@@ -35,8 +44,11 @@ import net.minecraft.world.level.entity.PersistentEntitySectionManager;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
 import net.minecraft.world.level.lighting.LevelLightEngine;
+import org.bukkit.Bukkit;
 import org.bukkit.Chunk;
 import org.bukkit.ChunkSnapshot;
+import org.bukkit.Location;
+import org.bukkit.Material;
 import org.bukkit.World;
 import org.bukkit.block.Biome;
 import org.bukkit.block.Block;
@@ -45,6 +57,7 @@ import org.bukkit.block.data.BlockData;
 import org.bukkit.craftbukkit.block.CraftBiome;
 import org.bukkit.craftbukkit.block.CraftBlock;
 import org.bukkit.craftbukkit.block.data.CraftBlockData;
+import org.bukkit.craftbukkit.entity.CraftEntity;
 import org.bukkit.entity.Entity;
 import org.bukkit.entity.Player;
 import org.bukkit.generator.structure.GeneratedStructure;
@@ -380,6 +393,72 @@ public class CraftChunk implements Chunk {
         return this.getWorld().getPlayersSeeingChunk(this);
     }
 
+    // Canvas start
+    @Override
+    public void clearAllEntities() {
+        for(Entity entity : this.getEntities()){
+            CraftEntity craftEntity = (CraftEntity) entity;
+            craftEntity.getHandle().remove(net.minecraft.world.entity.Entity.RemovalReason.DISCARDED);
+        }
+    }
+
+    @Override
+    public List<Entity> getEntitiesInChunk() {
+        return Arrays.stream(getEntities()).toList();
+    }
+
+    @Override
+    public void replaceBlocksInChunk(final Material oldMat, final Material newMat) {
+        for (Block block : this.getBlocksInChunk()) {
+            if (block.getType() == oldMat) {
+                block.setType(newMat);
+            }
+        }
+    }
+
+    @Override
+    public void reloadChunk() {
+        this.unload(true);
+        this.load();
+    }
+
+    @Override
+    public void addEntityToChunk(final Entity entity) {
+        entity.spawnAt(this.getCenter());
+    }
+
+    @Override
+    public void addEntityToChunk(final Entity entity, final Location location) {
+        entity.spawnAt(location);
+    }
+
+    @Override
+    public Location getCenter() {
+        return this.getBlock(0, 0, 0).getLocation();
+    }
+
+    @Override
+    public Block[] getBlocksInChunk() {
+        World world = this.getWorld();
+        int chunkX = this.getX();
+        int chunkZ = this.getZ();
+        Block[] blocks = new Block[16 * 256 * 16];
+        int index = 0;
+
+        for (int x = 0; x < 16; x++) {
+            for (int y = 0; y < 256; y++) {
+                for (int z = 0; z < 16; z++) {
+                    Location blockLocation = new Location(world, chunkX * 16 + x, y, chunkZ * 16 + z);
+                    Block block = blockLocation.getBlock();
+                    blocks[index++] = block;
+                }
+            }
+        }
+        return blocks;
+    }
+    // Canvas end
+
+
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 48ad261eec1b74fad5a4fc1516b75fd2aaecd528..cfc51db208f8f56c4f0e19d8f79a8cc8975f64b7 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -111,6 +111,7 @@ import net.minecraft.world.level.saveddata.maps.MapItemSavedData;
 import org.bukkit.BanEntry;
 import org.bukkit.BanList;
 import org.bukkit.Bukkit;
+import org.bukkit.Chunk;
 import org.bukkit.DyeColor;
 import org.bukkit.Effect;
 import org.bukkit.GameMode;
@@ -3147,6 +3148,32 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         this.getHandle().adventure$displayName = displayName != null ? displayName : net.kyori.adventure.text.Component.text(this.getName());
         this.getHandle().displayName = null;
     }
+    // Canvas start
+    
+    @Override
+    public Chunk[] getChunksInRenderDistance() {
+        int viewDistance = this.getClientViewDistance();
+        int playerChunkX = this.getLocation().getChunk().getX();
+        int playerChunkZ = this.getLocation().getChunk().getZ();
+
+        int startChunkX = playerChunkX - viewDistance;
+        int endChunkX = playerChunkX + viewDistance;
+        int startChunkZ = playerChunkZ - viewDistance;
+        int endChunkZ = playerChunkZ + viewDistance;
+
+        Chunk[] chunksInPlayerView = new Chunk[(endChunkX - startChunkX + 1) * (endChunkZ - startChunkZ + 1)];
+        int index = 0;
+
+        for (int x = startChunkX; x <= endChunkX; x++) {
+            for (int z = startChunkZ; z <= endChunkZ; z++) {
+                chunksInPlayerView[index] = this.getWorld().getChunkAt(x, z);
+                index++;
+            }
+        }
+
+        return chunksInPlayerView;
+    }
+    // Canvas end
 
     @Override
     public void deleteMessage(net.kyori.adventure.chat.SignedMessage.Signature signature) {
diff --git a/src/main/java/org/bukkit/craftbukkit/generator/CustomChunkGenerator.java b/src/main/java/org/bukkit/craftbukkit/generator/CustomChunkGenerator.java
index e34060c21755c61228ba91e468b7c92fc4c4cf0c..305e627e94d93115e9f340bca835882daca910d6 100644
--- a/src/main/java/org/bukkit/craftbukkit/generator/CustomChunkGenerator.java
+++ b/src/main/java/org/bukkit/craftbukkit/generator/CustomChunkGenerator.java
@@ -94,7 +94,7 @@ public class CustomChunkGenerator extends InternalChunkGenerator {
         return this.delegate;
     }
 
-    private static WorldgenRandom getSeededRandom() {
+    public static WorldgenRandom getSeededRandom() { // Canvas - private -> public
         return new WorldgenRandom(new LegacyRandomSource(0));
     }
 
