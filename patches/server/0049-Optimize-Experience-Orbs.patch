From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Fri, 24 May 2024 18:49:01 -0700
Subject: [PATCH] Optimize Experience Orbs


diff --git a/src/main/java/me/dueris/canvas/CanvasConfig.java b/src/main/java/me/dueris/canvas/CanvasConfig.java
index bd501d0e3b0dcb5836952d3f79d044cf0ebff449..9e84d1e11cbfd253adfc31e42cd1881c3115527f 100644
--- a/src/main/java/me/dueris/canvas/CanvasConfig.java
+++ b/src/main/java/me/dueris/canvas/CanvasConfig.java
@@ -203,6 +203,10 @@ public class CanvasConfig {
     public static int spawnerMaxPlayerRange = 16;
     public static boolean spawnerEntitiesHaveAI = true;
 
+    public static boolean playerInstaAbsorbOrbs = false;
+    public static boolean useCanvasOrbOptimizations = false;
+    public static double orbMergeSearchInfaltionRadius = 0.8;
+
     private static void general(){
         disableFootsteps = getBoolean("disableFootsteps", disableFootsteps);
         checkLightForSnow = getBoolean("checkLightForSnow", checkLightForSnow);
@@ -237,6 +241,9 @@ public class CanvasConfig {
         fallingBlocksLoadChunks = getBoolean("optimizations.fallingBlocksLoadChunks", fallingBlocksLoadChunks);
         tickItemFrames = getBoolean("optimizations.tickItemFrames", tickItemFrames);
         disableRaidsFromSpawnerRaiders = getBoolean("optimizations.disableRaidsFromSpawnerRaiders", disableRaidsFromSpawnerRaiders);
+        playerInstaAbsorbOrbs = getBoolean("playerInstaAbsorbOrbs", playerInstaAbsorbOrbs);
+        useCanvasOrbOptimizations = getBoolean("useCanvasOrbOptimizations", useCanvasOrbOptimizations);
+        orbMergeSearchInfaltionRadius = getDouble("orbMergeSearchInfaltionRadius", orbMergeSearchInfaltionRadius);
     }
     
     private static void blocks(){
diff --git a/src/main/java/net/minecraft/world/entity/ExperienceOrb.java b/src/main/java/net/minecraft/world/entity/ExperienceOrb.java
index 49c015c91f8512241682ccb3a0fceb286cb2d909..d7e82f482a83e9f9adee03f3bb9b6869cb895a2d 100644
--- a/src/main/java/net/minecraft/world/entity/ExperienceOrb.java
+++ b/src/main/java/net/minecraft/world/entity/ExperienceOrb.java
@@ -22,6 +22,7 @@ import net.minecraft.world.level.entity.EntityTypeTest;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 // CraftBukkit start
+import org.bukkit.craftbukkit.entity.CraftExperienceOrb;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.entity.EntityRemoveEvent;
 import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
@@ -145,7 +146,21 @@ public class ExperienceOrb extends Entity {
         }
 
         if (this.tickCount % 20 == 1) {
-            this.scanForEntities();
+            // Canvas start
+            if (this.followingPlayer == null || this.followingPlayer.distanceToSqr((Entity) this) > 64.0D) {
+                this.followingPlayer = this.level().getNearestPlayer(this, 8.0D);
+            }
+            if(me.dueris.canvas.CanvasConfig.useCanvasOrbOptimizations){
+                List<ExperienceOrb> orbs = this.level().getEntities(EntityTypeTest.forClass(ExperienceOrb.class), this.getBoundingBox().inflate(me.dueris.canvas.CanvasConfig.orbMergeSearchInfaltionRadius), orb -> orb != this && !orb.isRemoved());
+                if(orbs.size() > 0){
+                    orbs.forEach(orb -> {
+                        this.count += orb.count;
+                        this.age = Math.min(this.age, orb.age);
+                        orb.remove(RemovalReason.DISCARDED);
+                    });
+                }
+            } else this.scanForEntities();
+            // Canvas end
         }
 
         if (this.followingPlayer != null && (this.followingPlayer.isSpectator() || this.followingPlayer.isDeadOrDying())) {
@@ -203,9 +218,10 @@ public class ExperienceOrb extends Entity {
     }
 
     private void scanForEntities() {
+        /* // Canvas
         if (this.followingPlayer == null || this.followingPlayer.distanceToSqr((Entity) this) > 64.0D) {
             this.followingPlayer = this.level().getNearestPlayer(this, 8.0D);
-        }
+        } */ // Canvas
 
         if (this.level() instanceof ServerLevel) {
             List<ExperienceOrb> list = this.level().getEntities(EntityTypeTest.forClass(ExperienceOrb.class), this.getBoundingBox().inflate(0.5D), this::canMerge);
@@ -332,8 +348,13 @@ public class ExperienceOrb extends Entity {
     @Override
     public void playerTouch(Player player) {
         if (!this.level().isClientSide) {
-            if (player.takeXpDelay == 0 && new com.destroystokyo.paper.event.player.PlayerPickupExperienceEvent(((net.minecraft.server.level.ServerPlayer) player).getBukkitEntity(), (org.bukkit.entity.ExperienceOrb) this.getBukkitEntity()).callEvent()) { // Paper - PlayerPickupExperienceEvent
+            if ((me.dueris.canvas.CanvasConfig.playerInstaAbsorbOrbs || player.takeXpDelay == 0) && new com.destroystokyo.paper.event.player.PlayerPickupExperienceEvent(((net.minecraft.server.level.ServerPlayer) player).getBukkitEntity(), (org.bukkit.entity.ExperienceOrb) this.getBukkitEntity()).callEvent()) { // Paper - PlayerPickupExperienceEvent // Canvas
                 player.takeXpDelay = CraftEventFactory.callPlayerXpCooldownEvent(player, this.level().purpurConfig.playerExpPickupDelay, PlayerExpCooldownChangeEvent.ChangeReason.PICKUP_ORB).getNewCooldown(); // CraftBukkit - entityhuman.takeXpDelay = 2; // Purpur
+                // Canvas start
+                if(me.dueris.canvas.CanvasConfig.playerInstaAbsorbOrbs) {
+                    player.takeXpDelay = 0;
+                }
+                // Canvas end
                 player.take(this, 1);
                 int i = this.repairPlayerItems(player, this.value);
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index c3e6535599e8993f0831e3f7243f8f8f52039200..7aee22abba7aa4dd0b0b1af55247fb825fbff0ab 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -632,7 +632,7 @@ public abstract class Player extends LivingEntity {
             while (iterator.hasNext()) {
                 Entity entity = (Entity) iterator.next();
 
-                if (entity.getType() == EntityType.EXPERIENCE_ORB && entity.level().purpurConfig.playerExpPickupDelay >= 0) { // Purpur
+                if ((entity.getType() == EntityType.EXPERIENCE_ORB && entity.level().purpurConfig.playerExpPickupDelay >= 0) && !me.dueris.canvas.CanvasConfig.playerInstaAbsorbOrbs) { // Purpur // Canvas
                     list1.add(entity);
                 } else if (!entity.isRemoved()) {
                     this.touch(entity);
