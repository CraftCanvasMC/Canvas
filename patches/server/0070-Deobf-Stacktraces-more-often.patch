From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Mon, 18 Mar 2024 16:35:02 -0700
Subject: [PATCH] Deobf Stacktraces more often


diff --git a/src/main/java/com/destroystokyo/paper/util/misc/AreaMap.java b/src/main/java/com/destroystokyo/paper/util/misc/AreaMap.java
index 091b1ae822e1c0517e59572e7a9bda11e998c0ee..e885412cc0150acce13a4d5d0ac09bfdf137b211 100644
--- a/src/main/java/com/destroystokyo/paper/util/misc/AreaMap.java
+++ b/src/main/java/com/destroystokyo/paper/util/misc/AreaMap.java
@@ -231,6 +231,7 @@ public abstract class AreaMap<E> {
                 if (ex instanceof ThreadDeath) {
                     throw (ThreadDeath)ex;
                 }
+                io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(ex); // Canvas
                 MinecraftServer.LOGGER.error("Add callback for map threw exception ", ex);
             }
         }
@@ -265,6 +266,7 @@ public abstract class AreaMap<E> {
                 if (ex instanceof ThreadDeath) {
                     throw (ThreadDeath)ex;
                 }
+                io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(ex); // Canvas
                 MinecraftServer.LOGGER.error("Remove callback for map threw exception ", ex);
             }
         }
diff --git a/src/main/java/io/papermc/paper/util/MCUtil.java b/src/main/java/io/papermc/paper/util/MCUtil.java
index 2222625a515d9ae6c3e9c92fc4d4a5bf974af5f8..12b64dcbfbd128b10158813e099f9a2320395a0f 100644
--- a/src/main/java/io/papermc/paper/util/MCUtil.java
+++ b/src/main/java/io/papermc/paper/util/MCUtil.java
@@ -306,6 +306,7 @@ public final class MCUtil {
             try {
                 runnable.run();
             } catch (Exception e) {
+                io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(e); // Canvas
                 MinecraftServer.LOGGER.error("Error executing task", e);
             }
         }
diff --git a/src/main/java/io/papermc/paper/util/StacktraceDeobfuscator.java b/src/main/java/io/papermc/paper/util/StacktraceDeobfuscator.java
index eb910d4abf91488fa7cf1f5d47e0ee916c47f512..0b01a204378f8064a40ec8c57c5a14f03b5261f6 100644
--- a/src/main/java/io/papermc/paper/util/StacktraceDeobfuscator.java
+++ b/src/main/java/io/papermc/paper/util/StacktraceDeobfuscator.java
@@ -29,9 +29,9 @@ public enum StacktraceDeobfuscator {
         }
     });
 
-    public void deobfuscateThrowable(final Throwable throwable) {
+    public Throwable deobfuscateThrowable(final Throwable throwable) { // Canvas
         if (GlobalConfiguration.get() != null && !GlobalConfiguration.get().logging.deobfuscateStacktraces) { // handle null as true
-            return;
+            return throwable; // Canvas
         }
 
         throwable.setStackTrace(this.deobfuscateStacktrace(throwable.getStackTrace()));
@@ -42,6 +42,7 @@ public enum StacktraceDeobfuscator {
         for (final Throwable suppressed : throwable.getSuppressed()) {
             this.deobfuscateThrowable(suppressed);
         }
+        return throwable; // Canvas
     }
 
     public StackTraceElement[] deobfuscateStacktrace(final StackTraceElement[] traceElements) {
diff --git a/src/main/java/net/minecraft/CrashReport.java b/src/main/java/net/minecraft/CrashReport.java
index f91ea723a1c85f6cf8c4f6dd7f182b948c2f2e81..d59f83ccfbf1480b73adc09ba1f2b723c14a7dac 100644
--- a/src/main/java/net/minecraft/CrashReport.java
+++ b/src/main/java/net/minecraft/CrashReport.java
@@ -228,7 +228,7 @@ public class CrashReport {
     }
 
     private static String getErrorComment() {
-        String[] astring = new String[]{"Who set us up the TNT?", "Everything's going to plan. No, really, that was supposed to happen.", "Uh... Did I do that?", "Oops.", "Why did you do that?", "I feel sad now :(", "My bad.", "I'm sorry, Dave.", "I let you down. Sorry :(", "On the bright side, I bought you a teddy bear!", "Daisy, daisy...", "Oh - I know what I did wrong!", "Hey, that tickles! Hehehe!", "I blame Dinnerbone.", "You should try our sister game, Minceraft!", "Don't be sad. I'll do better next time, I promise!", "Don't be sad, have a hug! <3", "I just don't know what went wrong :(", "Shall we play a game?", "Quite honestly, I wouldn't worry myself about that.", "I bet Cylons wouldn't have this problem.", "Sorry :(", "Surprise! Haha. Well, this is awkward.", "Would you like a cupcake?", "Hi. I'm Minecraft, and I'm a crashaholic.", "Ooh. Shiny.", "This doesn't make any sense!", "Why is it breaking :(", "Don't do that.", "Ouch. That hurt :(", "You're mean.", "This is a token for 1 free hug. Redeem at your nearest Mojangsta: [~~HUG~~]", "There are four lights!", "But it works on my machine."};
+        String[] astring = new String[]{"Who set us up the TNT?", "Everything's going to plan. No, really, that was supposed to happen.", "Uh... Did I do that?", "Oops.", "Why did you do that?", "I feel sad now :(", "My bad.", "I'm sorry, Dave.", "I let you down. Sorry :(", "On the bright side, I bought you a teddy bear!", "Daisy, daisy...", "Oh - I know what I did wrong!", "Hey, that tickles! Hehehe!", "I blame Dinnerbone.", "You should try our sister game, Minceraft!", "Don't be sad. I'll do better next time, I promise!", "Don't be sad, have a hug! <3", "I just don't know what went wrong :(", "Shall we play a game?", "Quite honestly, I wouldn't worry myself about that.", "I bet Cylons wouldn't have this problem.", "Sorry :(", "Surprise! Haha. Well, this is awkward.", "Would you like a cupcake?", "Hi. I'm Minecraft, and I'm a crashaholic.", "Ooh. Shiny.", "This doesn't make any sense!", "Why is it breaking :(", "Don't do that.", "Ouch. That hurt :(", "You're mean.", "This is a token for 1 free hug. Redeem at your nearest Mojangsta: [~~HUG~~]", "There are four lights!", "But it works on my machine.", "suffering from success, no?"}; // Canvas
 
         try {
             return astring[(int) (Util.getNanos() % (long) astring.length)];
diff --git a/src/main/java/net/minecraft/commands/Commands.java b/src/main/java/net/minecraft/commands/Commands.java
index b203394ed62807e7d5df433830993f1d2ee14939..0c42df86bc01301ab8cb0290ba766845d8916fb2 100644
--- a/src/main/java/net/minecraft/commands/Commands.java
+++ b/src/main/java/net/minecraft/commands/Commands.java
@@ -447,6 +447,7 @@ public class Commands {
                         throwable.addSuppressed(throwable1);
                     }
 
+                    io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
                     throw throwable;
                 }
 
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index a86c766317a499450b91c2fece5ee26ffbb4efd9..1ab65d6b296e16c66ba3b0d721e758668b7224c2 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -2625,6 +2625,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 }
             }
 
+            io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
             throw throwable;
         }
 
@@ -2663,6 +2664,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 }
             }
 
+            io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
             throw throwable;
         }
 
@@ -2695,6 +2697,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 }
             }
 
+            io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
             throw throwable;
         }
 
@@ -2730,6 +2733,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 }
             }
 
+            io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
             throw throwable;
         }
 
@@ -2781,6 +2785,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                     }
                 }
 
+                io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable1); // Canvas
                 throw throwable1;
             }
 
diff --git a/src/main/java/net/minecraft/server/PlayerAdvancements.java b/src/main/java/net/minecraft/server/PlayerAdvancements.java
index ba8a8575af92541cef2e116743d51cd68d1e794a..2dcb3eb15c6333dc9268d97eea6a81e229677e31 100644
--- a/src/main/java/net/minecraft/server/PlayerAdvancements.java
+++ b/src/main/java/net/minecraft/server/PlayerAdvancements.java
@@ -147,6 +147,7 @@ public class PlayerAdvancements {
                         throwable.addSuppressed(throwable1);
                     }
 
+                    io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
                     throw throwable;
                 }
 
@@ -181,6 +182,7 @@ public class PlayerAdvancements {
                     }
                 }
 
+                io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
                 throw throwable;
             }
 
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index ecb1644afb10aef022aa010b6aa382c91cfa8d96..018a23162df163895d193848072e5cf72d18e01c 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -466,6 +466,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
                 }
             }
 
+            io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
             throw throwable;
         }
 
diff --git a/src/main/java/net/minecraft/server/dedicated/Settings.java b/src/main/java/net/minecraft/server/dedicated/Settings.java
index 184d7c72b49186543a1be70814159f2ab43ba902..4eb68201850cc8a971bf8641a677b500336c10c5 100644
--- a/src/main/java/net/minecraft/server/dedicated/Settings.java
+++ b/src/main/java/net/minecraft/server/dedicated/Settings.java
@@ -83,6 +83,7 @@ public abstract class Settings<T extends Settings<T>> {
                         }
                     }
 
+                    io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
                     throw throwable;
                 }
 
@@ -109,6 +110,7 @@ public abstract class Settings<T extends Settings<T>> {
                         }
                     }
 
+                    io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable2); // Canvas
                     throw throwable2;
                 }
 
@@ -186,6 +188,7 @@ public abstract class Settings<T extends Settings<T>> {
                     }
                 }
 
+                io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
                 throw throwable;
             }
 
diff --git a/src/main/java/net/minecraft/server/level/DistanceManager.java b/src/main/java/net/minecraft/server/level/DistanceManager.java
index 7c425ac50c83757b66a2178bc19d4c920b82f12f..8735808e04b54510d0bfbb29388b7fe0733b84c1 100644
--- a/src/main/java/net/minecraft/server/level/DistanceManager.java
+++ b/src/main/java/net/minecraft/server/level/DistanceManager.java
@@ -336,6 +336,7 @@ public abstract class DistanceManager {
                         throwable.addSuppressed(throwable1);
                     }
 
+                    io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
                     throw throwable;
                 }
 
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index b14a85e324371379e622d668f31857072f650ad7..d0194570d38608a0e80dd2b46360faa9a58b5722 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -1368,6 +1368,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
         } catch (Throwable throwable) { // Pufferfish - diff on change ServerLevel.tick
             if (throwable instanceof ThreadDeath) throw throwable; // Paper
             // Paper start - Prevent block entity and entity crashes
+            io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
             final String msg = String.format("Entity threw exception at %s:%s,%s,%s", entity.level().getWorld().getName(), entity.getX(), entity.getY(), entity.getZ());
             MinecraftServer.LOGGER.error(msg, throwable);
             getCraftServer().getPluginManager().callEvent(new com.destroystokyo.paper.event.server.ServerExceptionEvent(new com.destroystokyo.paper.exception.ServerInternalException(msg, throwable))); // Paper - ServerExceptionEvent
diff --git a/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java b/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java
index 97724cbd6c1bf172379e98d4a3f6e8cda5cda823..fad3d93cb334865b08dc1a7daba511d9673959ac 100644
--- a/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java
+++ b/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java
@@ -1197,6 +1197,7 @@ public class LevelChunk extends ChunkAccess {
                     } catch (Throwable throwable) {
                         if (throwable instanceof ThreadDeath) throw throwable; // Paper
                         // Paper start - Prevent block entity and entity crashes
+                        io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
                         final String msg = String.format("BlockEntity threw exception at %s:%s,%s,%s", LevelChunk.this.getLevel().getWorld().getName(), this.getPos().getX(), this.getPos().getY(), this.getPos().getZ());
                         net.minecraft.server.MinecraftServer.LOGGER.error(msg, throwable);
                         net.minecraft.world.level.chunk.LevelChunk.this.level.getCraftServer().getPluginManager().callEvent(new com.destroystokyo.paper.event.server.ServerExceptionEvent(new ServerInternalException(msg, throwable))); // Paper - ServerExceptionEvent
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 05b9b0838ccf1772e0f00afce585c05909ce9aaa..0debfba18fb62523fdbba4c392e7c955e8d4348e 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1717,6 +1717,7 @@ public final class CraftServer implements Server {
                     dynamic = worldSession.getDataTagFallback();
                     worldinfo = worldSession.getSummary(dynamic);
                 } catch (NbtException | ReportedNbtException | IOException ioexception1) {
+                    io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(ioexception1); // Canvas
                     MinecraftServer.LOGGER.error("Failed to load world data from {}", convertable_b.oldDataFile(), ioexception1);
                     MinecraftServer.LOGGER.error("Failed to load world data from {} and {}. World files may be corrupted. Shutting down.", convertable_b.dataFile(), convertable_b.oldDataFile());
                     return null;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index af30e4ea5dd28d46aedcf7df1aa88d50eb7ddbdc..bf7df5c58c468a4c35fdaa98f4770eaf9e12ce00 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -1164,6 +1164,7 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
                         if (throwable instanceof ThreadDeath) {
                             throw (ThreadDeath)throwable;
                         }
+                    io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable); // Canvas
                         net.minecraft.server.MinecraftServer.LOGGER.error("Failed to teleport entity " + CraftEntity.this, throwable);
                         ret.completeExceptionally(throwable);
                     }
diff --git a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
index ca8ae8e1c51b937dac916e0b0dc94b5e2e61efeb..594cb2c46fac21ea2c7c8fb1884805510630caba 100644
--- a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
+++ b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
@@ -482,6 +482,7 @@ public class CraftScheduler implements BukkitScheduler {
                     task.run();
                 } catch (final Throwable throwable) {
                     // Paper start
+                    io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable);
                     String msg = String.format(
                         "Task #%s for %s generated an exception",
                         task.getTaskId(),
diff --git a/src/main/java/org/spigotmc/AsyncCatcher.java b/src/main/java/org/spigotmc/AsyncCatcher.java
index 2e074c16dab1ead47914070329da0398c3274048..2951d8a6e84c708bc64431075c37fa93d688eef9 100644
--- a/src/main/java/org/spigotmc/AsyncCatcher.java
+++ b/src/main/java/org/spigotmc/AsyncCatcher.java
@@ -12,7 +12,9 @@ public class AsyncCatcher
         if (!(io.papermc.paper.util.TickThread.isTickThread())) // Paper
         {
             MinecraftServer.LOGGER.error("Thread " + Thread.currentThread().getName() + " failed main thread check: " + reason, new Throwable()); // Paper
-            throw new IllegalStateException( "Asynchronous " + reason + "!" );
+            IllegalStateException throwable = new IllegalStateException("Asynchronous " + reason + "!");
+            io.papermc.paper.util.StacktraceDeobfuscator.INSTANCE.deobfuscateThrowable(throwable);
+            throw throwable;
         }
     }
 }
