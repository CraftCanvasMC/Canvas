From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sat, 6 Apr 2024 12:10:42 -0700
Subject: [PATCH] Generic Configs


diff --git a/src/main/java/me/dueris/canvas/CanvasConfig.java b/src/main/java/me/dueris/canvas/CanvasConfig.java
index f427aed8c26e021c29c7c5c2677a8a0249d68932..d058318adb9f7e219ae7d52b325fc587872de3a9 100644
--- a/src/main/java/me/dueris/canvas/CanvasConfig.java
+++ b/src/main/java/me/dueris/canvas/CanvasConfig.java
@@ -168,7 +168,6 @@ public class CanvasConfig {
         return builder.build();
     }
 
-    public static boolean disableMixin = false;
     public static boolean obfuscateIps = false;
     public static boolean bypassStartupCheck = false;
     public static boolean wantChunky = true;
@@ -191,15 +190,21 @@ public class CanvasConfig {
     public static int mobWanderingReducedRateMultiplier = 6;
     public static int mobWanderingDelay = 20 * 5;
     public static boolean threadripper = false;
+    public static boolean tntLoadChunks = true;
+    public static boolean enderpearlsLoadChunks = true;
+    public static boolean fallingBlocksLoadChunks = true;
+    public static boolean tickItemFrames = true;
+    public static boolean checkLightForSnow = false;
+    public static boolean lavaCatchesBlocksOnFire = true;
+    public static boolean disableFootsteps = false;
+    public static boolean disableRaidsFromSpawnerRaiders = false;
 
-    private static void mixin(){
-        disableMixin = getBoolean("mixin.disableMixins", disableMixin);
-    }
     private static void logger(){
         obfuscateIps = getBoolean("logger.obfuscateIps", obfuscateIps);
     }
     private static void general(){
-        bypassStartupCheck = getBoolean("bypassStartupCheck", bypassStartupCheck);
+        disableFootsteps = getBoolean("disableFootsteps", disableFootsteps);
+        checkLightForSnow = getBoolean("checkLightForSnow", checkLightForSnow);
     }
     private static void plugins(){
         wantChunky = getBoolean("plugins.use_provided_chunky", wantChunky);
@@ -229,10 +234,16 @@ public class CanvasConfig {
         mobWanderingPercentChance = getInt("optimizations.mobWanderingPercentChance", mobWanderingPercentChance);
         mobWanderingReducedRateMultiplier = getInt("optimizations.mobWanderingReducedRateMultiplier", mobWanderingReducedRateMultiplier);
         threadripper = getBoolean("optimizations.threadripper", threadripper);
+        tntLoadChunks = getBoolean("optimizations.tntLoadChunks", tntLoadChunks);
+        enderpearlsLoadChunks = getBoolean("optimizations.enderpearlsLoadChunks", enderpearlsLoadChunks);
+        fallingBlocksLoadChunks = getBoolean("optimizations.fallingBlocksLoadChunks", fallingBlocksLoadChunks);
+        tickItemFrames = getBoolean("optimizations.tickItemFrames", tickItemFrames);
+        disableRaidsFromSpawnerRaiders = getBoolean("optimizations.disableRaidsFromSpawnerRaiders", disableRaidsFromSpawnerRaiders);
     }
     private static void blocks(){
         useCanvasBedSetDye = getBoolean("blocks.useCanvasBedSetDyeMethod", useCanvasBedSetDye);
         makeCampfireAlwaysLots = getBoolean("block.forceCampfireEmitLotsOfParticles", makeCampfireAlwaysLots);
         farmlandSearchRadius = getInt("block.farmlandSearchRadius", farmlandSearchRadius);
+        lavaCatchesBlocksOnFire = getBoolean("block.lavaCatchesBlocksOnFire", lavaCatchesBlocksOnFire);
     }
 }
diff --git a/src/main/java/net/minecraft/server/level/ServerEntity.java b/src/main/java/net/minecraft/server/level/ServerEntity.java
index ba008b21f8670e01eff6f0064bc4503e0b580ac1..00f56706a8ce0abcb38261e85f376a5d68706e80 100644
--- a/src/main/java/net/minecraft/server/level/ServerEntity.java
+++ b/src/main/java/net/minecraft/server/level/ServerEntity.java
@@ -111,7 +111,7 @@ public class ServerEntity {
 
         Entity entity = this.entity;
 
-        if (!this.trackedPlayers.isEmpty() && entity instanceof ItemFrame) { // Paper - Perf: Only tick item frames if players can see it
+        if (me.dueris.canvas.CanvasConfig.tickItemFrames && !this.trackedPlayers.isEmpty() && entity instanceof ItemFrame) { // Paper - Perf: Only tick item frames if players can see it // Canvas - More Configs -- Optimizations
             ItemFrame entityitemframe = (ItemFrame) entity;
 
             if (true || this.tickCount % 10 == 0) { // CraftBukkit - Moved below, should always enter this block
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 90f8fdad3f32455ff753f7c7e855d42c087f7b2a..63b8421d6e4fc1cadb24019e2b60c2f03d34b021 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -2887,12 +2887,19 @@ public class ServerLevel extends Level implements WorldGenLevel {
         }
 
         public void onTickingEnd(Entity entity) {
+            // Canvas start - More Configs -- Optimizations
+            if(!me.dueris.canvas.CanvasConfig.tntLoadChunks && !me.dueris.canvas.CanvasConfig.fallingBlocksLoadChunks && !me.dueris.canvas.CanvasConfig.enderpearlsLoadChunks || entity.isRemoved() ||
+                (!me.dueris.canvas.CanvasConfig.tntLoadChunks || entity.getType() != EntityType.TNT) &&
+                (!me.dueris.canvas.CanvasConfig.fallingBlocksLoadChunks || entity.getType() != EntityType.FALLING_BLOCK) &&
+                (!me.dueris.canvas.CanvasConfig.enderpearlsLoadChunks || entity.getType() != EntityType.ENDER_PEARL)) {
+            // Canvas end
             ServerLevel.this.entityTickList.remove(entity);
             // Paper start - Reset pearls when they stop being ticked
             if (paperConfig().fixes.disableUnloadedChunkEnderpearlExploit && entity instanceof net.minecraft.world.entity.projectile.ThrownEnderpearl pearl) {
                 pearl.cachedOwner = null;
                 pearl.ownerUUID = null;
             }
+            } // Canvas
             // Paper end - Reset pearls when they stop being ticked
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 78db6173283aadc7f3e55cba4a258a8630a60965..b55ea11830c1d5d24152772a989202014a6ed3c7 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -1799,6 +1799,7 @@ public abstract class Player extends LivingEntity {
 
     @Override
     protected void playStepSound(BlockPos pos, BlockState state) {
+        if(me.dueris.canvas.CanvasConfig.disableFootsteps) return; // Canvas - More Configs -- General
         if (this.isInWater()) {
             this.waterSwimSound();
             this.playMuffledStepSound(state);
diff --git a/src/main/java/net/minecraft/world/entity/raid/Raider.java b/src/main/java/net/minecraft/world/entity/raid/Raider.java
index b3912881892b4f1bca577761083c5da1568c8187..24d500671002cca4cab2d08b9d47a3e360b54fb5 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raider.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raider.java
@@ -67,7 +67,9 @@ public abstract class Raider extends PatrollingMonster {
         super.registerGoals();
         this.goalSelector.addGoal(1, new Raider.ObtainRaidLeaderBannerGoal<>(this));
         this.goalSelector.addGoal(3, new PathfindToRaidGoal<>(this));
+        if(!spawnedViaMobSpawner || !me.dueris.canvas.CanvasConfig.disableRaidsFromSpawnerRaiders){ // Canvas - More Configs -- Optimizations
         this.goalSelector.addGoal(4, new Raider.RaiderMoveThroughVillageGoal(this, 1.0499999523162842D, 1));
+        } // Canvas
         this.goalSelector.addGoal(5, new Raider.RaiderCelebration(this));
     }
 
diff --git a/src/main/java/net/minecraft/world/level/biome/Biome.java b/src/main/java/net/minecraft/world/level/biome/Biome.java
index efca73d4de33028cf9df944f36e51b7b50f7a4c5..f64d64ec078d4df47faa6893e1ab7ba1d7b871af 100644
--- a/src/main/java/net/minecraft/world/level/biome/Biome.java
+++ b/src/main/java/net/minecraft/world/level/biome/Biome.java
@@ -180,7 +180,7 @@ public final class Biome {
         if (this.warmEnoughToRain(pos)) {
             return false;
         } else {
-            if (pos.getY() >= world.getMinBuildHeight() && pos.getY() < world.getMaxBuildHeight() && world.getBrightness(LightLayer.BLOCK, pos) < 10) {
+            if (pos.getY() >= world.getMinBuildHeight() && pos.getY() < world.getMaxBuildHeight() && (!me.dueris.canvas.CanvasConfig.checkLightForSnow || world.getBrightness(LightLayer.BLOCK, pos) < 10)) { // Canvas - More Configs -- General
                 BlockState blockState = world.getBlockState(pos);
                 if ((blockState.isAir() || blockState.is(Blocks.SNOW)) && Blocks.SNOW.defaultBlockState().canSurvive(world, pos)) {
                     return true;
diff --git a/src/main/java/net/minecraft/world/level/material/LavaFluid.java b/src/main/java/net/minecraft/world/level/material/LavaFluid.java
index 2d492d849ff73a738dfbcb16507feb89bf19a962..f9b32e022444605906c32f608903b8ef22ed97ae 100644
--- a/src/main/java/net/minecraft/world/level/material/LavaFluid.java
+++ b/src/main/java/net/minecraft/world/level/material/LavaFluid.java
@@ -68,7 +68,7 @@ public abstract class LavaFluid extends FlowingFluid {
 
     @Override
     public void randomTick(Level world, BlockPos pos, FluidState state, RandomSource random) {
-        if (world.getGameRules().getBoolean(GameRules.RULE_DOFIRETICK)) {
+        if (world.getGameRules().getBoolean(GameRules.RULE_DOFIRETICK) && me.dueris.canvas.CanvasConfig.lavaCatchesBlocksOnFire) { // Canvas - More Configs -- Block
             int i = random.nextInt(3);
 
             if (i > 0) {
