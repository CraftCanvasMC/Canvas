From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E3=84=97=E3=84=A0=CB=8B=20=E3=84=91=E3=84=A7=CB=8A?=
 <tsao-chi@the-lingo.org>
Date: Thu, 2 Apr 2020 11:16:18 +0800
Subject: [PATCH] Save Json list asynchronously

Original code by Akarin-project, licensed under GPL v3
You can find the original code on https://github.com/Akarin-project/Akarin

diff --git a/src/main/java/net/minecraft/server/players/StoredUserList.java b/src/main/java/net/minecraft/server/players/StoredUserList.java
index 37ac9b04e875f373fdb1d83b31b6da1ee823a603..ec30135023212aa96c2a3fb77ccf41f015a09bd9 100644
--- a/src/main/java/net/minecraft/server/players/StoredUserList.java
+++ b/src/main/java/net/minecraft/server/players/StoredUserList.java
@@ -146,6 +146,7 @@ public abstract class StoredUserList<K, V extends StoredUserEntry<K>> {
     }
 
     public void save() throws IOException {
+        Runnable runnable = () -> { // Akarin - Save json list async
         this.removeExpired(); // Paper - remove expired values before saving
         JsonArray jsonarray = new JsonArray();
         // Yatopia start - Stop wasting resources on JsonList#get
@@ -164,6 +165,7 @@ public abstract class StoredUserList<K, V extends StoredUserEntry<K>> {
             jsonarray.add(obj);
         }
         // Yatopia end
+        try {
         BufferedWriter bufferedwriter = Files.newWriter(this.file, StandardCharsets.UTF_8);
 
         try {
@@ -183,6 +185,11 @@ public abstract class StoredUserList<K, V extends StoredUserEntry<K>> {
         if (bufferedwriter != null) {
             bufferedwriter.close();
         }
+        } catch (IOException e) {
+            StoredUserList.LOGGER.warn("Failed to async save " + this.file, e); // Akarin - Save json list async
+        }
+        }; // Akarin - Save json list async
+        io.papermc.paper.util.MCUtil.scheduleAsyncTask(runnable); // Akarin - Save json list async
 
     }
 
