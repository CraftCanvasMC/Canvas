From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Fri, 8 Dec 2023 05:13:58 +0000
Subject: [PATCH] Enhance Projectile APIs


diff --git a/src/main/java/net/minecraft/world/entity/projectile/AbstractArrow.java b/src/main/java/net/minecraft/world/entity/projectile/AbstractArrow.java
index 0dad432fdff9156e09a57f5776fd3307b1577558..d24819cbbe86f710094cacf69a4a32b25ca39010 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/AbstractArrow.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/AbstractArrow.java
@@ -716,7 +716,7 @@ public abstract class AbstractArrow extends Projectile {
 
     }
 
-    protected float getWaterInertia() {
+    public float getWaterInertia() { // Canvas - protected -> public
         return 0.6F;
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/projectile/AbstractHurtingProjectile.java b/src/main/java/net/minecraft/world/entity/projectile/AbstractHurtingProjectile.java
index 862ee23ba2ab5df4cbe56356fa5ee1543d22c548..f7558bfaa4289f68dac2bff67cf6c673af66dda1 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/AbstractHurtingProjectile.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/AbstractHurtingProjectile.java
@@ -144,6 +144,14 @@ public abstract class AbstractHurtingProjectile extends Projectile {
     // Canvas start
     private boolean shouldBurn = true;
     public boolean hasTrail = true;
+
+    public void setHasTrail(boolean hasTrail){
+        this.hasTrail = hasTrail;
+    }
+
+    public boolean hasTrail(){
+        return this.hasTrail;
+    }
     private ParticleOptions trailType = ParticleTypes.SMOKE;
     private float inertia = 0.95f;
 
diff --git a/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java b/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java
index 1d8aa652b52539ed64a5a0d8dc5dd399db4393b0..c0e3f0bb42fd95997e6e5c5f4adac3c2a8a5fe53 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java
@@ -24,6 +24,24 @@ public class DragonFireball extends AbstractHurtingProjectile {
     public DragonFireball(Level world, LivingEntity owner, double directionX, double directionY, double directionZ) {
         super(EntityType.DRAGON_FIREBALL, owner, directionX, directionY, directionZ, world);
     }
+    // Canvas start
+
+    public float radius = 3.0f;
+    public int duration = 600;
+    public int cloudAmplifier = 1;
+
+    public void setRadius(float radius){
+        this.radius = radius;
+    }
+
+    public void setDuration(int duration){
+        this.duration = duration;
+    }
+
+    public void setCloudAmplifier(int cloudAmplifier){
+        this.cloudAmplifier = cloudAmplifier;
+    }
+    // Canvas end
 
     @Override
     protected void onHit(HitResult hitResult) {
@@ -38,10 +56,10 @@ public class DragonFireball extends AbstractHurtingProjectile {
                 }
 
                 areaEffectCloud.setParticle(ParticleTypes.DRAGON_BREATH);
-                areaEffectCloud.setRadius(3.0F);
-                areaEffectCloud.setDuration(600);
+                areaEffectCloud.setRadius(this.radius); // Canvas
+                areaEffectCloud.setDuration(this.duration); // Canvas
                 areaEffectCloud.setRadiusPerTick((7.0F - areaEffectCloud.getRadius()) / (float)areaEffectCloud.getDuration());
-                areaEffectCloud.addEffect(new MobEffectInstance(MobEffects.HARM, 1, 1));
+                areaEffectCloud.addEffect(new MobEffectInstance(MobEffects.HARM, 1, this.cloudAmplifier)); // Canvas
                 if (!list.isEmpty()) {
                     for(LivingEntity livingEntity : list) {
                         double d = this.distanceToSqr(livingEntity);
@@ -79,6 +97,6 @@ public class DragonFireball extends AbstractHurtingProjectile {
 
     @Override
     public boolean shouldBurn() { // Canvas
-        return false;
+        return super.shouldBurn();
     }
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/EvokerFangs.java b/src/main/java/net/minecraft/world/entity/projectile/EvokerFangs.java
index bbdb82b319480b103df463cce3c1b8e3dd5857ec..2bffdbf6d50c29e429bb38225abdbbc1c5170fa5 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/EvokerFangs.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/EvokerFangs.java
@@ -123,6 +123,13 @@ public class EvokerFangs extends Entity implements TraceableEntity {
         }
 
     }
+    // Canvas start
+
+    public float fangDamage = 6.0f;
+    public void setFangDamage(float damage){
+        this.fangDamage = damage;
+    }
+    // Canvas end
 
     private void dealDamageTo(LivingEntity target) {
         LivingEntity entityliving1 = this.getOwner();
@@ -130,7 +137,7 @@ public class EvokerFangs extends Entity implements TraceableEntity {
         if (target.isAlive() && !target.isInvulnerable() && target != entityliving1) {
             if (entityliving1 == null) {
                 org.bukkit.craftbukkit.event.CraftEventFactory.entityDamage = this; // CraftBukkit
-                target.hurt(this.damageSources().magic(), 6.0F);
+                target.hurt(this.damageSources().magic(), this.fangDamage); // Canvas
                 org.bukkit.craftbukkit.event.CraftEventFactory.entityDamage = null; // CraftBukkit
             } else {
                 if (entityliving1.isAlliedTo((Entity) target)) {
diff --git a/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java b/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java
index e48706e2fefc39fcce3c65f629153fdcd677044c..722de3b95b3debda92610413314dd2c165436739 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java
@@ -1,5 +1,6 @@
 package net.minecraft.world.entity.projectile;
 
+import me.dueris.canvas.event.item.EyeOfEnderTryBreakEvent;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
@@ -158,11 +159,24 @@ public class EyeOfEnder extends Entity implements ItemSupplier {
             if (this.life > 80 && !this.level().isClientSide) {
                 this.playSound(SoundEvents.ENDER_EYE_DEATH, 1.0F, 1.0F);
                 this.discard();
+                // Canvas start
+                EyeOfEnderTryBreakEvent event = new EyeOfEnderTryBreakEvent(this.surviveAfterDeath, new org.bukkit.Location(this.level().getWorld(), this.getX(), this.getY(), this.getZ()));
+                event.callEvent();
+                if(!event.isCanceled()){
+                    if(event.getShouldBreak()){
+                        this.level().addFreshEntity(new ItemEntity(((org.bukkit.craftbukkit.CraftWorld) event.getLocation().getWorld()).getHandle(), event.getLocation().getX(), event.getLocation().getY(), event.getLocation().getZ(), this.getItem()));
+                    }else{
+                        this.level().levelEvent(2003, this.blockPosition(), 0);
+                    }
+                }
+                /*
                 if (this.surviveAfterDeath) {
                     this.level().addFreshEntity(new ItemEntity(this.level(), this.getX(), this.getY(), this.getZ(), this.getItem()));
                 } else {
                     this.level().levelEvent(2003, this.blockPosition(), 0);
                 }
+                 */
+                // Canvas end
             }
         } else {
             this.setPosRaw(d0, d1, d2);
diff --git a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
index e4f98f172f9816cd6b2719bc99f021a4a03623d0..85c8af1bf7e0ab76d4da61c7e71ab919f366272c 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
@@ -185,7 +185,7 @@ public class FireworkRocketEntity extends Projectile implements ItemSupplier {
 
     }
 
-    private void explode() {
+    public void explode() { // Canvas - private -> public
         this.level().broadcastEntityEvent(this, (byte) 17);
         this.gameEvent(GameEvent.EXPLODE, this.getOwner());
         this.dealExplosionDamage();
@@ -230,7 +230,7 @@ public class FireworkRocketEntity extends Projectile implements ItemSupplier {
 
     private void dealExplosionDamage() {
         float f = 0.0F;
-        ItemStack itemstack = (ItemStack) this.entityData.get(FireworkRocketEntity.DATA_ID_FIREWORKS_ITEM);
+        ItemStack itemstack = this.entityData.get(FireworkRocketEntity.DATA_ID_FIREWORKS_ITEM); // Canvas - remove redundant cast
         CompoundTag nbttagcompound = itemstack.isEmpty() ? null : itemstack.getTagElement("Fireworks");
         ListTag nbttaglist = nbttagcompound != null ? nbttagcompound.getList("Explosions", 10) : null;
 
@@ -284,7 +284,7 @@ public class FireworkRocketEntity extends Projectile implements ItemSupplier {
     }
 
     public boolean isShotAtAngle() {
-        return (Boolean) this.entityData.get(FireworkRocketEntity.DATA_SHOT_AT_ANGLE);
+        return this.entityData.get(FireworkRocketEntity.DATA_SHOT_AT_ANGLE); // Canvas - remove redundant cast
     }
 
     @Override
@@ -348,7 +348,7 @@ public class FireworkRocketEntity extends Projectile implements ItemSupplier {
 
     @Override
     public ItemStack getItem() {
-        ItemStack itemstack = (ItemStack) this.entityData.get(FireworkRocketEntity.DATA_ID_FIREWORKS_ITEM);
+        ItemStack itemstack = this.entityData.get(FireworkRocketEntity.DATA_ID_FIREWORKS_ITEM); // Canvas - remove redundant import
 
         return itemstack.isEmpty() ? new ItemStack(Items.FIREWORK_ROCKET) : itemstack;
     }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/FishingHook.java b/src/main/java/net/minecraft/world/entity/projectile/FishingHook.java
index a2093158e57d5f43c4afa66386481b82b3c4c3c4..13788009b1e9069e2063d516ee56d053798c0883 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/FishingHook.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/FishingHook.java
@@ -55,7 +55,7 @@ public class FishingHook extends Projectile {
 
     private static final Logger LOGGER = LogUtils.getLogger();
     private final RandomSource syncronizedRandom;
-    private boolean biting;
+    public boolean biting; // Canvas
     public int outOfWaterTime;
     private static final int MAX_OUT_OF_WATER_TIME = 10;
     public static final EntityDataAccessor<Integer> DATA_HOOKED_ENTITY = SynchedEntityData.defineId(FishingHook.class, EntityDataSerializers.INT);
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java b/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java
index da0b7ee796c335875914481a5deda5eef5ddd442..81741e337053bb670fbadff3ea9e9f9c6d993cf4 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java
@@ -320,7 +320,7 @@ public class ShulkerBullet extends Projectile {
         this.playSound(SoundEvents.SHULKER_BULLET_HIT, 1.0F, 1.0F);
     }
 
-    private void destroy() {
+    public void destroy() { // Canvas - private -> public
         this.discard();
         this.level().gameEvent(GameEvent.ENTITY_DAMAGE, this.position(), GameEvent.Context.of((Entity) this));
     }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java
index f74e5e055243abb36c7444422de54c806a39e675..4119f8b67b2c8ae03d74e16ac0ff32be983d6952 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java
@@ -179,9 +179,16 @@ public class ThrownTrident extends AbstractArrow {
         this.playSound(soundeffect, f1, 1.0F);
     }
 
+    // Canvas start
+    public boolean forceChanneling = false;
+    public void setForceChanneling(boolean forceChanneling){
+        this.forceChanneling = forceChanneling;
+    }
+
     public boolean isChanneling() {
-        return EnchantmentHelper.hasChanneling(this.getPickupItemStackOrigin());
+        return EnchantmentHelper.hasChanneling(this.getPickupItemStackOrigin()) || this.forceChanneling; // Canvas;
     }
+    // Canvas end
 
     @Override
     protected boolean tryPickup(Player player) {
@@ -223,10 +230,17 @@ public class ThrownTrident extends AbstractArrow {
         }
 
     }
+    // Canvas start
+
+    public float waterInertia = 0.99f;
+    public void setWaterInertia(float waterInertia){
+        this.waterInertia = waterInertia;
+    }
+    // Canvas end
 
     @Override
-    protected float getWaterInertia() {
-        return 0.99F;
+    public float getWaterInertia() { // Canvas - protected -> public
+        return this.waterInertia;
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftDragonFireball.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftDragonFireball.java
index b884c6b0808f80222b1dbf13b855891fd80320af..07c349ef0ffec166c29c29a2a7901b427a7331ec 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftDragonFireball.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftDragonFireball.java
@@ -7,6 +7,42 @@ public class CraftDragonFireball extends CraftFireball implements DragonFireball
     public CraftDragonFireball(CraftServer server, net.minecraft.world.entity.projectile.DragonFireball entity) {
         super(server, entity);
     }
+    // Canvas start
+
+    public net.minecraft.world.entity.projectile.DragonFireball getHandle(){
+        return (net.minecraft.world.entity.projectile.DragonFireball) entity;
+    }
+
+    @Override
+    public void setEffectRadius(float radius){
+        this.getHandle().setRadius(radius);
+    }
+
+    @Override
+    public float getEffectRadius(){
+        return this.getHandle().radius;
+    }
+
+    @Override
+    public int getCloudAmplifier(){
+        return this.getHandle().cloudAmplifier;
+    }
+
+    @Override
+    public void setCloudAmplifier(int cloudAmplifier){
+        this.getHandle().setCloudAmplifier(cloudAmplifier);
+    }
+
+    @Override
+    public int getCloudDuration(){
+        return this.getHandle().duration;
+    }
+
+    @Override
+    public void setCloudDuration(int duration){
+        this.getHandle().setDuration(duration);
+    }
+    // Canvas end
 
     @Override
     public String toString() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEvokerFangs.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEvokerFangs.java
index 19b368cc862cd7e3e1f0e89401a7d099e3eaefa3..823bbb70a7081a95104f60eacbe1a2f4727bf573 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEvokerFangs.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEvokerFangs.java
@@ -15,6 +15,18 @@ public class CraftEvokerFangs extends CraftEntity implements EvokerFangs {
     public net.minecraft.world.entity.projectile.EvokerFangs getHandle() {
         return (net.minecraft.world.entity.projectile.EvokerFangs) super.getHandle();
     }
+    // Canvas start
+
+    @Override
+    public float getFangDamage(){
+        return this.getHandle().fangDamage;
+    }
+
+    @Override
+    public void setFangDamage(float fangDamage){
+        this.getHandle().setFangDamage(fangDamage);
+    }
+    // Canvas end
 
     @Override
     public String toString() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
index c13cdbaf7abdf120a3969f8e887b4c3b78989c9c..7cf49d96dfb834d2ca2f41b81c44554947f115c3 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
@@ -41,6 +41,12 @@ public class CraftFirework extends CraftProjectile implements Firework {
     public FireworkRocketEntity getHandle() {
         return (FireworkRocketEntity) this.entity;
     }
+    // Canvas start
+    @Override
+    public void explode(){
+        this.getHandle().explode();
+    }
+    // Canvas end
 
     @Override
     public String toString() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftFishHook.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftFishHook.java
index 116f23a3ee9fa409d7bc34c3769b94ed2bb07183..a5a752891aed817ea01d8e4a4ed802e0715d2a73 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftFishHook.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftFishHook.java
@@ -161,6 +161,13 @@ public class CraftFishHook extends CraftProjectile implements FishHook {
         Preconditions.checkArgument(chance >= 0 && chance <= 1, "The bite chance must be between 0 and 1");
         this.biteChance = chance;
     }
+    // Canvas start
+
+    @Override
+    public boolean isBiting(){
+        return this.getHandle().biting;
+    }
+    // Canvas end
 
     @Override
     public boolean isInOpenWater() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftTrident.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftTrident.java
index 8a6af0db8e0aa0cffbf19584be747076c2c8ee44..7648f27632e0ea940f27b094374db7990ace300d 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftTrident.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftTrident.java
@@ -16,6 +16,28 @@ public class CraftTrident extends CraftArrow implements Trident {
     public ThrownTrident getHandle() {
         return (ThrownTrident) super.getHandle();
     }
+    // Canvas start
+
+    @Override
+    public boolean getChanneling(){
+        return this.getHandle().isChanneling();
+    }
+
+    @Override
+    public void forceChanneling(boolean force){
+        this.getHandle().setForceChanneling(force);
+    }
+
+    @Override
+    public float getWaterInertia(){
+        return this.getHandle().waterInertia;
+    }
+
+    @Override
+    public void setWaterInertia(float inertia){
+        this.getHandle().setWaterInertia(inertia);
+    }
+    // Canvas end
 
     @Override
     public ItemStack getItem() {
