From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <122416109+Dueris@users.noreply.github.com>
Date: Mon, 18 Mar 2024 17:36:36 +0000
Subject: [PATCH] Rewrite MojangGUI


diff --git a/src/main/java/com/destroystokyo/paper/gui/GuiStatsComponent.java b/src/main/java/com/destroystokyo/paper/gui/GuiStatsComponent.java
index 537bc6213545e8ff1b7b51bc4b27fd5b2a740883..94713e30885384cb79815f849d1f6a1e8be49712 100644
--- a/src/main/java/com/destroystokyo/paper/gui/GuiStatsComponent.java
+++ b/src/main/java/com/destroystokyo/paper/gui/GuiStatsComponent.java
@@ -6,10 +6,12 @@ import javax.swing.JPanel;
 import javax.swing.Timer;
 import java.awt.BorderLayout;
 import java.awt.Dimension;
+import com.destroystokyo.paper.gui.RAMDetails;
 
 public class GuiStatsComponent extends JPanel {
     private final Timer timer;
     private final RAMGraph ramGraph;
+    private RAMDetails ramDetails;
 
     public GuiStatsComponent(MinecraftServer server) {
         super(new BorderLayout());
@@ -18,6 +20,7 @@ public class GuiStatsComponent extends JPanel {
 
         ramGraph = new RAMGraph();
         RAMDetails ramDetails = new RAMDetails(server);
+        this.ramDetails = ramDetails; // Canvas
 
         add(ramGraph, "North");
         add(ramDetails, "Center");
@@ -29,6 +32,12 @@ public class GuiStatsComponent extends JPanel {
         timer.start();
     }
 
+    // Canvas start
+    public RAMDetails getRamDetails(){
+        return this.ramDetails;
+    }
+    // Canvas end
+
     @Override
     public Dimension getPreferredSize() {
         return new Dimension(350, 200);
diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java
index 308f67d0616e2d6bb135258f1fda53ccdee01430..7c971821f3cd31e532c80c374e3e6cee3e5b9f80 100644
--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java
+++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java
@@ -55,6 +55,12 @@ public class RAMDetails extends JList<String> {
         return new Dimension(350, 100);
     }
 
+    // Canvas start - add access to RamGraphData
+    public GraphData getGraphData(){
+        return RAMGraph.DATA.peekLast();
+    }
+    // Canvas end
+
     public void update() {
         GraphData data = RAMGraph.DATA.peekLast();
         Vector<String> vector = new Vector<>();
