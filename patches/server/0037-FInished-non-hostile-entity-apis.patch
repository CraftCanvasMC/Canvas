From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Thu, 2 Nov 2023 17:23:15 +0000
Subject: [PATCH] FInished non-hostile entity apis


diff --git a/src/main/java/me/dueris/canvas/plcaeholder b/src/main/java/me/dueris/canvas/plcaeholder
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
index 54f5206b686c3cf4d2e5b470c07047a518f5dd00..91d3e9e54c01cb4465891c6c125c9c0cde2049b8 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
@@ -180,30 +180,42 @@ public class Pufferfish extends AbstractFish {
         }
 
     }
+    // Canvas start
+    public boolean canPoison = true;
 
+    public void setCanPoison(boolean can){
+        this.canPoison = can;
+    }
+    
     private void touch(Mob mob) {
-        int i = this.getPuffState();
+        if(this.canPoison){
+            int i = this.getPuffState();
 
-        if (mob.hurt(this.damageSources().mobAttack(this), (float) (1 + i))) {
-            mob.addEffect(new MobEffectInstance(MobEffects.POISON, 60 * i, 0), this, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.ATTACK); // CraftBukkit
-            this.playSound(SoundEvents.PUFFER_FISH_STING, 1.0F, 1.0F);
+            if (mob.hurt(this.damageSources().mobAttack(this), (float) (1 + i))) {
+                mob.addEffect(new MobEffectInstance(MobEffects.POISON, 60 * i, 0), this, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.ATTACK); // CraftBukkit
+                this.playSound(SoundEvents.PUFFER_FISH_STING, 1.0F, 1.0F);
+            }
         }
-
     }
+    // Canvas end
 
     @Override
     public void playerTouch(Player player) {
-        int i = this.getPuffState();
+        // Canvas start - implement able to poison boolean
+        if(this.canPoison){
+            int i = this.getPuffState();
 
-        if (player instanceof ServerPlayer && i > 0 && player.hurt(this.damageSources().mobAttack(this), (float) (1 + i))) {
-            if (!this.isSilent()) {
-                ((ServerPlayer) player).connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.PUFFER_FISH_STING, 0.0F));
-            }
+            if (player instanceof ServerPlayer && i > 0 && player.hurt(this.damageSources().mobAttack(this), (float) (1 + i))) {
+                if (!this.isSilent()) {
+                    ((ServerPlayer) player).connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.PUFFER_FISH_STING, 0.0F));
+                }
 
-            player.addEffect(new MobEffectInstance(MobEffects.POISON, 60 * i, 0), this, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.ATTACK); // CraftBukkit
+                player.addEffect(new MobEffectInstance(MobEffects.POISON, 60 * i, 0), this, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.ATTACK); // CraftBukkit
+            }
         }
 
     }
+    // Canvas end
 
     @Override
     protected SoundEvent getAmbientSound() {
@@ -227,17 +239,34 @@ public class Pufferfish extends AbstractFish {
 
     @Override
     public EntityDimensions getDimensions(Pose pose) {
-        return super.getDimensions(pose).scale(Pufferfish.getScale(this.getPuffState()));
+        return super.getDimensions(pose).scale(this.getScale(this.getPuffState()));
+    }
+    // Canvas start
+    public float scaleSmallSize = 0.5f;
+    public float scaleMediumSize = 0.7f;
+    public float scaleLargeSize = 1.0f;
+
+    public void setScaleSizeSmall(float scale){
+        this.scaleSmallSize = scale;
+    }
+
+    public void setScaleSizeMedium(float scale){
+        this.scaleMediumSize = scale;
+    }
+
+    public void setScaleSizeLarge(float scale){
+        this.scaleLargeSize = scale;
     }
+    // Canvas end
 
-    private static float getScale(int puffState) {
+    public float getScale(int puffState) { // Canvas - private/static -> public
         switch (puffState) {
             case 0:
-                return 0.5F;
+                return this.scaleSmallSize; // Canvas - use custom scaling
             case 1:
-                return 0.7F;
+                return this.scaleMediumSize; // Canvas - use custom scaling
             default:
-                return 1.0F;
+                return this.scaleLargeSize; // Canvas - use custom scaling
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
index eae2488f2a46e543b496b7a2919aabbb55dcb825..be6a3abdcace862441920c938e3d136ae9a3fee9 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
@@ -511,7 +511,7 @@ public class Rabbit extends Animal implements VariantHolder<Rabbit.Variant> {
         return world.getBlockState(pos.below()).is(BlockTags.RABBITS_SPAWNABLE_ON) && isBrightEnoughToSpawn(world, pos);
     }
 
-    boolean wantsMoreFood() {
+    public boolean wantsMoreFood() { // Canvas - ensure public specified bc i picky
         return this.moreCarrotTicks <= 0;
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrowableProjectile.java b/src/main/java/net/minecraft/world/entity/projectile/ThrowableProjectile.java
index ab777952bda1651796ed41e8a7fc6621f27db9aa..65b99cfaa75169b5d445b30d53af2a56b0813b26 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrowableProjectile.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrowableProjectile.java
@@ -100,7 +100,14 @@ public abstract class ThrowableProjectile extends Projectile {
         this.setPos(d0, d1, d2);
     }
 
-    protected float getGravity() {
-        return 0.03F;
+    public float getGravity() { // Canvas - protected -> public
+        return this.gravity; // Canvas - use custom value
     }
+    // Canvas start
+    private float gravity = 0.03f;
+
+    public void setGravity(float gravity){
+        this.gravity = gravity;
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPufferFish.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPufferFish.java
index 35a8219734633529325430810e88755b2dd23125..2c41e9972ef49f04f63e85ea1b11755c2c6a25fa 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPufferFish.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPufferFish.java
@@ -29,4 +29,31 @@ public class CraftPufferFish extends CraftFish implements PufferFish {
     public String toString() {
         return "CraftPufferFish";
     }
+    // Canvas start
+
+    @Override
+    public void setScaleSizeSmall(float scale){
+        this.getHandle().setScaleSizeSmall(scale);
+    }
+
+    @Override
+    public void setScaleSizeMedium(float scale){
+        this.getHandle().setScaleSizeMedium(scale);
+    }
+
+    @Override
+    public void setScaleSizeLarge(float scale){
+        this.getHandle().setScaleSizeLarge(scale);
+    }
+
+    @Override
+    public void setCanPoison(boolean can){
+        this.getHandle().setCanPoison(can);
+    }
+
+    @Override
+    public boolean getCanPoison(){
+        return this.getHandle().canPoison;
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftRabbit.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftRabbit.java
index eb7e2902dc134847711284dd2af8abda7627c7ab..bbbea2cfcaed7204f672ad274355fc5cf7d9ce86 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftRabbit.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftRabbit.java
@@ -40,5 +40,10 @@ public class CraftRabbit extends CraftAnimals implements Rabbit {
     public int getMoreCarrotTicks() {
         return this.getHandle().moreCarrotTicks;
     }
-    // Paper end
+    // Paper end -/- Canvas start
+
+    @Override
+    public boolean wantsMoreFood(){
+        return this.getHandle().moreCarrotTicks <= 0;
+    }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftSnowman.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftSnowman.java
index 4f7f6cf6ca24406570d2d29dc63dc89401119961..03aadc6a2eac6ec82c572fbe2c5a8f57539290bf 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftSnowman.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftSnowman.java
@@ -18,6 +18,13 @@ public class CraftSnowman extends CraftGolem implements Snowman, com.destroystok
     public void setDerp(boolean derpMode) {
         this.getHandle().setPumpkin(!derpMode);
     }
+    // Canvas start
+
+    @Override
+    public void shear(){
+        this.getHandle().shear();
+    }
+    // Canvas end
 
     @Override
     public SnowGolem getHandle() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftSquid.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftSquid.java
index 7c2405b534e7c2c538b6c38ae4e25f9dfb3acd13..a13f1f168bee8f2dcd582876236ec7762883a726 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftSquid.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftSquid.java
@@ -18,9 +18,17 @@ public class CraftSquid extends CraftWaterMob implements Squid {
     public String toString() {
         return "CraftSquid";
     }
+    // Canvas start
 
     @Override
     public void setGlowingSquid() {
         this.getHandle().setGlowingSquid();
     }
+
+    @Override
+    public void squirtInk(){
+        this.getHandle().spawnInk();
+    }
+
+    // Canvas end
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ravager.java b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
index c9c21c87e3bd1c404fbef6768761bcb5d97d98b9..efce0f8cbdfcdc04016974e297275d477be45c70 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ravager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
@@ -274,7 +274,7 @@ public class Ravager extends Raider {
 
     }
 
-    private void roar() {
+    public void roar() { // Canvas - private -> public
         if (this.isAlive()) {
             List<? extends LivingEntity> list = this.level().getEntitiesOfClass(LivingEntity.class, this.getBoundingBox().inflate(4.0D), Ravager.NO_RAVAGER_AND_ALIVE);
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
index df8c7a45eb49a8c667030eb67d6d49dcbaef4fcf..b4afe3565e7bbbaa655031613f28377df5dccc53 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
@@ -124,6 +124,12 @@ public class ZombifiedPiglin extends Zombie implements NeutralMob {
         this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, Player.class, 10, true, false, this::isAngryAt));
         this.targetSelector.addGoal(3, new ResetUniversalAngerTargetGoal<>(this, true));
     }
+    // Canvas start
+    
+    public void convertToNormal(){
+        this.convertTo(EntityType.PIGLIN, true);
+    }
+    // Canvas end
 
     public static AttributeSupplier.Builder createAttributes() {
         return Zombie.createAttributes().add(Attributes.SPAWN_REINFORCEMENTS_CHANCE, 0.0D).add(Attributes.MOVEMENT_SPEED, 0.23000000417232513D).add(Attributes.ATTACK_DAMAGE, 5.0D);
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
index 8e829d522a6012f409161ad5a9a06721a942d7e4..4e02d60850e0cfc7dc42aa2af2671c2c0c0e1c5f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
@@ -95,8 +95,13 @@ public class Piglin extends AbstractPiglin implements CrossbowAttackMob, Invento
         super(type, world);
         this.xpReward = 5;
     }
+    // Canvas start
 
-    // Purpur start
+    public void convertToZombified(){
+        this.convertTo(EntityType.ZOMBIFIED_PIGLIN, true);
+    }
+    // Canvas end -/- Purpur start
+    
     @Override
     public boolean isRidable() {
         return level().purpurConfig.piglinRidable;
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownExperienceBottle.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownExperienceBottle.java
index e53046c6d47b4fd3d82132bc980a31b9491df6a7..ccf3c53560ed94f092ff9b7f97a6246d7f1cb248 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownExperienceBottle.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownExperienceBottle.java
@@ -31,7 +31,7 @@ public class ThrownExperienceBottle extends ThrowableItemProjectile {
     }
 
     @Override
-    protected float getGravity() {
+    public float getGravity() { // Canvas - protected -> public
         return 0.07F;
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
index 2f80d484ad523860322483cebe92cf7cd8cfad22..9328d491e0a9f82aab59b644bb28875930fb19bd 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
@@ -66,7 +66,7 @@ public class ThrownPotion extends ThrowableItemProjectile implements ItemSupplie
     }
 
     @Override
-    protected float getGravity() {
+    public float getGravity() { // Canvas - protected -> public
         return 0.05F;
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPigZombie.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPigZombie.java
index 49beb836d2801aadf869feefa602616daebe633f..7c4554aada7f3aa701f0d0a7a968e87c11bf2bd4 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPigZombie.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPigZombie.java
@@ -54,4 +54,11 @@ public class CraftPigZombie extends CraftZombie implements PigZombie {
     public void setConversionTime(int time) {
         throw new UnsupportedOperationException("Not supported by this Entity.");
     }
+    // Canvas start
+
+    @Override
+    public void convertToNormal(){
+        this.getHandle().convertToNormal();
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPiglin.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPiglin.java
index 03e74b29ebf0f9b9a0dbc6ffc872e22a22be20f0..e30445cf74fc4c5c381fbb71c28dff7ba977085b 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPiglin.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPiglin.java
@@ -116,5 +116,11 @@ public class CraftPiglin extends CraftPiglinAbstract implements Piglin, com.dest
     public boolean isDancing() {
         return this.getHandle().isDancing();
     }
-    // Paper end
+    // Paper end -/- Canvas start
+
+    @Override
+    public void convertToZombified(){
+        this.getHandle().convertToZombified();
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftRavager.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftRavager.java
index 09796ce15658e3f7c223a265a547a51ee729ed40..216a6b64132d49e8ff265f65c04e513dacd9ac9f 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftRavager.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftRavager.java
@@ -48,5 +48,11 @@ public class CraftRavager extends CraftRaider implements Ravager {
     public void setRoarTicks(int ticks) {
         this.getHandle().roarTick = ticks;
     }
-    // Paper end
+    // Paper end -/- Canvas start
+    
+    @Override
+    public void roar(){
+        this.getHandle().roar();
+    }
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftSnowman.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftSnowman.java
index 03aadc6a2eac6ec82c572fbe2c5a8f57539290bf..cf389bc8f5b23ce844f69eaa97b37394d623958b 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftSnowman.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftSnowman.java
@@ -20,10 +20,10 @@ public class CraftSnowman extends CraftGolem implements Snowman, com.destroystok
     }
     // Canvas start
 
-    @Override
-    public void shear(){
-        this.getHandle().shear();
-    }
+    // @Override
+    // public void shear(){
+    //     this.getHandle().shear();
+    // }
     // Canvas end
 
     @Override
