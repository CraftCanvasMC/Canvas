From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <159172167+PurpleWolfMC@users.noreply.github.com>
Date: Thu, 8 Feb 2024 22:46:46 +0000
Subject: [PATCH] Async Command Dispatcher

// TODO: remove temp asynccatcher/eventmanager disablers

diff --git a/src/main/java/me/dueris/canvas/server/command/AsyncCommandDispatcher.java b/src/main/java/me/dueris/canvas/server/command/AsyncCommandDispatcher.java
new file mode 100644
index 0000000000000000000000000000000000000000..b787f5386c6b9a778e8bd7f1f397bca622b4141d
--- /dev/null
+++ b/src/main/java/me/dueris/canvas/server/command/AsyncCommandDispatcher.java
@@ -0,0 +1,49 @@
+package me.dueris.canvas.server.command;
+
+import java.util.*;
+import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.Executor;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+import java.lang.*;
+
+import io.papermc.paper.util.TickThread;
+import me.dueris.canvas.CanvasConfig;
+import me.dueris.canvas.thread.NamedTickThreadFactory;
+
+public class AsyncCommandDispatcher {
+    private static ArrayList<CommandExecutionTask> commands = new ArrayList();
+    private static ExecutorService thread;
+
+    public static void start(){
+        NamedTickThreadFactory factory = new NamedTickThreadFactory("AsyncCommandDispatcher");
+        thread = Executors.newFixedThreadPool(1, factory);
+    }
+
+    public static void tick(){
+        for(CommandExecutionTask task : commands){
+            if(CanvasConfig.asyncCommandDispatcher){
+                // Run async
+                CompletableFuture future = CompletableFuture.runAsync(() -> {
+                    task.run();
+                }, thread);
+            }else{
+                // Run task on main thread
+                task.run();
+            }
+        }
+        commands.clear();
+    }
+
+    public static void stop(){
+        if(thread != null){
+            thread.shutdown();
+        }else{
+            throw new IllegalStateException("Unable to stop AsyncCommandDispatcher because its null!");
+        }
+    }
+
+    public static void submit(Runnable run){
+        commands.add(new CommandExecutionTask(run));
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/me/dueris/canvas/server/command/CommandExecutionTask.java b/src/main/java/me/dueris/canvas/server/command/CommandExecutionTask.java
new file mode 100644
index 0000000000000000000000000000000000000000..f765eebd7a0bfc73231b005021ff51fa8a30df1d
--- /dev/null
+++ b/src/main/java/me/dueris/canvas/server/command/CommandExecutionTask.java
@@ -0,0 +1,14 @@
+package me.dueris.canvas.server.command;
+
+public class CommandExecutionTask implements Runnable{
+    private Runnable runnable;
+
+    public CommandExecutionTask(Runnable runnable){
+        this.runnable = runnable;
+    }
+    
+    @Override
+    public void run(){
+        this.runnable.run();
+    }
+}
