From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sun, 5 Nov 2023 20:35:50 -0800
Subject: [PATCH] Start work on fabric loading


diff --git a/src/main/java/me/dueris/canvas/plugin/CanvasPluginStartup.java b/src/main/java/me/dueris/canvas/plugin/CanvasPluginStartup.java
index 4324a9668e38b609d773083eb13219d80b025cde..ccea9cda56ae9927b989bd00923ad7e3b046d8b7 100644
--- a/src/main/java/me/dueris/canvas/plugin/CanvasPluginStartup.java
+++ b/src/main/java/me/dueris/canvas/plugin/CanvasPluginStartup.java
@@ -1,6 +1,7 @@
 package me.dueris.canvas.plugin;
 
 import java.io.File;
+import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.util.Enumeration;
@@ -23,26 +24,13 @@ public class CanvasPluginStartup {
 
                     // Ensure its a jar bc we dont want non-jars lol
                     if (entry.getName().startsWith("jars/")) {
-                        String relativePath = entry.getName().substring("jars/".length());
-                        File entryFile = new File(destDir, relativePath);
-
-                        if (entry.isDirectory()) {
-                            entryFile.mkdirs();
-                        } else {
-                            // Check parent DIR exists
-                            File parent = entryFile.getParentFile();
-                            if (!parent.exists()) {
-                                parent.mkdirs();
-                            }
-
-                            // Begin entry reading
-                            try (FileOutputStream fos = new FileOutputStream(entryFile);
-                                java.io.InputStream is = jarFile.getInputStream(entry)) {
-                                byte[] buffer = new byte[1024];
-                                int bytesRead;
-                                while ((bytesRead = is.read(buffer)) != -1) {
-                                    fos.write(buffer, 0, bytesRead);
-                                }
+                        run(entry, destDir, jarFile, "jars/");
+                    } else if (entry.getName().startsWith("META-INF/")) {
+                        Enumeration<JarEntry> entries1 = jarFile.entries();
+                        while (entries.hasMoreElements()) {
+                            JarEntry entry1 = entries.nextElement();
+                            if(entry1.getName().startsWith("jars/")){
+                                run(entry1, destDir, jarFile, "jars/");
                             }
                         }
                     }
@@ -52,4 +40,33 @@ public class CanvasPluginStartup {
 
 
     }
-}
\ No newline at end of file
+
+    private static void run(JarEntry entry, File destDir, JarFile jarFile, String entryName){
+        String relativePath = entry.getName().substring(entryName.length());
+        File entryFile = new File(destDir, relativePath);
+
+        if (entry.isDirectory()) {
+            entryFile.mkdirs();
+        } else {
+            // Check parent DIR exists
+            File parent = entryFile.getParentFile();
+            if (!parent.exists()) {
+                parent.mkdirs();
+            }
+
+            // Begin entry reading
+            try (FileOutputStream fos = new FileOutputStream(entryFile);
+                 java.io.InputStream is = jarFile.getInputStream(entry)) {
+                byte[] buffer = new byte[1024];
+                int bytesRead;
+                while ((bytesRead = is.read(buffer)) != -1) {
+                    fos.write(buffer, 0, bytesRead);
+                }
+            } catch (FileNotFoundException e) {
+                throw new RuntimeException(e);
+            } catch (IOException e) {
+                throw new RuntimeException(e);
+            }
+        }
+    }
+}
diff --git a/src/main/java/net/minecraft/world/entity/monster/Evoker.java b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
index 5115832eece2798738dfbafc8547477fbc79ce62..b01f9fcee348caaa3260f86339ce6c19282f8f42 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Evoker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
@@ -91,15 +91,17 @@ public class Evoker extends SpellcasterIllager {
     @Override
     protected void registerGoals() {
         super.registerGoals();
-        this.goalSelector.addGoal(0, new FloatGoal(this));
-        this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
-        this.goalSelector.addGoal(1, castingSpellGoal); // Canvas
-        this.goalSelector.addGoal(2, new AvoidEntityGoal<>(this, Player.class, 8.0F, 0.6D, 1.0D));
         // Canvas start
         summonSpellGoal = new EvokerSummonSpellGoal();
         castingSpellGoal = new EvokerCastingSpellGoal();
         attackSpellGoal = new EvokerAttackSpellGoal();
         wololoSpellGoal = new EvokerWololoSpellGoal();
+        // Canvas end
+        this.goalSelector.addGoal(0, new FloatGoal(this));
+        this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
+        this.goalSelector.addGoal(1, castingSpellGoal); // Canvas
+        this.goalSelector.addGoal(2, new AvoidEntityGoal<>(this, Player.class, 8.0F, 0.6D, 1.0D));
+        // Canvas start
         this.goalSelector.addGoal(4, summonSpellGoal);
         this.goalSelector.addGoal(5, attackSpellGoal);
         this.goalSelector.addGoal(6, wololoSpellGoal);
