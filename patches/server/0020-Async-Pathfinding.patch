From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Tue, 5 Nov 2024 19:16:33 -0800
Subject: [PATCH] Async Pathfinding

// todo

diff --git a/src/main/java/io/github/dueris/canvas/CanvasConfig.java b/src/main/java/io/github/dueris/canvas/CanvasConfig.java
index d0648412f4acdcf4809b345b24b832ea77ceaefb..e263cee7885538b93b17d790ef73c08b3890024a 100644
--- a/src/main/java/io/github/dueris/canvas/CanvasConfig.java
+++ b/src/main/java/io/github/dueris/canvas/CanvasConfig.java
@@ -170,7 +170,24 @@ public class CanvasConfig {
     public static boolean useCanvasBedSetDye = true;
     public static boolean makeCampfireAlwaysLots = false;
     public static int farmlandSearchRadius = 4;
-
+    public static boolean asyncPathfinding;
+    public static int asyncPathfindingMaxThreads;
+    public static int asyncPathfindingKeepalive;
+
+    private static void optimizations(){
+        asyncPathfinding = getBoolean("optimizations.async-pathfinding.enable", true);
+        asyncPathfindingMaxThreads = getInt("optimizations.async-pathfinding.max-threads", 0);
+        asyncPathfindingKeepalive = getInt("optimizations.async-pathfinding.keepalive", 60);
+        if (asyncPathfindingMaxThreads < 0)
+            asyncPathfindingMaxThreads = Math.max(Runtime.getRuntime().availableProcessors() + asyncPathfindingMaxThreads, 1);
+        else if (asyncPathfindingMaxThreads == 0)
+            asyncPathfindingMaxThreads = Math.max(Runtime.getRuntime().availableProcessors() / 4, 1);
+        if (!asyncPathfinding)
+            asyncPathfindingMaxThreads = 0;
+        else
+            Bukkit.getLogger().log(Level.INFO, "Using " + asyncPathfindingMaxThreads + " threads for Async Pathfinding");
+    }
+    
     private static void blocks(){
         useCanvasBedSetDye = getBoolean("blocks.useCanvasBedSetDyeMethod", useCanvasBedSetDye);
         makeCampfireAlwaysLots = getBoolean("block.forceCampfireEmitLotsOfParticles", makeCampfireAlwaysLots);
