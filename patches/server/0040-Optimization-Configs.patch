From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Tue, 5 Nov 2024 19:31:44 -0800
Subject: [PATCH] Optimization Configs


diff --git a/src/main/java/io/github/dueris/canvas/CanvasConfig.java b/src/main/java/io/github/dueris/canvas/CanvasConfig.java
index 54982d6550198d85659c94f84ba8fabdef482481..a7c6f58cc320f0e6030862614679dfb5b0e4e963 100644
--- a/src/main/java/io/github/dueris/canvas/CanvasConfig.java
+++ b/src/main/java/io/github/dueris/canvas/CanvasConfig.java
@@ -185,6 +185,29 @@ public class CanvasConfig {
     public static int mobWanderingPercentChance = 100;
     public static int mobWanderingReducedRateMultiplier = 6;
     public static int mobWanderingDelay = 20 * 5;
+    public static boolean tntLoadChunks = true;
+    public static boolean enderpearlsLoadChunks = true;
+    public static boolean fallingBlocksLoadChunks = true;
+    public static boolean tickItemFrames = true;
+    public static boolean onlyPlayersPushEntities = false;
+    public static boolean checkLightForSnow = false;
+    public static boolean lavaCatchesBlocksOnFire = true;
+    public static boolean disableFootsteps = false;
+    public static boolean disableRaidsFromSpawnerRaiders = false;
+    public static int spawnerMinSpawnDelay = 200;
+    public static int spawnerMaxSpawnDelay = 800;
+    public static int spawnerSpawnRange = 4;
+    public static int spawnerSpawnCount = 4;
+    public static boolean spawnerSpawnParticles = true;
+    public static int spawnerMaxNearbyEntities = 16;
+    public static int spawnerMaxPlayerRange = 16;
+    public static boolean spawnerEntitiesHaveAI = true;
+
+    private static void general(){
+        disableFootsteps = getBoolean("disableFootsteps", disableFootsteps);
+        checkLightForSnow = getBoolean("checkLightForSnow", checkLightForSnow);
+        onlyPlayersPushEntities = getBoolean("onlyPlayersPushEntities", onlyPlayersPushEntities);
+    }
 
     private static void optimizations(){
         asyncPathfinding = getBoolean("optimizations.async-pathfinding.enable", true);
@@ -209,11 +232,25 @@ public class CanvasConfig {
         mobWanderingDelay = getInt("optimizations.mobWanderingDelay", mobWanderingDelay);
         mobWanderingPercentChance = getInt("optimizations.mobWanderingPercentChance", mobWanderingPercentChance);
         mobWanderingReducedRateMultiplier = getInt("optimizations.mobWanderingReducedRateMultiplier", mobWanderingReducedRateMultiplier);
+        tntLoadChunks = getBoolean("optimizations.tntLoadChunks", tntLoadChunks);
+        enderpearlsLoadChunks = getBoolean("optimizations.enderpearlsLoadChunks", enderpearlsLoadChunks);
+        fallingBlocksLoadChunks = getBoolean("optimizations.fallingBlocksLoadChunks", fallingBlocksLoadChunks);
+        tickItemFrames = getBoolean("optimizations.tickItemFrames", tickItemFrames);
+        disableRaidsFromSpawnerRaiders = getBoolean("optimizations.disableRaidsFromSpawnerRaiders", disableRaidsFromSpawnerRaiders);
     }
     
     private static void blocks(){
         useCanvasBedSetDye = getBoolean("blocks.useCanvasBedSetDyeMethod", useCanvasBedSetDye);
         makeCampfireAlwaysLots = getBoolean("block.forceCampfireEmitLotsOfParticles", makeCampfireAlwaysLots);
         farmlandSearchRadius = getInt("block.farmlandSearchRadius", farmlandSearchRadius);
+        lavaCatchesBlocksOnFire = getBoolean("block.lavaCatchesBlocksOnFire", lavaCatchesBlocksOnFire);
+        spawnerMaxNearbyEntities = getInt("block.spawner.spawnerMaxNearbyEntities", spawnerMaxNearbyEntities);
+        spawnerMaxPlayerRange = getInt("block.spawner.spawnerMaxPlayerRange", spawnerMaxPlayerRange);
+        spawnerEntitiesHaveAI = getBoolean("block.spawner.spawnerEntitiesHaveAI", spawnerEntitiesHaveAI);
+        spawnerSpawnRange = getInt("block.spawner.spawnerSpawnRange", spawnerSpawnRange);
+        spawnerSpawnCount = getInt("block.spawner.spawnerSpawnCount", spawnerSpawnCount);
+        spawnerMaxSpawnDelay = getInt("block.spawner.spawnerMaxSpawnDelay", spawnerMaxSpawnDelay);
+        spawnerMinSpawnDelay = getInt("block.spawner.spawnerMinSpawnDelay", spawnerMinSpawnDelay);
+        spawnerSpawnParticles = getBoolean("block.spawner.spawnerSpawnParticles", spawnerSpawnParticles);
     }
 }
diff --git a/src/main/java/net/minecraft/server/level/ServerEntity.java b/src/main/java/net/minecraft/server/level/ServerEntity.java
index d8717af85f539da807ddf866e17f1e643c83d3f6..e3e9a06047519eb4159cfa28b5cdb1ee707e4d16 100644
--- a/src/main/java/net/minecraft/server/level/ServerEntity.java
+++ b/src/main/java/net/minecraft/server/level/ServerEntity.java
@@ -128,7 +128,7 @@ public class ServerEntity {
 
         Entity entity = this.entity;
 
-        if (!this.trackedPlayers.isEmpty() && entity instanceof ItemFrame entityitemframe) { // Paper - Perf: Only tick item frames if players can see it
+        if (io.github.dueris.canvas.CanvasConfig.tickItemFrames && !this.trackedPlayers.isEmpty() && entity instanceof ItemFrame entityitemframe) { // Paper - Perf: Only tick item frames if players can see it // Canvas
             if (true || this.tickCount % 10 == 0) { // CraftBukkit - Moved below, should always enter this block
                 ItemStack itemstack = entityitemframe.getItem();
 
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index dc43440107c37b4c471255adfbe26ca6a04b43df..ff0d266218ed60e5a4e879077c80fcdb993566e4 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -2738,12 +2738,19 @@ public class ServerLevel extends Level implements ServerEntityGetter, WorldGenLe
         }
 
         public void onTickingEnd(Entity entity) {
+            // Canvas start - More Configs -- Optimizations
+            if(!io.github.dueris.canvas.CanvasConfig.tntLoadChunks && !io.github.dueris.canvas.CanvasConfig.fallingBlocksLoadChunks && !io.github.dueris.canvas.CanvasConfig.enderpearlsLoadChunks || entity.isRemoved() ||
+                (!io.github.dueris.canvas.CanvasConfig.tntLoadChunks || entity.getType() != EntityType.TNT) &&
+                (!io.github.dueris.canvas.CanvasConfig.fallingBlocksLoadChunks || entity.getType() != EntityType.FALLING_BLOCK) &&
+                (!io.github.dueris.canvas.CanvasConfig.enderpearlsLoadChunks || entity.getType() != EntityType.ENDER_PEARL)) {
+            // Canvas end
             ServerLevel.this.entityTickList.remove(entity);
             // Paper start - Reset pearls when they stop being ticked
             if (ServerLevel.this.paperConfig().fixes.disableUnloadedChunkEnderpearlExploit && ServerLevel.this.paperConfig().misc.legacyEnderPearlBehavior && entity instanceof net.minecraft.world.entity.projectile.ThrownEnderpearl pearl) {
                 pearl.cachedOwner = null;
                 pearl.ownerUUID = null;
             }
+            } // Canvas
             // Paper end - Reset pearls when they stop being ticked
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 1426bdc09e535d53bb8c69da650349ca1a637684..e522202b542eb7778eb5996503eb052e3de851e1 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -3886,7 +3886,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
     protected void pushEntities() {
         Level world = this.level();
-
+        if(io.github.dueris.canvas.CanvasConfig.onlyPlayersPushEntities && !(this instanceof ServerPlayer)) return; // Canvas
         if (!(world instanceof ServerLevel worldserver)) {
             this.level().getEntities(EntityTypeTest.forClass(net.minecraft.world.entity.player.Player.class), this.getBoundingBox(), EntitySelector.pushableBy(this)).forEach(this::doPush);
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index f961b5b6c16fa724a0483d910b9e7863f60cf111..fe925dd7949c371490f35cfd525d04d1a7ae599a 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -1777,6 +1777,7 @@ public abstract class Player extends LivingEntity {
 
     @Override
     protected void playStepSound(BlockPos pos, BlockState state) {
+        if(io.github.dueris.canvas.CanvasConfig.disableFootsteps) return; // Canvas - More Configs -- General
         if (this.isInWater()) {
             this.waterSwimSound();
             this.playMuffledStepSound(state);
diff --git a/src/main/java/net/minecraft/world/entity/raid/Raider.java b/src/main/java/net/minecraft/world/entity/raid/Raider.java
index 4ef87acec025c6eb706fd8845663aa4f415efb29..76950e02c4a4359cd2340f548d4fdc0869fe30e1 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raider.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raider.java
@@ -65,7 +65,9 @@ public abstract class Raider extends PatrollingMonster {
         super.registerGoals();
         this.goalSelector.addGoal(1, new Raider.ObtainRaidLeaderBannerGoal<>(this));
         this.goalSelector.addGoal(3, new PathfindToRaidGoal<>(this));
+        if(!spawnedViaMobSpawner || !io.github.dueris.canvas.CanvasConfig.disableRaidsFromSpawnerRaiders){ // Canvas - More Configs -- Optimizations
         this.goalSelector.addGoal(4, new Raider.RaiderMoveThroughVillageGoal(this, 1.0499999523162842D, 1));
+        } // Canvas
         this.goalSelector.addGoal(5, new Raider.RaiderCelebration(this));
     }
 
diff --git a/src/main/java/net/minecraft/world/level/BaseSpawner.java b/src/main/java/net/minecraft/world/level/BaseSpawner.java
index bb4411cfdf1bc7adc12c2f918d2eec830299f38b..f214ef95f4b034a3d0aeba3c80ae3e14e498e302 100644
--- a/src/main/java/net/minecraft/world/level/BaseSpawner.java
+++ b/src/main/java/net/minecraft/world/level/BaseSpawner.java
@@ -41,14 +41,16 @@ public abstract class BaseSpawner {
     public SpawnData nextSpawnData;
     private double spin;
     private double oSpin;
-    public int minSpawnDelay = 200;
-    public int maxSpawnDelay = 800;
-    public int spawnCount = 4;
+    // Canvas start - Configurable MobSpawners
+    public int minSpawnDelay = io.github.dueris.canvas.CanvasConfig.spawnerMinSpawnDelay == -1 ? 200 : io.github.dueris.canvas.CanvasConfig.spawnerMinSpawnDelay;
+    public int maxSpawnDelay = io.github.dueris.canvas.CanvasConfig.spawnerMaxSpawnDelay == -1 ? 800 : io.github.dueris.canvas.CanvasConfig.spawnerMaxSpawnDelay;
+    public int spawnCount = io.github.dueris.canvas.CanvasConfig.spawnerSpawnCount == -1 ? 4 : io.github.dueris.canvas.CanvasConfig.spawnerSpawnCount;
     @Nullable
     private Entity displayEntity;
-    public int maxNearbyEntities = 6;
-    public int requiredPlayerRange = 16;
-    public int spawnRange = 4;
+    public int maxNearbyEntities = io.github.dueris.canvas.CanvasConfig.spawnerMaxNearbyEntities == -1 ? 6 : io.github.dueris.canvas.CanvasConfig.spawnerMaxNearbyEntities;
+    public int requiredPlayerRange = io.github.dueris.canvas.CanvasConfig.spawnerMaxPlayerRange == -1 ? 16 : io.github.dueris.canvas.CanvasConfig.spawnerMaxPlayerRange;
+    // Canvas end
+    public int spawnRange = io.github.dueris.canvas.CanvasConfig.spawnerSpawnRange == -1 ? 4 : io.github.dueris.canvas.CanvasConfig.spawnerSpawnRange;
     private int tickDelay = 0; // Paper - Configurable mob spawner tick rate
 
     public BaseSpawner() {}
@@ -72,8 +74,10 @@ public abstract class BaseSpawner {
             double d1 = (double) pos.getY() + randomsource.nextDouble();
             double d2 = (double) pos.getZ() + randomsource.nextDouble();
 
+            if(io.github.dueris.canvas.CanvasConfig.spawnerSpawnParticles) { // Canvas - Configurable MobSpawners
             world.addParticle(ParticleTypes.SMOKE, d0, d1, d2, 0.0D, 0.0D, 0.0D);
             world.addParticle(ParticleTypes.FLAME, d0, d1, d2, 0.0D, 0.0D, 0.0D);
+            } // Canvas
             if (this.spawnDelay > 0) {
                 --this.spawnDelay;
             }
@@ -170,6 +174,7 @@ public abstract class BaseSpawner {
                         entity.moveTo(entity.getX(), entity.getY(), entity.getZ(), randomsource.nextFloat() * 360.0F, 0.0F);
                         if (entity instanceof Mob) {
                             Mob entityinsentient = (Mob) entity;
+                            if(!io.github.dueris.canvas.CanvasConfig.spawnerEntitiesHaveAI) entityinsentient.setNoAi(false); // Canvas - Configurable MobSpawners
 
                             if (mobspawnerdata.getCustomSpawnRules().isEmpty() && !entityinsentient.checkSpawnRules(world, EntitySpawnReason.SPAWNER) || !entityinsentient.checkSpawnObstruction(world)) {
                                 continue;
diff --git a/src/main/java/net/minecraft/world/level/biome/Biome.java b/src/main/java/net/minecraft/world/level/biome/Biome.java
index b725eea9d3ca81d2ef7802f5d0346d924aa1f808..5927d4c01e2dff3aee8c506bc0029fe497236aa7 100644
--- a/src/main/java/net/minecraft/world/level/biome/Biome.java
+++ b/src/main/java/net/minecraft/world/level/biome/Biome.java
@@ -158,7 +158,7 @@ public final class Biome {
         if (this.warmEnoughToRain(pos, world.getSeaLevel())) {
             return false;
         } else {
-            if (world.isInsideBuildHeight(pos.getY()) && world.getBrightness(LightLayer.BLOCK, pos) < 10) {
+            if (world.isInsideBuildHeight(pos.getY()) && (!io.github.dueris.canvas.CanvasConfig.checkLightForSnow || world.getBrightness(LightLayer.BLOCK, pos) < 10)) { // Canvas - More Configs -- General
                 BlockState blockState = world.getBlockState(pos);
                 if ((blockState.isAir() || blockState.is(Blocks.SNOW)) && Blocks.SNOW.defaultBlockState().canSurvive(world, pos)) {
                     return true;
diff --git a/src/main/java/net/minecraft/world/level/material/LavaFluid.java b/src/main/java/net/minecraft/world/level/material/LavaFluid.java
index 6e643c1a7f7e71cfd20603facaf224985ee81716..12f160102d45082eff03d589a9f610fdf33a45e7 100644
--- a/src/main/java/net/minecraft/world/level/material/LavaFluid.java
+++ b/src/main/java/net/minecraft/world/level/material/LavaFluid.java
@@ -69,7 +69,7 @@ public abstract class LavaFluid extends FlowingFluid {
 
     @Override
     public void randomTick(ServerLevel world, BlockPos pos, FluidState state, RandomSource random) {
-        if (world.getGameRules().getBoolean(GameRules.RULE_DOFIRETICK)) {
+        if (world.getGameRules().getBoolean(GameRules.RULE_DOFIRETICK) && io.github.dueris.canvas.CanvasConfig.lavaCatchesBlocksOnFire) { // Canvas - More Configs -- Block
             int i = random.nextInt(3);
 
             if (i > 0) {
