From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sun, 15 Oct 2023 15:29:38 -0700
Subject: [PATCH] Create MojangGui api


diff --git a/src/main/java/com/dueris/canvas/CraftServerGui.java b/src/main/java/com/dueris/canvas/CraftServerGui.java
new file mode 100644
index 0000000000000000000000000000000000000000..611e0795d5fe9cee5efd7fd21b393d33d7bc4fbe
--- /dev/null
+++ b/src/main/java/com/dueris/canvas/CraftServerGui.java
@@ -0,0 +1,116 @@
+package com.dueris.canvas;
+
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.WindowListener;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.LinkedList;
+import java.util.concurrent.atomic.AtomicBoolean;
+
+public class CraftServerGui extends JComponent implements MojangServerGui {
+    @Override
+    public void addPanel(final JComponent jComponent, final String constraints) {
+
+    }
+
+    @Override
+    public JComponent getMojangChatPanel() {
+        return null;
+    }
+
+    @Override
+    public JComponent getMojangInfoPanel() {
+        return null;
+    }
+
+    @Override
+    public void addDynamicTitle(final boolean condition, final String falseT, final String trueT) {
+
+    }
+
+    @Override
+    public String getTitle() {
+        return null;
+    }
+
+    @Override
+    public String getShutdownTitle() {
+        return null;
+    }
+
+    @Override
+    public void setIcon(final Image icon) {
+
+    }
+
+    @Override
+    public JFrame getJFrame() {
+        return null;
+    }
+
+    @Override
+    public void addWindowListener(final WindowListener windowListener) {
+
+    }
+
+    @Override
+    public AtomicBoolean getIsClosing() {
+        return null;
+    }
+
+    @Override
+    public Collection<Runnable> getFinalizers() {
+        return null;
+    }
+
+    @Override
+    public LinkedList<String> getHistory() {
+        return null;
+    }
+
+    @Override
+    public Image getIcon() {
+        return null;
+    }
+
+    @Override
+    public int getHistoryIndex() {
+        return 0;
+    }
+
+    @Override
+    public HashMap<JComponent, String> getPanels() {
+        return null;
+    }
+
+    @Override
+    public void setCurrentCommand(final String currentCommand) {
+
+    }
+
+    @Override
+    public String getCurrentCommand() {
+        return null;
+    }
+
+    @Override
+    public void setShutdownTitle(final String title) {
+
+    }
+
+    @Override
+    public void setHistoryLimit(final int max) {
+
+    }
+
+    @Override
+    public void updateFrame() {
+
+    }
+
+    @Override
+    public Font getGuiFont() {
+        return null;
+    }
+}
diff --git a/src/main/java/com/dueris/canvas/MojangServerGui.java b/src/main/java/com/dueris/canvas/MojangServerGui.java
new file mode 100644
index 0000000000000000000000000000000000000000..6812e0d0b86f09771b5ecf31bba19bc2238a34a4
--- /dev/null
+++ b/src/main/java/com/dueris/canvas/MojangServerGui.java
@@ -0,0 +1,65 @@
+package com.dueris.canvas;
+
+import org.bukkit.Server;
+import org.bukkit.scheduler.BukkitRunnable;
+import org.jetbrains.annotations.NotNull;
+import org.slf4j.Logger;
+import javax.swing.*;
+import javax.swing.plaf.ComponentUI;
+import java.awt.*;
+import java.awt.event.WindowListener;
+import java.awt.image.ColorModel;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.concurrent.atomic.AtomicBoolean;
+
+public interface MojangServerGui {
+
+    public void addPanel(JComponent jComponent, String constraints);
+
+    public JComponent getMojangChatPanel();
+
+    public JComponent getMojangInfoPanel();
+
+    public void addDynamicTitle(boolean condition, String falseT, String trueT);
+
+    public Font getFont();
+
+    public String getTitle();
+
+    public String getShutdownTitle();
+
+    public void setIcon(Image icon);
+
+    public JFrame getJFrame();
+
+    public void setVisible(boolean visible);
+
+    public void addWindowListener(WindowListener windowListener);
+
+    public AtomicBoolean getIsClosing();
+
+    public Collection<Runnable> getFinalizers();
+
+    public java.util.LinkedList<String> getHistory();
+
+    public Image getIcon();
+
+    public int getHistoryIndex();
+
+    public HashMap<JComponent, String> getPanels();
+
+    public void setCurrentCommand(final String currentCommand);
+
+    public String getCurrentCommand();
+
+    public void setShutdownTitle(String title);
+
+    public void setHistoryLimit(int max);
+
+    public void updateFrame();
+
+    public Font getGuiFont();
+
+    public void setFont(Font font);
+}
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 591afb159b0e2389c6d29af6919e40d6c2c0c487..aab1c5530ea4cc75864aa4b55793f61d7e477b12 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1,5 +1,6 @@
 package org.bukkit;
 
+import com.dueris.canvas.CraftServerGui;
 import com.dueris.canvas.logger.CanvasLogger;
 import com.dueris.canvas.logger.Obfuscator;
 import com.google.common.collect.ImmutableList;
@@ -111,9 +112,18 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
     @NotNull
     public Obfuscator getObfuscator();
 
+    /**
+     * @return the Canvas logger
+     */
     @NotNull
     public CanvasLogger getCanvasLogger();
 
+    /**
+     * @return an interface for the CraftServer gui api
+     */
+    @NotNull
+    public CraftServerGui getServerGui();
+
     // Canvas end
 
     /**
