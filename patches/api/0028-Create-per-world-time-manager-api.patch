From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sat, 11 Nov 2023 12:29:56 -0800
Subject: [PATCH] Create per-world time manager api


diff --git a/src/main/java/io/github/dueris/world/time/TimeManager.java b/src/main/java/io/github/dueris/world/time/TimeManager.java
new file mode 100644
index 0000000000000000000000000000000000000000..0a375ef8ac7076e8893ce5420ff8a627ce194546
--- /dev/null
+++ b/src/main/java/io/github/dueris/world/time/TimeManager.java
@@ -0,0 +1,172 @@
+package io.github.dueris.world.time;
+
+import org.bukkit.World;
+
+public interface TimeManager {
+    /**
+     * Get the current Minecraft time for the specified world.
+     *
+     * @param world The world for which to get the time.
+     * @return The current Minecraft time in ticks for the specified world.
+     */
+    public long getMinecraftTime(World world);
+
+    /**
+     * Get the normal time format for the specified world.
+     *
+     * @param world The world for which to get the time.
+     * @return The time in the format "years/months/days/hours/minutes" from 0 to now.
+     *         Time is rounded to the nearest minute.
+     */
+    public String getNormalTime(World world);
+
+    /**
+     * Set the full time for the specified world in years.
+     *
+     * @param world The world for which to set the time.
+     * @param years The new time value in years.
+     */
+    public void setFullTime(World world, int years);
+
+    /**
+     * Add time to the specified world in years.
+     *
+     * @param world The world for which to add time.
+     * @param years The amount of time to add in years.
+     */
+    public void addTime(World world, int years);
+
+    /**
+     * Remove time from the specified world in years.
+     *
+     * @param world The world for which to remove time.
+     * @param years The amount of time to remove in years.
+     */
+    public void removeTime(World world, int years);
+
+    /**
+     * Set the full time for the specified world in years and months.
+     *
+     * @param world The world for which to set the time.
+     * @param years The new time value in years.
+     * @param months The new time value in months.
+     */
+    public void setFullTime(World world, int years, int months);
+
+    /**
+     * Add time to the specified world in years and months.
+     *
+     * @param world The world for which to add time.
+     * @param years The amount of time to add in years.
+     * @param months The amount of time to add in months.
+     */
+    public void addTime(World world, int years, int months);
+
+    /**
+     * Remove time from the specified world in years and months.
+     *
+     * @param world The world for which to remove time.
+     * @param years The amount of time to remove in years.
+     * @param months The amount of time to remove in months.
+     */
+    public void removeTime(World world, int years, int months);
+
+    /**
+     * Set the full time for the specified world in years, months, and days.
+     *
+     * @param world The world for which to set the time.
+     * @param years The new time value in years.
+     * @param months The new time value in months.
+     * @param days The new time value in days.
+     */
+    public void setFullTime(World world, int years, int months, int days);
+
+    /**
+     * Add time to the specified world in years, months, and days.
+     *
+     * @param world The world for which to add time.
+     * @param years The amount of time to add in years.
+     * @param months The amount of time to add in months.
+     * @param days The amount of time to add in days.
+     */
+    public void addTime(World world, int years, int months, int days);
+
+    /**
+     * Remove time from the specified world in years, months, and days.
+     *
+     * @param world The world for which to remove time.
+     * @param years The amount of time to remove in years.
+     * @param months The amount of time to remove in months.
+     * @param days The amount of time to remove in days.
+     */
+    public void removeTime(World world, int years, int months, int days);
+
+    /**
+     * Set the full time for the specified world in years, months, days, and hours.
+     *
+     * @param world The world for which to set the time.
+     * @param years The new time value in years.
+     * @param months The new time value in months.
+     * @param days The new time value in days.
+     * @param hours The new time value in hours.
+     */
+    public void setFullTime(World world, int years, int months, int days, int hours);
+
+    /**
+     * Add time to the specified world in years, months, days, and hours.
+     *
+     * @param world The world for which to add time.
+     * @param years The amount of time to add in years.
+     * @param months The amount of time to add in months.
+     * @param days The amount of time to add in days.
+     * @param hours The amount of time to add in hours.
+     */
+    public void addTime(World world, int years, int months, int days, int hours);
+
+    /**
+     * Remove time from the specified world in years, months, days, and hours.
+     *
+     * @param world The world for which to remove time.
+     * @param years The amount of time to remove in years.
+     * @param months The amount of time to remove in months.
+     * @param days The amount of time to remove in days.
+     * @param hours The amount of time to remove in hours.
+     */
+    public void removeTime(World world, int years, int months, int days, int hours);
+
+    /**
+     * Set the full time for the specified world in years, months, days, hours, and minutes.
+     *
+     * @param world The world for which to set the time.
+     * @param years The new time value in years.
+     * @param months The new time value in months.
+     * @param days The new time value in days.
+     * @param hours The new time value in hours.
+     * @param minutes The new time value in minutes.
+     */
+    public void setFullTime(World world, int years, int months, int days, int hours, int minutes);
+
+    /**
+     * Add time to the specified world in years, months, days, hours, and minutes.
+     *
+     * @param world The world for which to add time.
+     * @param years The amount of time to add in years.
+     * @param months The amount of time to add in months.
+     * @param days The amount of time to add in days.
+     * @param hours The amount of time to add in hours.
+     * @param minutes The amount of time to add in minutes.
+     */
+    public void addTime(World world, int years, int months, int days, int hours, int minutes);
+
+    /**
+     * Remove time from the specified world in years, months, days, hours, and minutes.
+     *
+     * @param world The world for which to remove time.
+     * @param years The amount of time to remove in years.
+     * @param months The amount of time to remove in months.
+     * @param days The amount of time to remove in days.
+     * @param hours The amount of time to remove in hours.
+     * @param minutes The amount of time to remove in minutes.
+     */
+    public void removeTime(World world, int years, int months, int days, int hours, int minutes);
+}
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 218b4f5d2aff008f323fb2b243ad5d0799bbf99a..320f12bbfa60076e4040bc9d381c5461ac61f9bc 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -20,6 +20,7 @@ import java.util.function.Consumer;
 import java.util.logging.Logger;
 
 import io.github.dueris.properties.ServerProperties;
+import io.github.dueris.world.time.TimeManager;
 import org.bukkit.Warning.WarningState;
 import org.bukkit.advancement.Advancement;
 import org.bukkit.block.data.BlockData;
@@ -201,6 +202,13 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      * @return ServerProperties for the server, aka the server.properties file
      */
     public ServerProperties getServerProperties();
+
+    /**
+     * Gets the time manager for the server.
+     *
+     * @return time manager for the server.
+     */
+    public TimeManager getTimeManager();
     // Canvas end
 
     /**
