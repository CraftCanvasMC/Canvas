From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolf1909 <160778222+PurpleWolf1909@users.noreply.github.com>
Date: Tue, 30 Apr 2024 16:14:12 +0000
Subject: [PATCH] Enhance Chunk API


diff --git a/src/main/java/org/bukkit/Chunk.java b/src/main/java/org/bukkit/Chunk.java
index d547ae2b20c58bc703de4532b3b591dd34ddb1c6..0aefd4566a0a4b83fd99ef25472c7580456889a9 100644
--- a/src/main/java/org/bukkit/Chunk.java
+++ b/src/main/java/org/bukkit/Chunk.java
@@ -1,6 +1,7 @@
 package org.bukkit;
 
 import java.util.Collection;
+import java.util.List;
 import org.bukkit.block.Biome;
 import org.bukkit.block.Block;
 import org.bukkit.block.BlockState;
@@ -377,4 +378,60 @@ public interface Chunk extends PersistentDataHolder {
          */
         UNLOADED;
     }
+
+    // Canvas start
+    /**
+     * Clears all entities from the chunk.
+     */
+    public void clearAllEntities();
+
+    /**
+     * Retrieves a list of all entities present in the chunk.
+     *
+     * @return A list of entities in the chunk.
+     */
+    public List<Entity> getEntitiesInChunk();
+
+    /**
+     * Replaces blocks in the chunk from the specified old material to the new material.
+     *
+     * @param oldMat The material to replace.
+     * @param newMat The new material to replace with.
+     */
+    public void replaceBlocksInChunk(Material oldMat, Material newMat);
+
+    /**
+     * Reloads the chunk to update its state.
+     */
+    public void reloadChunk();
+
+    /**
+     * Adds an entity to the chunk.
+     *
+     * @param entity The entity to add to the chunk.
+     */
+    public void addEntityToChunk(Entity entity);
+
+    /**
+     * Adds an entity to the chunk at the specified location.
+     *
+     * @param entity   The entity to add to the chunk.
+     * @param location The location where the entity should be added within the chunk.
+     */
+    public void addEntityToChunk(Entity entity, Location location);
+
+    /**
+     * Retrieves the location at the center of the chunk(ChunkPos 0,0).
+     *
+     * @return The location at the center of the chunk.
+     */
+    public Location getCenter();
+
+    /**
+     * Retrieves an array of blocks representing the contents of the chunk.
+     *
+     * @return An array of blocks in the chunk.
+     */
+    public Block[] getBlocksInChunk();
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index b76adf4370555b02b891a49f8019b4e152c002c2..393332a42641d8678088a18b6af6683ffd3f22da 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -10,6 +10,7 @@ import java.util.Map;
 import java.util.UUID;
 import java.util.concurrent.CompletableFuture;
 import org.bukkit.BanEntry;
+import org.bukkit.Chunk; // Canvas
 import org.bukkit.DyeColor;
 import org.bukkit.Effect;
 import org.bukkit.GameMode;
@@ -99,6 +100,14 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
     @Override
     public String getName();
 
+    // Canvas start
+    /**
+     * Returns the chunks within the players render distance
+     */
+    public Chunk[] getChunksInRenderDistance();
+
+    // Canvas end
+
     /**
      * Gets the "friendly" name to display of this player. This may include
      * color.
