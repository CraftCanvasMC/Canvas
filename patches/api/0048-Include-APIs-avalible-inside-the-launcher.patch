From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Mon, 11 Dec 2023 21:55:48 +0000
Subject: [PATCH] Include APIs avalible inside the launcher


diff --git a/build.gradle.kts b/build.gradle.kts
index ea385dfd88fa351edf4a5dcf30ec34e3d8484de0..1e7bd6ff201660637d3b5f6375c99a16d93588f3 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -9,6 +9,20 @@ plugins {
     idea // Paper
     id("com.github.johnrengelman.shadow") // Canvas
 }
+// Canvas start
+repositories {
+    maven("https://jitpack.io")
+    maven {
+        url = uri("https://repo.spongepowered.org/maven/")
+    }
+    maven {
+        url = uri("https://files.minecraftforge.net/maven/")
+    }
+    maven {
+        url = uri("https://maven.fabricmc.net/")
+    }
+}
+// Canvas end
 
 java {
     withSourcesJar()
@@ -61,7 +75,7 @@ dependencies {
     api("com.googlecode.json-simple:json-simple:1.1.1") {
         isTransitive = false // includes junit
     }
-    implementation("org.spongepowered:mixin:0.8.5") // Canvas - shadow mixin
+    // implementation("org.spongepowered:mixin:0.8.5") // Canvas - shadow mixin // Canvas - moved to use fabric mixin
     api("it.unimi.dsi:fastutil:8.5.6")
     apiAndDocs(platform("net.kyori:adventure-bom:$adventureVersion"))
     apiAndDocs("net.kyori:adventure-api")
@@ -96,6 +110,29 @@ dependencies {
     testImplementation("org.hamcrest:hamcrest:2.2")
     testImplementation("org.mockito:mockito-core:5.5.0")
     testImplementation("org.ow2.asm:asm-tree:9.5")
+    // Canvas start - include avalible apis inside Canvas-Launcher
+    implementation("net.minecrell:terminalconsoleappender:1.3.0")
+    implementation("org.jline:jline-reader:3.22.0")
+    implementation("org.spongepowered:configurate-hocon:4.2.0-SNAPSHOT")
+    implementation("org.spongepowered:configurate-gson:4.2.0-SNAPSHOT")
+    api("org.spongepowered:configurate-core:4.2.0-SNAPSHOT")
+    api("com.google.inject:guice:5.1.0") {
+        exclude(group = "com.google.code.findbugs", module = "jsr305")
+        exclude(group = "com.google.guava", module = "guava")
+    }
+    api("org.ow2.asm:asm-analysis:9.2")
+    api("org.ow2.asm:asm-util:9.2")
+    implementation("net.fabricmc:access-widener:2.1.0")
+    implementation("net.fabricmc:sponge-mixin:0.12.4+mixin.0.8.5") {
+        exclude(group = "org.ow2.asm")
+    }
+    implementation("cpw.mods:modlauncher:8.1.3") {
+        exclude(group = "com.google.code.findbugs", module = "jsr305")
+    }
+
+    implementation("cpw.mods:modlauncher:8.1.3:api") {
+        exclude(group = "com.google.code.findbugs", module = "jsr305")
+    }
 }
 
 // Paper start
