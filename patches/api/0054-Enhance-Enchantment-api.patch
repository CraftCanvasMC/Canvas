From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sat, 25 Nov 2023 12:36:35 -0800
Subject: [PATCH] Enhance Enchantment api


diff --git a/src/main/java/org/bukkit/enchantments/Enchantment.java b/src/main/java/org/bukkit/enchantments/Enchantment.java
index 8183f26545998e076ad93b4e28f3a3ff693d1032..5421cafe11f18cde3c8e4c1f3df61ffd50422c58 100644
--- a/src/main/java/org/bukkit/enchantments/Enchantment.java
+++ b/src/main/java/org/bukkit/enchantments/Enchantment.java
@@ -283,6 +283,26 @@ public abstract class Enchantment implements Keyed, net.kyori.adventure.translat
      * @return True if there is a conflict.
      */
     public abstract boolean conflictsWith(@NotNull Enchantment other);
+    // Canvas start
+
+    /**
+     * Sets if the enchantment is allowed to conflict with other enchants.
+     * If false, it is forced to have 0 conflicts.
+     * If true, it returns to its default conflicting enchantments
+     *
+     * @param canConflict
+     */
+    public abstract void setCanConflict(boolean canConflict);
+
+    /**
+     * Gets if the enchantment is allowed to conflict with other enchants.
+     * If false, it is forced to have 0 conflicts.
+     * If true, it returns to its default conflicting enchantments
+     *
+     * @return if the enchantment can conflict
+     */
+    public abstract boolean getCanConflict();
+    // Canvas end
 
     /**
      * Checks if this Enchantment may be applied to the given {@link
diff --git a/src/main/java/org/bukkit/enchantments/EnchantmentWrapper.java b/src/main/java/org/bukkit/enchantments/EnchantmentWrapper.java
index 4a838d6eab5a17d7204dba96a882b6c5a22636fc..ba772ff7821b82e0903e31581feff90d7d9f5e59 100644
--- a/src/main/java/org/bukkit/enchantments/EnchantmentWrapper.java
+++ b/src/main/java/org/bukkit/enchantments/EnchantmentWrapper.java
@@ -63,6 +63,17 @@ public class EnchantmentWrapper extends Enchantment {
     public boolean conflictsWith(@NotNull Enchantment other) {
         return getEnchantment().conflictsWith(other);
     }
+
+    @Override
+    public void setCanConflict(final boolean canConflict) {
+        this.getEnchantment().setCanConflict(canConflict);
+    }
+
+    @Override
+    public boolean getCanConflict() {
+        return this.getEnchantment().getCanConflict();
+    }
+
     // Paper start
     @NotNull
     @Override
