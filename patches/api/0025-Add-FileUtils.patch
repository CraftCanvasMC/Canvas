From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Fri, 24 Nov 2023 15:04:14 -0800
Subject: [PATCH] Add FileUtils


diff --git a/src/main/java/me/dueris/canvas/util/FileUtils.java b/src/main/java/me/dueris/canvas/util/FileUtils.java
new file mode 100644
index 0000000000000000000000000000000000000000..239b21c3721269237dbee80ffab5b6d9d475ca92
--- /dev/null
+++ b/src/main/java/me/dueris/canvas/util/FileUtils.java
@@ -0,0 +1,66 @@
+package me.dueris.canvas.util;
+
+import java.io.BufferedInputStream;
+import java.io.IOException;
+import java.net.URL;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.StandardCopyOption;
+
+public class FileUtils {
+    public static void deleteDirectory(Path directory, boolean ignoreErrors) throws IOException {
+        if (Files.exists(directory)) {
+            Files.walk(directory)
+                .sorted((a, b) -> b.compareTo(a)) // Sort in reverse order for correct deletion
+                .forEach(path -> {
+                    try {
+                        Files.deleteIfExists(path);
+                        Files.delete(path);
+                    } catch (IOException e) {
+                        if(!ignoreErrors){
+                            System.err.println("Error deleting: " + path + e);
+                        }
+                    }
+                });
+        }
+    }
+
+    public static void downloadFileFromURL(String fileUrl) throws IOException {
+        URL url = new URL(fileUrl);
+        try (BufferedInputStream in = new BufferedInputStream(url.openStream())) {
+            Path savePath = Path.of(System.getProperty("user.home"), "Downloads");
+            Files.createDirectories(savePath);
+
+            String fileName = url.getFile().substring(url.getFile().lastIndexOf('/') + 1);
+            Path filePath = savePath.resolve(fileName);
+            Files.copy(in, filePath, StandardCopyOption.REPLACE_EXISTING);
+        }
+    }
+
+    public static void downloadFileFromURL(String fileUrl, String saveDirectory) throws IOException {
+        URL url = new URL(fileUrl);
+        try (BufferedInputStream in = new BufferedInputStream(url.openStream())) {
+            Path savePath = Path.of(saveDirectory);
+            Files.createDirectories(savePath);
+
+            Path filePath = savePath.resolve(getFileNameFromUrl(fileUrl));
+            Files.copy(in, filePath, StandardCopyOption.REPLACE_EXISTING);
+        }
+    }
+
+    private static String getFileNameFromUrl(String fileUrl) {
+        String[] segments = fileUrl.split("/");
+        return segments[segments.length - 1];
+    }
+
+    public static void downloadFileFromURL(String fileUrl, String saveDirectory, String fileName) throws IOException {
+        URL url = new URL(fileUrl);
+        try (BufferedInputStream in = new BufferedInputStream(url.openStream())) {
+            Path savePath = Path.of(saveDirectory);
+            Files.createDirectories(savePath);
+
+            Path filePath = savePath.resolve(fileName);
+            Files.copy(in, filePath, StandardCopyOption.REPLACE_EXISTING);
+        }
+    }
+}
