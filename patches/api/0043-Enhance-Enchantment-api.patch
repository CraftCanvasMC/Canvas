From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sat, 25 Nov 2023 12:36:35 -0800
Subject: [PATCH] Enhance Enchantment api


diff --git a/src/main/java/org/bukkit/enchantments/Enchantment.java b/src/main/java/org/bukkit/enchantments/Enchantment.java
index d50d4c3121a966adcc47173ddb4575f7ad504148..4d8c10d9c7ebedf4314a87c03b65a3b72644fe99 100644
--- a/src/main/java/org/bukkit/enchantments/Enchantment.java
+++ b/src/main/java/org/bukkit/enchantments/Enchantment.java
@@ -279,6 +279,26 @@ public abstract class Enchantment implements Keyed, net.kyori.adventure.translat
      * @return True if there is a conflict.
      */
     public abstract boolean conflictsWith(@NotNull Enchantment other);
+    // Canvas start
+
+    /**
+     * Sets if the enchantment is allowed to conflict with other enchants.
+     * If false, it is forced to have 0 conflicts.
+     * If true, it returns to its default conflicting enchantments
+     *
+     * @param canConflict
+     */
+    public abstract void setCanConflict(boolean canConflict);
+
+    /**
+     * Gets if the enchantment is allowed to conflict with other enchants.
+     * If false, it is forced to have 0 conflicts.
+     * If true, it returns to its default conflicting enchantments
+     *
+     * @return if the enchantment can conflict
+     */
+    public abstract boolean getCanConflict();
+    // Canvas end
 
     /**
      * Checks if this Enchantment may be applied to the given {@link
diff --git a/src/main/java/org/bukkit/enchantments/EnchantmentWrapper.java b/src/main/java/org/bukkit/enchantments/EnchantmentWrapper.java
index da5d153a3e55a38b767359564001ad8663f9730b..349b5c553a63dd9688d151db8a122c8468e30036 100644
--- a/src/main/java/org/bukkit/enchantments/EnchantmentWrapper.java
+++ b/src/main/java/org/bukkit/enchantments/EnchantmentWrapper.java
@@ -20,6 +20,17 @@ public abstract class EnchantmentWrapper extends Enchantment {
     public Enchantment getEnchantment() {
         return this;
     }
+
+    @Override
+    public void setCanConflict(final boolean canConflict) {
+        this.getEnchantment().setCanConflict(canConflict);
+    }
+
+    @Override
+    public boolean getCanConflict() {
+        return this.getEnchantment().getCanConflict();
+    }
+
     // Paper start
     @NotNull
     @Override
