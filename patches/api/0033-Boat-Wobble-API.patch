From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Mon, 20 Nov 2023 22:13:31 +0000
Subject: [PATCH] Boat Wobble API


diff --git a/src/main/java/me/dueris/canvas/event/entity/BoatBobEvent.java b/src/main/java/me/dueris/canvas/event/entity/BoatBobEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..ec4fd53c4cf59a35a7478e2df8f340275cdbf9ac
--- /dev/null
+++ b/src/main/java/me/dueris/canvas/event/entity/BoatBobEvent.java
@@ -0,0 +1,55 @@
+package me.dueris.canvas.event.entity;
+
+import org.bukkit.entity.Boat;
+import org.bukkit.entity.Entity;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.bukkit.util.Vector;
+import org.jetbrains.annotations.NotNull;
+
+public class BoatBobEvent extends EntityEvent{
+    public static final HandlerList HANDLER_LIST = new HandlerList();
+    private Boat boat;
+    private boolean canceled;
+    private Vector velocity;
+
+    public BoatBobEvent(final @NotNull Boat what, @NotNull Vector velocity) {
+        super(what);
+        this.boat = what;
+        this.velocity = velocity;
+    }
+
+    @NotNull
+    public Vector getVelocity() {
+        return velocity.clone();
+    }
+
+    public void setVelocity(Vector vel) {
+        this.velocity = vel;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return HANDLER_LIST;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return HANDLER_LIST;
+    }
+
+    public boolean isCanceled(){
+        return canceled;
+    }
+
+    public void setCanceled(boolean canceled){
+        this.canceled = canceled;
+    }
+
+    @Override
+    public @NotNull Boat getEntity() {
+        return this.boat;
+    }
+    
+}
diff --git a/src/main/java/org/bukkit/entity/Boat.java b/src/main/java/org/bukkit/entity/Boat.java
index 6d6b55c507a90b30d10097eda993f5025169eec0..bb3c080673aeaa34adca6e0b349a48ee6dc27f6d 100644
--- a/src/main/java/org/bukkit/entity/Boat.java
+++ b/src/main/java/org/bukkit/entity/Boat.java
@@ -71,6 +71,34 @@ public interface Boat extends Vehicle {
      */
     @Deprecated
     public double getOccupiedDeceleration();
+    // Canvas start
+
+    /**
+     * Gets the number of ticks the boat will wobble for until it either rises or sinks
+     * due to a BubbleColumn
+     * If the boat is not above a BubbleColumn, this will return 0.
+     * @return the number of ticks the boat will wobble
+     */
+    public int getWobbleTicks();
+
+    /**
+     * Sets the number of ticks the boat will wobble for until it either 
+     * rises or sinks to do a BubbleColumn
+     * 
+     * @param ticks
+     */
+    public void setWobbleTicks(int ticks);
+
+    /**
+     * Gets a {@link net.kyori.adventure.util.TriState} of whether the boat will sink after it wobbles.
+     * If the boat will sink, this will return {@link net.kyori.adventure.util.TriState#TRUE}.
+     * If the boat will rise, this will return {@link net.kyori.adventure.util.TriState#FALSE}.
+     * If the boat is not wobbling, this returns {@link net.kyori.adventure.util.TriState#NOT_SET}
+     *
+     * @return a {@link net.kyori.adventure.util.TriState} of whether the boat will sink after it wobbles.
+     */
+    public net.kyori.adventure.util.@NotNull TriState willSinkAfterWobble();
+    // Canvas end
 
     /**
      * Sets the deceleration rate (newSpeed = curSpeed * rate) of occupied
