From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sat, 14 Oct 2023 12:15:20 -0700
Subject: [PATCH] Obfuscation & Encryption api


diff --git a/src/main/java/com/dueris/canvas/logger/CanvasLogger.java b/src/main/java/com/dueris/canvas/logger/CanvasLogger.java
new file mode 100644
index 0000000000000000000000000000000000000000..6d555a158396ab98f4225a686c78fd1c4cda631b
--- /dev/null
+++ b/src/main/java/com/dueris/canvas/logger/CanvasLogger.java
@@ -0,0 +1,47 @@
+package com.dueris.canvas.logger;
+
+public interface CanvasLogger {
+
+    public enum LogLevel {
+        INFO, WARNING, ERROR
+    }
+
+    /**
+     * Sends normal message to console
+     * @param message
+     */
+    public void info(String message);
+
+    /**
+     * Sends normal message to console with the color of your choice & log level(INFO, SEVERE, WARNING) of your choice
+     * @param message
+     * @param color
+     * @param level
+     */
+    public void logColored(String color, String level, String message);
+
+    /**
+     * Sends normal message to console with log level(INFO, SEVERE, WARNING) of your choice
+     * @param message
+     * @param level
+     */
+    public void log(String level, String message);
+
+    /**
+     * Sends error message to console
+     * @param message
+     */
+    public void error(String message);
+
+    /**
+     * Sends warning message to console
+     * @param message
+     */
+    public void warning(String message);
+
+    /**
+     * @return Canvas server obfuscator
+     */
+    public Obfuscator getObfuscator();
+
+}
diff --git a/src/main/java/com/dueris/canvas/logger/Obfuscator.java b/src/main/java/com/dueris/canvas/logger/Obfuscator.java
new file mode 100644
index 0000000000000000000000000000000000000000..a8511d43667e7022e6b7ce5d2fb7f41f26764c6d
--- /dev/null
+++ b/src/main/java/com/dueris/canvas/logger/Obfuscator.java
@@ -0,0 +1,104 @@
+package com.dueris.canvas.logger;
+
+import java.util.HashMap;
+import java.util.Map;
+
+public interface Obfuscator {
+
+    /**
+     * Obfuscates a message using the Canvas obfuscator, turning the characters from the provided String to a randomized String, commonly used for encryption
+     * @param msg
+     * @return String
+     */
+    public String obfuscateMessage(String msg);
+
+    /**
+     * Logs a message with the log level of INFO
+     * @param msg
+     */
+    public abstract void log(String msg);
+
+    /**
+     * Logs a message with the log level of SEVERE
+     * @param msg
+     */
+    public abstract void error(String msg);
+
+    /**
+     * Logs a message with the log level of WARNING
+     * @param msg
+     */
+    public abstract void warn(String msg);
+
+    /**
+     * Logs a message with the log level of the provided Level
+     * @param logLevel
+     * @param msg
+     */
+    public abstract void logMsg(java.util.logging.Level logLevel, String msg);
+
+    /**
+     * Creates obfuscated message using a special provided characterMap of Map<Character, Character>.
+     * @param msg
+     * @param characterMap
+     * @return Obfuscated message using a special provided characterMap of Map<Character, Character>.
+     */
+    public String obfuscateMessage(String msg, Map<Character, Character> characterMap);
+
+    /**
+     * Generates a random key with a specified length
+     * @param length
+     * @return
+     */
+    public String genKey(int length);
+
+    /**
+     * Encodes a message in a Base64 format
+     * @param input
+     * @return
+     */
+    public String encodeBase64(String input);
+
+    /**
+     * Decodes a message in a Base64 format
+     * @param input
+     * @return
+     */
+    public String decodeBase64(String input);
+
+    /**
+     * EXAMPLE:
+     *         String key = Bukkit.getServer().getCanvasLogger().getObfuscator().generateEncryptionKey("AES");
+     *         String encryptedMsg = Bukkit.getServer().getCanvasLogger().getObfuscator().encrypt("Hello world!", key, "AES");
+     *         Bukkit.getLogger().info(encryptedMsg);
+     *         Bukkit.getLogger().info(Bukkit.getServer().getCanvasLogger().getObfuscator().decrypt(encryptedMsg, key, "AES"));
+     * @param data
+     * @param key
+     * @param algorithm
+     * @return Encrypted String with the encryption algorithm of your choosing.
+     */
+    public String encrypt(String data, String key, String algorithm);
+
+    /**
+     * EXAMPLE:
+     *         String key = Bukkit.getServer().getCanvasLogger().getObfuscator().generateEncryptionKey("AES");
+     *         String encryptedMsg = Bukkit.getServer().getCanvasLogger().getObfuscator().encrypt("Hello world!", key, "AES");
+     *         Bukkit.getLogger().info(encryptedMsg);
+     *         Bukkit.getLogger().info(Bukkit.getServer().getCanvasLogger().getObfuscator().decrypt(encryptedMsg, key, "AES"));
+     * @param encryptedData
+     * @param key
+     * @param algorithm
+     * @throws Exception
+     * @throws javax.crypto.BadPaddingException
+     * @return Decrypted String with the encryption algorithm of your choosing.
+     */
+    public String decrypt(String encryptedData, String key, String algorithm);
+
+    /**
+     * Generates an encryption key for encrypting data
+     * @param algorithm
+     * @return Encryption key for encrypting data
+     */
+    public String generateEncryptionKey(String algorithm);
+
+}
diff --git a/src/main/java/com/dueris/canvas/placeholder b/src/main/java/com/dueris/canvas/placeholder
new file mode 100644
index 0000000000000000000000000000000000000000..cf969db5a5ea454edd0d2fb9f6a65df345163bdb
--- /dev/null
+++ b/src/main/java/com/dueris/canvas/placeholder
@@ -0,0 +1 @@
+# PLACEHOLDER FOR CANVAS
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index dd99f53e3d559685a4b3a454a9e607c310fc6aff..591afb159b0e2389c6d29af6919e40d6c2c0c487 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1,5 +1,7 @@
 package org.bukkit;
 
+import com.dueris.canvas.logger.CanvasLogger;
+import com.dueris.canvas.logger.Obfuscator;
 import com.google.common.collect.ImmutableList;
 import java.awt.image.BufferedImage;
 import java.io.File;
@@ -100,6 +102,20 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
     @NotNull
     public String getName();
 
+    // Canvas start
+
+    /**
+     * Gets the obfuscator for the server
+     * @return the Canvas obfuscator
+     */
+    @NotNull
+    public Obfuscator getObfuscator();
+
+    @NotNull
+    public CanvasLogger getCanvasLogger();
+
+    // Canvas end
+
     /**
      * Gets the version string of this server implementation.
      *
