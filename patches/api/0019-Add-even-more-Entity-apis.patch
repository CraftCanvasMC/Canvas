From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Wed, 1 Nov 2023 08:18:52 +0000
Subject: [PATCH] Add even more Entity apis


diff --git a/src/main/java/org/bukkit/entity/AbstractHorse.java b/src/main/java/org/bukkit/entity/AbstractHorse.java
index 00568197c90a0d3f0779de9219df84410a53dcb2..e8af83c57e8279fee2d8f673b7c3a0ee35a54904 100644
--- a/src/main/java/org/bukkit/entity/AbstractHorse.java
+++ b/src/main/java/org/bukkit/entity/AbstractHorse.java
@@ -189,5 +189,9 @@ public interface AbstractHorse extends Vehicle, InventoryHolder, Tameable {
      * @return {@code true} if the entity is saddled, {@code false} otherwise.
      */
     boolean isSaddled();
+    
+    public void zombify();
+    
+    public void skeletonify();
     // Canvas end
 }
diff --git a/src/main/java/org/bukkit/entity/Axolotl.java b/src/main/java/org/bukkit/entity/Axolotl.java
index d4d7f30e8685cf67160e018f92651651d08b1b83..47b583896351d6fd4f360ad2017f336b3fbddb8b 100644
--- a/src/main/java/org/bukkit/entity/Axolotl.java
+++ b/src/main/java/org/bukkit/entity/Axolotl.java
@@ -118,5 +118,7 @@ public interface Axolotl extends Animals, io.papermc.paper.entity.Bucketable { /
 
     public void setRareVarientChanceBound(int bound);
 
+    public void rehydrate();
+
     // Canvas end
 }
diff --git a/src/main/java/org/bukkit/entity/Bee.java b/src/main/java/org/bukkit/entity/Bee.java
index 1f6702b0de00b87dbed7f6d93e911655e8667b0b..b91432ddd89ed4b3c8ba170ff438f5b2e814c5b8 100644
--- a/src/main/java/org/bukkit/entity/Bee.java
+++ b/src/main/java/org/bukkit/entity/Bee.java
@@ -2,6 +2,8 @@ package org.bukkit.entity;
 
 import org.bukkit.Location;
 import org.jetbrains.annotations.Nullable;
+import org.apache.commons.lang3.tuple.Pair;
+import java.lang.Integer;
 
 /**
  * Represents a Bee.
@@ -144,5 +146,22 @@ public interface Bee extends Animals {
      * @return number of ticks
      */
     int getTicksSincePollination();
-    // Paper end
+    // Paper end -/- Canvas start
+
+    public void rerollFlowerLocateTimer();
+
+    public int getFlowerLocateTimer();
+
+    public void setPersistentAngerTime(final int min, final int max);
+
+    public Pair<Integer, Integer> getPersistentAngerTime();
+
+    public void tryEnterClosestHive();
+
+    public void tryPollinate();
+
+    public void goToKnownFlower();
+
+    public void tryFindNewHive();
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/entity/Fish.java b/src/main/java/org/bukkit/entity/Fish.java
index 86da8dc401ed7db19a39bc682721055cd341ccde..1643bd8726027693871049652185170df1195f28 100644
--- a/src/main/java/org/bukkit/entity/Fish.java
+++ b/src/main/java/org/bukkit/entity/Fish.java
@@ -3,4 +3,14 @@ package org.bukkit.entity;
 /**
  * Represents a fish entity.
  */
-public interface Fish extends WaterMob, io.papermc.paper.entity.Bucketable { } // Paper - Bucketable API
+public interface Fish extends WaterMob, io.papermc.paper.entity.Bucketable { // Paper - Bucketable API
+    // Canvas start
+    public void setCanRandomSwim(boolean can);
+
+    public boolean getCanRandomSwim();
+
+    public int getMaxSpawnClusterSize();
+
+    public void setMaxSpawnClusterSize(int size);
+    // Canvas end
+}
diff --git a/src/main/java/org/bukkit/entity/Frog.java b/src/main/java/org/bukkit/entity/Frog.java
index 0960bdbb3253bfe109dc6283244b8c9d95a850f7..b026ca9fe4119aed334aa8d97465488915c19103 100644
--- a/src/main/java/org/bukkit/entity/Frog.java
+++ b/src/main/java/org/bukkit/entity/Frog.java
@@ -70,4 +70,7 @@ public interface Frog extends Animals {
             return key;
         }
     }
+    // Canvas start
+    public void youngify();
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/entity/SkeletonHorse.java b/src/main/java/org/bukkit/entity/SkeletonHorse.java
index 38539d5b77e06865aa65b8db0c1a3b6eaa914d03..ea589e7e4d1e5f64db6d16926270741150b137dc 100644
--- a/src/main/java/org/bukkit/entity/SkeletonHorse.java
+++ b/src/main/java/org/bukkit/entity/SkeletonHorse.java
@@ -56,5 +56,9 @@ public interface SkeletonHorse extends AbstractHorse {
      */
     @Deprecated
     void setTrap(boolean trap);
-    // Paper end
+    // Paper end -/- Canvas start
+    public void revertToHorse();
+    
+    public void zombify();
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/entity/Tadpole.java b/src/main/java/org/bukkit/entity/Tadpole.java
index 8e097ad55d208a6980c320e2a849efdcc504cff1..38b0582b950073bdaa4756887750e3e72bdcba71 100644
--- a/src/main/java/org/bukkit/entity/Tadpole.java
+++ b/src/main/java/org/bukkit/entity/Tadpole.java
@@ -34,5 +34,12 @@ public interface Tadpole extends Fish {
      * @return the current agelock
      */
     boolean getAgeLock();
-    // Paper end
+    // Paper end -/- Canvas start
+
+    public void makeOld();
+
+    public void setCanAgeUp(boolean canAge);
+
+    public boolean getCanAgeUp();
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/entity/ZombieHorse.java b/src/main/java/org/bukkit/entity/ZombieHorse.java
index 4179b68bdb0f7ee5472b52d7b8534a5d9cb6cde5..b9b7f9ce2625d859bd854e71f1bb4663156d08ea 100644
--- a/src/main/java/org/bukkit/entity/ZombieHorse.java
+++ b/src/main/java/org/bukkit/entity/ZombieHorse.java
@@ -3,4 +3,10 @@ package org.bukkit.entity;
 /**
  * Represents a ZombieHorse - variant of {@link AbstractHorse}.
  */
-public interface ZombieHorse extends AbstractHorse { }
+public interface ZombieHorse extends AbstractHorse {
+    // Canvas start
+    public void revertToHorse();
+    
+    public void skeletonify();
+    // Canvas end
+}
