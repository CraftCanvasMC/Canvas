From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <jedimastertoothless@hotmail.com>
Date: Sun, 22 Oct 2023 13:16:39 -0700
Subject: [PATCH] Enhance ChunkAPI


diff --git a/src/main/java/org/bukkit/Chunk.java b/src/main/java/org/bukkit/Chunk.java
index 4418c41f75e9a190dd77abdd6048b0a4fb2a57ed..ce9fb7de024945372ce7241316dcb8dd69095fd5 100644
--- a/src/main/java/org/bukkit/Chunk.java
+++ b/src/main/java/org/bukkit/Chunk.java
@@ -1,6 +1,7 @@
 package org.bukkit;
 
 import java.util.Collection;
+import java.util.List;
 import org.bukkit.block.Biome;
 import org.bukkit.block.Block;
 import org.bukkit.block.BlockState;
@@ -338,4 +339,60 @@ public interface Chunk extends PersistentDataHolder {
          */
         UNLOADED;
     }
+
+    // Canvas start
+    /**
+     * Clears all entities from the chunk.
+     */
+    public void clearAllEntities();
+
+    /**
+     * Retrieves a list of all entities present in the chunk.
+     *
+     * @return A list of entities in the chunk.
+     */
+    public List<Entity> getEntitiesInChunk();
+
+    /**
+     * Replaces blocks in the chunk from the specified old material to the new material.
+     *
+     * @param oldMat The material to replace.
+     * @param newMat The new material to replace with.
+     */
+    public void replaceBlocksInChunk(Material oldMat, Material newMat);
+
+    /**
+     * Reloads the chunk to update its state.
+     */
+    public void reloadChunk();
+
+    /**
+     * Adds an entity to the chunk.
+     *
+     * @param entity The entity to add to the chunk.
+     */
+    public void addEntityToChunk(Entity entity);
+
+    /**
+     * Adds an entity to the chunk at the specified location.
+     *
+     * @param entity   The entity to add to the chunk.
+     * @param location The location where the entity should be added within the chunk.
+     */
+    public void addEntityToChunk(Entity entity, Location location);
+
+    /**
+     * Retrieves the location at the center of the chunk(ChunkPos 0,0).
+     *
+     * @return The location at the center of the chunk.
+     */
+    public Location getCenter();
+
+    /**
+     * Retrieves an array of blocks representing the contents of the chunk.
+     *
+     * @return An array of blocks in the chunk.
+     */
+    public Block[] getBlocksInChunk();
+    // Canvas end
 }
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 330282040fc40eec72c3a63c0735a94b3de839ad..ef87251f2bb174682868a2bb118a1ba76e2efa3a 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -9,6 +9,7 @@ import java.util.Date;
 import java.util.Map;
 import com.dueris.canvas.network.channels.ChatChannel;
 import org.bukkit.BanEntry;
+import org.bukkit.Chunk;
 import org.bukkit.DyeColor;
 import org.bukkit.Effect;
 import org.bukkit.GameMode;
@@ -101,6 +102,8 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
 
     public boolean isInChatChannel();
 
+    public Chunk[] getChunksInRenderDistance();
+
     // Canvas end
 
     /**
