From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Tue, 30 Apr 2024 20:32:18 -0700
Subject: [PATCH] Multithreaded Explosions


diff --git a/src/main/java/com/destroystokyo/paper/event/entity/EntityKnockbackByEntityEvent.java b/src/main/java/com/destroystokyo/paper/event/entity/EntityKnockbackByEntityEvent.java
index e0ba692c9b107f2b042a9c06549185e1c4777e27..b8b27178f20958fabad53bdea187a7b68751876e 100644
--- a/src/main/java/com/destroystokyo/paper/event/entity/EntityKnockbackByEntityEvent.java
+++ b/src/main/java/com/destroystokyo/paper/event/entity/EntityKnockbackByEntityEvent.java
@@ -17,9 +17,16 @@ public class EntityKnockbackByEntityEvent extends EntityPushedByEntityAttackEven
 
     @ApiStatus.Internal
     public EntityKnockbackByEntityEvent(@NotNull LivingEntity entity, @NotNull Entity hitBy, float knockbackStrength, @NotNull Vector acceleration) {
-        super(entity, hitBy, acceleration);
+        this(entity, hitBy, knockbackStrength, acceleration, false); // Canvas
+    }
+    // Canvas start
+
+    @ApiStatus.Internal
+    public EntityKnockbackByEntityEvent(@NotNull LivingEntity entity, @NotNull Entity hitBy, float knockbackStrength, @NotNull Vector acceleration, boolean async) {
+        super(entity, hitBy, acceleration, async);
         this.knockbackStrength = knockbackStrength;
     }
+    // Canvas end
 
     /**
      * @return the entity which was knocked back
diff --git a/src/main/java/io/papermc/paper/event/entity/EntityPushedByEntityAttackEvent.java b/src/main/java/io/papermc/paper/event/entity/EntityPushedByEntityAttackEvent.java
index 404bec776244fd776566c81f671f1009830c6d6e..460335f0fdd55d74289d6b7d7e56563898158db9 100644
--- a/src/main/java/io/papermc/paper/event/entity/EntityPushedByEntityAttackEvent.java
+++ b/src/main/java/io/papermc/paper/event/entity/EntityPushedByEntityAttackEvent.java
@@ -25,10 +25,21 @@ public class EntityPushedByEntityAttackEvent extends EntityEvent implements Canc
 
     @ApiStatus.Internal
     public EntityPushedByEntityAttackEvent(@NotNull Entity entity, @NotNull Entity pushedBy, @NotNull Vector acceleration) {
-        super(entity);
+        /* super(entity); // Canvas
         this.pushedBy = pushedBy;
         this.acceleration = acceleration;
+         */ // Canvas
+        this(entity, pushedBy, acceleration, false); // Canvas
     }
+    // Canvas start
+
+    @ApiStatus.Internal
+    public EntityPushedByEntityAttackEvent(@NotNull Entity entity, @NotNull Entity pushedBy, @NotNull Vector acceleration, boolean async) {
+        super(entity, async);
+        this.pushedBy = pushedBy;
+        this.acceleration = acceleration;
+    }
+    // Canvas end
 
     /**
      * Gets the entity which pushed the affected entity.
diff --git a/src/main/java/org/bukkit/event/block/BlockEvent.java b/src/main/java/org/bukkit/event/block/BlockEvent.java
index 62a4d13453e5430020933471efa938ceb689baaa..b0bdc7af6f28b9dc456fd800f6696600435dbfe8 100644
--- a/src/main/java/org/bukkit/event/block/BlockEvent.java
+++ b/src/main/java/org/bukkit/event/block/BlockEvent.java
@@ -11,8 +11,15 @@ public abstract class BlockEvent extends Event {
     protected Block block;
 
     public BlockEvent(@NotNull final Block theBlock) {
+        this(theBlock, false); // Canvas
+    }
+    // Canvas start
+
+    public BlockEvent(@NotNull final Block theBlock, boolean async) {
+        super(async);
         block = theBlock;
     }
+    // Canvas end
 
     /**
      * Gets the block involved in this event.
diff --git a/src/main/java/org/bukkit/event/entity/EntityEvent.java b/src/main/java/org/bukkit/event/entity/EntityEvent.java
index e3a9e32933fe84644f7458d2e0b8b09d3eacb21c..a8eb879daf87a55da441c1debc8392724c420629 100644
--- a/src/main/java/org/bukkit/event/entity/EntityEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityEvent.java
@@ -12,8 +12,15 @@ public abstract class EntityEvent extends Event {
     protected Entity entity;
 
     public EntityEvent(@NotNull final Entity what) {
+        this(what, false); // Canvas
+    }
+    // Canvas start
+
+    public EntityEvent(@NotNull final Entity what, boolean async) {
+        super(async);
         entity = what;
     }
+    // Canvas end
 
     /**
      * Returns the Entity involved in this event
diff --git a/src/main/java/org/bukkit/event/entity/EntityExplodeEvent.java b/src/main/java/org/bukkit/event/entity/EntityExplodeEvent.java
index 8506fa03293c575c35b55b052224807470fdbd98..74bf12afeb05539b46e6837b25bf4d5f3a79ea03 100644
--- a/src/main/java/org/bukkit/event/entity/EntityExplodeEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityExplodeEvent.java
@@ -21,12 +21,25 @@ public class EntityExplodeEvent extends EntityEvent implements Cancellable {
     private float yield;
 
     public EntityExplodeEvent(@NotNull final Entity what, @NotNull final Location location, @NotNull final List<Block> blocks, final float yield) {
+        /* // Canvas
         super(what);
         this.location = location;
         this.blocks = blocks;
         this.yield = yield;
         this.cancel = false;
+        */ // Canvas
+        this(what, location, blocks, yield, false);
     }
+    // Canvas start
+
+    public EntityExplodeEvent(@NotNull final Entity what, @NotNull final Location location, @NotNull final List<Block> blocks, final float yield, boolean async) {
+        super(what, async);
+        this.location = location;
+        this.blocks = blocks;
+        this.yield = yield;
+        this.cancel = false;
+    }
+    // Canvas end
 
     @Override
     public boolean isCancelled() {
diff --git a/src/main/java/org/bukkit/event/entity/EntityKnockbackByEntityEvent.java b/src/main/java/org/bukkit/event/entity/EntityKnockbackByEntityEvent.java
index bd44bc5ed9e20148f9b2ab3d2049187280f3eb18..da00a60195119c4fc228db82febfc03de77b7a91 100644
--- a/src/main/java/org/bukkit/event/entity/EntityKnockbackByEntityEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityKnockbackByEntityEvent.java
@@ -16,10 +16,19 @@ public class EntityKnockbackByEntityEvent extends EntityKnockbackEvent {
     private final Entity source;
 
     public EntityKnockbackByEntityEvent(@NotNull final LivingEntity entity, @NotNull final Entity source, @NotNull final KnockbackCause cause, final double force, @NotNull final Vector rawKnockback, @NotNull final Vector knockback) {
-        super(entity, cause, force, rawKnockback, knockback);
+        /* super(entity, cause, force, rawKnockback, knockback); // Canvas
 
         this.source = source;
+        */ // Canvas
+        this(entity, source, cause, force, rawKnockback, knockback, false);
     }
+    // Canvas start
+
+    public EntityKnockbackByEntityEvent(@NotNull final LivingEntity entity, @NotNull final Entity source, @NotNull final KnockbackCause cause, final double force, @NotNull final Vector rawKnockback, @NotNull final Vector knockback, boolean async) {
+        super(entity, cause, force, rawKnockback, knockback, async);
+        this.source = source;
+    }
+    // Canvas end
 
     /**
      * Get the entity that has caused knockback to the defender.
diff --git a/src/main/java/org/bukkit/event/entity/EntityKnockbackEvent.java b/src/main/java/org/bukkit/event/entity/EntityKnockbackEvent.java
index fe3374fbbfef728358e4a15bbf2deb238a1e0bfd..1d0825b730deb3d2d4bbaac8db3381d189f1317e 100644
--- a/src/main/java/org/bukkit/event/entity/EntityKnockbackEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityKnockbackEvent.java
@@ -25,13 +25,26 @@ public class EntityKnockbackEvent extends EntityEvent implements Cancellable {
     private boolean cancelled;
 
     public EntityKnockbackEvent(@NotNull final LivingEntity entity, @NotNull final KnockbackCause cause, final double force, @NotNull final Vector rawKnockback, @NotNull final Vector knockback) {
-        super(entity);
+        /* super(entity); // Canvas
 
         this.cause = cause;
         this.force = force;
         this.rawKnockback = rawKnockback;
         this.knockback = knockback;
+         */ // Canvas end
+        this(entity, cause, force, rawKnockback, knockback, false);
     }
+    // Canvas start
+
+    public EntityKnockbackEvent(@NotNull final LivingEntity entity, @NotNull final KnockbackCause cause, final double force, @NotNull final Vector rawKnockback, @NotNull final Vector knockback, boolean async) {
+        super(entity, async);
+
+        this.cause = cause;
+        this.force = force;
+        this.rawKnockback = rawKnockback;
+        this.knockback = knockback;
+    }
+    // Canvas end
 
     @NotNull
     @Override
diff --git a/src/main/java/org/purpurmc/purpur/event/entity/PreEntityExplodeEvent.java b/src/main/java/org/purpurmc/purpur/event/entity/PreEntityExplodeEvent.java
index 2d4f68228861492baaea0bcc604dfef623b337ba..24f3dfb58c69cf6e1b800d242583e0e945180831 100644
--- a/src/main/java/org/purpurmc/purpur/event/entity/PreEntityExplodeEvent.java
+++ b/src/main/java/org/purpurmc/purpur/event/entity/PreEntityExplodeEvent.java
@@ -17,11 +17,23 @@ public class PreEntityExplodeEvent extends EntityExplodeEvent implements Cancell
     private final Location location;
 
     public PreEntityExplodeEvent(@NotNull org.bukkit.entity.Entity what, @NotNull final Location location, final float yield) {
+        /* // Canvas
         super(what, location, Collections.emptyList(), yield);
         this.cancelled = false;
         this.yield = yield;
         this.location = location;
+        */ // Canvas
+        this(what, location, yield, false);
     }
+    // Canvas start
+
+    public PreEntityExplodeEvent(@NotNull org.bukkit.entity.Entity what, @NotNull final Location location, final float yield, boolean async) {
+        super(what, location, Collections.emptyList(), yield, async);
+        this.cancelled = false;
+        this.yield = yield;
+        this.location = location;
+    }
+    // Canvas end
 
     /**
      * Returns the percentage of blocks to drop from this explosion
