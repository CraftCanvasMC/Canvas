From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris MC <purplewolf.mc1@gmail.com>
Date: Fri, 17 Nov 2023 20:58:12 +0000
Subject: [PATCH] Add gamemode syncing api


diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 8a6398e25c3a4d78e3ba4363cebaaba704fec7d3..976d3839cea287b955880982f6b68ebcec013025 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -772,6 +772,41 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * Stop all sounds from playing.
      */
     public void stopAllSounds();
+    // Canvas start - more player api
+
+    /**
+     * This javadoc is for context of the CLIENT+SERVER gamemode methods
+     * The server is the dataholder of the world and can create how the
+     * data operates, thus meaning that the gamemodes can go out of sync
+     * from eachother, allowing for insane effects like having Spectator
+     * clipping while appearing to be in Creative mode.
+     * 
+     * Sets the CLIENT gamemode
+     * This controls what the Player sees
+     * 
+     * @param gamemode
+     */
+    public void setClientGamemode(GameMode gamemode);
+
+    /**
+     * This javadoc is for context of the CLIENT+SERVER gamemode methods
+     * The server is the dataholder of the world and can create how the
+     * data operates, thus meaning that the gamemodes can go out of sync
+     * from eachother, allowing for insane effects like having Spectator
+     * clipping while appearing to be in Creative mode.
+     * 
+     * Sets the SERVER gamemode
+     * This is the side that controls what the Player can do
+     * 
+     * @param gamemode
+     */
+    public void setServerGamemode(GameMode gamemode);
+
+    /**
+     * Resyncs the gamemode from the SERVER side gamemode
+     */
+    public void resyncGamemode();
+    // Canvas end
 
     /**
      * Plays an effect to just this player.
