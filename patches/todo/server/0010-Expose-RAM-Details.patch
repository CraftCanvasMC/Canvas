From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PurpleWolfMC <159172167+PurpleWolfMC@users.noreply.github.com>
Date: Thu, 25 Apr 2024 09:25:53 +0000
Subject: [PATCH] Expose RAM Details


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index d49ebc818d54d4587cbfab9692f0f79008ae84b5..56b6a8aedff5e83ca79aebd8857bd2392d8d87a8 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1,5 +1,7 @@
 package org.bukkit.craftbukkit;
 
+import me.dueris.canvas.CanvasConfig;
+import me.dueris.canvas.CraftServerGui;
 import com.google.common.base.Charsets;
 import com.google.common.base.Function;
 import com.google.common.base.Preconditions;
@@ -257,6 +259,7 @@ import org.bukkit.scoreboard.Criteria;
 import org.bukkit.structure.StructureManager;
 import org.bukkit.util.StringUtil;
 import org.bukkit.util.permissions.DefaultPermissions;
+import org.jetbrains.annotations.NotNull;
 import org.yaml.snakeyaml.LoaderOptions;
 import org.yaml.snakeyaml.Yaml;
 import org.yaml.snakeyaml.constructor.SafeConstructor;
@@ -665,6 +668,38 @@ public final class CraftServer implements Server {
         return this.serverName;
     }
 
+    // Canvas start
+    @Override
+    public @NotNull CraftServerGui getServerGui() {
+        return this.console.getGui();
+    }
+
+    public net.minecraft.server.gui.MinecraftServerGui getGuiHandle(){
+        return this.console.getGui();
+    }
+
+    public long getResourcesTotal(){
+        return this.getGuiHandle().getGuiStatsComponent().getRamDetails().getGraphData().getTotal();
+    }
+
+    public long getResourcesFree(){
+        return this.getGuiHandle().getGuiStatsComponent().getRamDetails().getGraphData().getFree();
+    }
+
+    public long getResourcesMax(){
+        return this.getGuiHandle().getGuiStatsComponent().getRamDetails().getGraphData().getMax();
+    }
+
+    public long getResourcesUsedMem(){
+        return this.getGuiHandle().getGuiStatsComponent().getRamDetails().getGraphData().getUsedMem();
+    }
+
+    public int getResourcesUsedPercent(){
+        return this.getGuiHandle().getGuiStatsComponent().getRamDetails().getGraphData().getUsedPercent();
+    }
+
+    // Canvas end
+
     @Override
     public String getVersion() {
         return this.serverVersion + " (MC: " + this.console.getServerVersion() + ")";
