--- a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftAsyncScheduler.java
+++ b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftAsyncScheduler.java
@@ -25,12 +_,14 @@
 
 import com.destroystokyo.paper.ServerSchedulerReportingWrapper;
 import com.google.common.util.concurrent.ThreadFactoryBuilder;
+import io.canvasmc.canvas.Config;
 import org.bukkit.plugin.Plugin;
 
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import java.util.concurrent.Executor;
+import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.SynchronousQueue;
 import java.util.concurrent.ThreadPoolExecutor;
@@ -38,7 +_,11 @@
 
 public class CraftAsyncScheduler extends CraftScheduler {
 
-    private final ThreadPoolExecutor executor = new ThreadPoolExecutor(
+    // Canvas start
+    private final ExecutorService executor = Config.INSTANCE.virtualThreads.shouldReplaceBukkitScheduler() ?
+        Executors.newVirtualThreadPerTaskExecutor() :
+        new ThreadPoolExecutor(
+    // Canvas end
             4, Integer.MAX_VALUE,30L, TimeUnit.SECONDS, new SynchronousQueue<>(),
             new ThreadFactoryBuilder().setNameFormat("Craft Scheduler Thread - %1$d").build());
     private final Executor management = Executors.newSingleThreadExecutor(new ThreadFactoryBuilder()
@@ -47,8 +_,12 @@
 
     CraftAsyncScheduler() {
         super(true);
-        executor.allowCoreThreadTimeOut(true);
-        executor.prestartAllCoreThreads();
+        // Canvas start
+        if (!Config.INSTANCE.virtualThreads.shouldReplaceBukkitScheduler()) {
+            ((ThreadPoolExecutor) executor).allowCoreThreadTimeOut(true);
+            ((ThreadPoolExecutor) executor).prestartAllCoreThreads();
+        }
+        // Canvas end
     }
 
     @Override
