--- a/src/main/java/ca/spottedleaf/moonrise/common/misc/Delayed26WayDistancePropagator3D.java
+++ b/src/main/java/ca/spottedleaf/moonrise/common/misc/Delayed26WayDistancePropagator3D.java
@@ -94,24 +_,24 @@
 
     protected final void addToIncreaseWorkQueue(final long coordinate, final byte level) {
         final Delayed8WayDistancePropagator2D.WorkQueue queue = this.levelIncreaseWorkQueues[level];
-        queue.queuedCoordinates.enqueue(coordinate);
-        queue.queuedLevels.enqueue(level);
+        queue.queuedCoordinates.add(coordinate); // Canvas
+        queue.queuedLevels.add(level); // Canvas
 
         this.levelIncreaseWorkQueueBitset |= (1L << level);
     }
 
     protected final void addToIncreaseWorkQueue(final long coordinate, final byte index, final byte level) {
         final Delayed8WayDistancePropagator2D.WorkQueue queue = this.levelIncreaseWorkQueues[index];
-        queue.queuedCoordinates.enqueue(coordinate);
-        queue.queuedLevels.enqueue(level);
+        queue.queuedCoordinates.add(coordinate); // Canvas
+        queue.queuedLevels.add(level); // Canvas
 
         this.levelIncreaseWorkQueueBitset |= (1L << index);
     }
 
     protected final void addToRemoveWorkQueue(final long coordinate, final byte level) {
         final Delayed8WayDistancePropagator2D.WorkQueue queue = this.levelRemoveWorkQueues[level];
-        queue.queuedCoordinates.enqueue(coordinate);
-        queue.queuedLevels.enqueue(level);
+        queue.queuedCoordinates.add(coordinate); // Canvas
+        queue.queuedLevels.add(level); // Canvas
 
         this.levelRemoveWorkQueueBitset |= (1L << level);
     }
@@ -164,8 +_,8 @@
 
             final Delayed8WayDistancePropagator2D.WorkQueue queue = this.levelIncreaseWorkQueues[queueIndex];
             while (!queue.queuedLevels.isEmpty()) {
-                final long coordinate = queue.queuedCoordinates.removeFirstLong();
-                byte level = queue.queuedLevels.removeFirstByte();
+                final long coordinate = queue.queuedCoordinates.removeFirst(); // Canvas
+                byte level = queue.queuedLevels.removeFirst(); // Canvas
 
                 final boolean neighbourCheck = level < 0;
 
@@ -233,8 +_,8 @@
 
             final Delayed8WayDistancePropagator2D.WorkQueue queue = this.levelRemoveWorkQueues[queueIndex];
             while (!queue.queuedLevels.isEmpty()) {
-                final long coordinate = queue.queuedCoordinates.removeFirstLong();
-                final byte level = queue.queuedLevels.removeFirstByte();
+                final long coordinate = queue.queuedCoordinates.removeFirst(); // Canvas
+                final byte level = queue.queuedLevels.removeFirst(); // Canvas
 
                 final byte currentLevel = this.levels.removeIfGreaterOrEqual(coordinate, level);
                 if (currentLevel == 0) {
