--- a/src/main/java/io/papermc/paper/threadedregions/EntityScheduler.java
+++ b/src/main/java/io/papermc/paper/threadedregions/EntityScheduler.java
@@ -45,6 +_,7 @@
     private final Long2ObjectOpenHashMap<List<ScheduledTask>> oneTimeDelayed = new Long2ObjectOpenHashMap<>();
 
     private final ArrayDeque<ScheduledTask> currentlyExecuting = new ArrayDeque<>();
+    public volatile boolean retired = false; // Canvas
 
     public EntityScheduler(final CraftEntity entity) {
         this.entity = Validate.notNull(entity);
@@ -63,6 +_,7 @@
     public void retire() {
         synchronized (this.stateLock) {
             if (this.tickCount == RETIRED_TICK_COUNT) {
+                this.retired = true;
                 throw new IllegalStateException("Already retired");
             }
             this.tickCount = RETIRED_TICK_COUNT;
