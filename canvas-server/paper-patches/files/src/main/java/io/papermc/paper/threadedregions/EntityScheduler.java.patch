--- a/src/main/java/io/papermc/paper/threadedregions/EntityScheduler.java
+++ b/src/main/java/io/papermc/paper/threadedregions/EntityScheduler.java
@@ -144,7 +_,7 @@
         final List<ScheduledTask> toRun;
         synchronized (this.stateLock) {
             if (this.tickCount == RETIRED_TICK_COUNT) {
-                throw new IllegalStateException("Ticking retired scheduler");
+                return; // Canvas
             }
             ++this.tickCount;
             if (this.oneTimeDelayed.isEmpty()) {
@@ -169,7 +_,7 @@
             }
             final ScheduledTask task = this.currentlyExecuting.pollFirst();
 
-            if (this.tickCount != RETIRED_TICK_COUNT) {
+            if (this.tickCount != RETIRED_TICK_COUNT && task != null) { // Canvas - ensure non null
                 ((Consumer<Entity>)task.run).accept(thisEntity);
             } else {
                 // retired synchronously
