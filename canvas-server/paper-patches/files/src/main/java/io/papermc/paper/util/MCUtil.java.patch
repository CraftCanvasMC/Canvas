--- a/src/main/java/io/papermc/paper/util/MCUtil.java
+++ b/src/main/java/io/papermc/paper/util/MCUtil.java
@@ -1,8 +_,10 @@
 package io.papermc.paper.util;
 
+import ca.spottedleaf.moonrise.common.util.TickThread;
 import com.google.common.collect.Collections2;
 import com.google.common.collect.Lists;
 import com.google.common.util.concurrent.ThreadFactoryBuilder;
+import io.canvasmc.canvas.Config;
 import io.papermc.paper.math.BlockPosition;
 import io.papermc.paper.math.FinePosition;
 import io.papermc.paper.math.Position;
@@ -37,9 +_,14 @@
             run.run();
         }
     };
-    public static final ExecutorService ASYNC_EXECUTOR = Executors.newFixedThreadPool(2, new ThreadFactoryBuilder()
+    // Canvas start
+    public static final ExecutorService ASYNC_EXECUTOR = Config.INSTANCE.virtualThreads.shouldReplaceAsyncExecutor() ?
+        Executors.newVirtualThreadPerTaskExecutor() :
+        Executors.newFixedThreadPool(2, new ThreadFactoryBuilder()
+    // Canvas end
         .setNameFormat("Paper Async Task Handler Thread - %1$d")
         .setUncaughtExceptionHandler(new net.minecraft.DefaultUncaughtExceptionHandlerWithName(MinecraftServer.LOGGER))
+            .setThreadFactory(TickThread::new) // Canvas
         .build()
     );
 
