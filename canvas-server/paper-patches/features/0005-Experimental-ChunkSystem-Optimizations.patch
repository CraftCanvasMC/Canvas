From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Sat, 18 Jan 2025 09:50:22 -0800
Subject: [PATCH] Experimental ChunkSystem Optimizations


diff --git a/src/main/java/ca/spottedleaf/moonrise/common/util/MoonriseCommon.java b/src/main/java/ca/spottedleaf/moonrise/common/util/MoonriseCommon.java
index 632920e04686d8a0fd0a60e87348be1fe7862a3c..602c554b81c336ef4bb732677fca7cada73d725e 100644
--- a/src/main/java/ca/spottedleaf/moonrise/common/util/MoonriseCommon.java
+++ b/src/main/java/ca/spottedleaf/moonrise/common/util/MoonriseCommon.java
@@ -3,6 +3,7 @@ package ca.spottedleaf.moonrise.common.util;
 import ca.spottedleaf.concurrentutil.executor.thread.PrioritisedThreadPool;
 import ca.spottedleaf.moonrise.common.PlatformHooks;
 import com.mojang.logging.LogUtils;
+import io.canvasmc.canvas.Config;
 import org.slf4j.Logger;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
@@ -54,6 +55,12 @@ public final class MoonriseCommon {
 
         final int ioThreads = Math.max(1, configIoThreads);
 
+        if (Config.INSTANCE.chunkGeneration.useAlternativeAlgorithmForChunkWorkers) {
+            // y=(-0.0001x^2)+0.8831x-5.1544
+            LOGGER.warn("This server has enabled an alternative algorithm for chunk worker counting, please be advised this is very experimental");
+            int p = Runtime.getRuntime().availableProcessors();
+            workerThreads = (int) Math.round((-0.0001 * Math.pow(p, 2)) + (0.8831 * p) - 5.1544);
+        }
         WORKER_POOL.adjustThreadCount(workerThreads);
         IO_POOL.adjustThreadCount(ioThreads);
 
