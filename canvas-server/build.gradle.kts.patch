--- a/purpur-server/build.gradle.kts
+++ b/purpur-server/build.gradle.kts
@@ -22,6 +_,7 @@
     // gitFilePatches = true
 
     val purpur = forks.register("purpur") {
+        rootDirectory = upstreamsDirectory().map { it.dir("purpur") }
         upstream.patchDir("paperServer") {
             upstreamPath = "paper-server"
             excludes = setOf("src/minecraft", "patches", "build.gradle.kts")
@@ -29,7 +_,23 @@
             outputDir = rootDirectory.dir("paper-server")
         }
     }
-    activeFork = purpur
+
+    val canvas = forks.register("canvas") {
+        forks = purpur
+        upstream.patchRepo("paperServer") {
+            upstreamRepo = purpur.patchedRepo("paperServer")
+            patchesDir = rootDirectory.dir("canvas-server/paper-patches")
+            outputDir = rootDirectory.dir("paper-server")
+        }
+        upstream.patchDir("purpurServer") {
+            upstreamPath = "purpur-server"
+            excludes = setOf("src/minecraft", "paper-patches", "minecraft-patches", "build.gradle.kts", "build.gradle.kts.patch")
+            patchesDir = rootDirectory.dir("canvas-server/purpur-patches")
+            outputDir = rootDirectory.dir("purpur-server")
+        }
+    }
+
+    activeFork = canvas
 
     spigot {
         buildDataRef = "3edaf46ec1eed4115ce1b18d2846cded42577e42"
@@ -115,10 +_,14 @@
     main {
         java { srcDir("../paper-server/src/main/java") }
         resources { srcDir("../paper-server/src/main/resources") }
+        java { srcDir("../purpur-server/src/main/java") }
+        resources { srcDir("../purpur-server/src/main/resources") }
     }
     test {
         java { srcDir("../paper-server/src/test/java") }
         resources { srcDir("../paper-server/src/test/resources") }
+        java { srcDir("../purpur-server/src/test/java") }
+        resources { srcDir("../purpur-server/src/test/resources") }
     }
 }
 
@@ -142,7 +_,15 @@
 }
 
 dependencies {
-    implementation(project(":purpur-api"))
+    // Canvas start
+    implementation(project(":canvas-api"))
+    implementation("com.ibm.async:asyncutil:0.1.0") // asyncutil
+    implementation("net.objecthunter:exp4j:0.4.8")
+    implementation("com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4.2")
+    implementation("io.reactivex.rxjava3:rxjava:3.1.8")
+    implementation("net.sf.trove4j:trove4j:3.0.3")
+    implementation("org.agrona:agrona:2.0.1")
+    // Canvas end
     implementation("ca.spottedleaf:concurrentutil:0.0.3")
     implementation("org.jline:jline-terminal-ffm:3.27.1") // use ffm on java 22+
     implementation("org.jline:jline-terminal-jni:3.27.1") // fall back to jni on java 21
@@ -163,7 +_,7 @@
     implementation("com.velocitypowered:velocity-native:3.4.0-20250222.161222-36") {
         isTransitive = false
     }
-    implementation("io.netty:netty-codec-haproxy:4.1.115.Final") // Add support for proxy protocol
+    implementation("io.netty:netty-codec-haproxy:4.1.118.Final") // Add support for proxy protocol // Canvas - bump netty
     implementation("org.apache.logging.log4j:log4j-iostreams:2.24.1")
     implementation("org.ow2.asm:asm-commons:9.7.1")
     implementation("org.spongepowered:configurate-yaml:4.2.0-20250225.064233-199")
@@ -216,18 +_,19 @@
         val gitBranch = git.exec(providers, "rev-parse", "--abbrev-ref", "HEAD").get().trim()
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Purpur", // Purpur
+            "Implementation-Title" to "Canvas", // Purpur // Canvas - Rebrand
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date,
-            "Specification-Title" to "Purpur", // Purpur
+            "Specification-Title" to "Canvas", // Purpur // Canvas - Rebrand
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Purpur Team", // Purpur
-            "Brand-Id" to "purpurmc:purpur", // Purpur
-            "Brand-Name" to "Purpur", // Purpur
+            "Specification-Vendor" to "Canvas Team", // Purpur // Canvas - Rebrand
+            "Brand-Id" to "canvasmc:canvas", // Purpur // Canvas - Rebrand
+            "Brand-Name" to "Canvas", // Purpur // Canvas - Rebrand
             "Build-Number" to (build ?: ""),
             "Build-Time" to buildTime.toString(),
             "Git-Branch" to gitBranch,
             "Git-Commit" to gitHash,
+            "Experimental" to true // Canvas - Rebrand
         )
         for (tld in setOf("net", "com", "org")) {
             attributes("$tld/bukkit", "Sealed" to true)
