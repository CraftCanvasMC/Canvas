--- a/com/mojang/brigadier/tree/CommandNode.java
+++ b/com/mojang/brigadier/tree/CommandNode.java
@@ -24,9 +_,9 @@
 import java.util.function.Predicate;
 
 public abstract class CommandNode<S> implements Comparable<CommandNode<S>> {
-    private final Map<String, CommandNode<S>> children = new LinkedHashMap<>();
-    private final Map<String, LiteralCommandNode<S>> literals = new LinkedHashMap<>();
-    private final Map<String, ArgumentCommandNode<S, ?>> arguments = new LinkedHashMap<>();
+    private final Map<String, CommandNode<S>> children = Collections.synchronizedMap(new LinkedHashMap<>()); // Canvas - synchronized
+    private final Map<String, LiteralCommandNode<S>> literals = Collections.synchronizedMap(new LinkedHashMap<>()); // Canvas - synchronized
+    private final Map<String, ArgumentCommandNode<S, ?>> arguments = Collections.synchronizedMap(new LinkedHashMap<>()); // Canvas - synchronized
     public Predicate<S> requirement; // Paper - public-f
     private final CommandNode<S> redirect;
     private final RedirectModifier<S> modifier;
