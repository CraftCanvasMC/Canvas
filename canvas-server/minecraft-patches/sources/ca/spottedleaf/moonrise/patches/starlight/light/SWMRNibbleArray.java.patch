--- a/ca/spottedleaf/moonrise/patches/starlight/light/SWMRNibbleArray.java
+++ b/ca/spottedleaf/moonrise/patches/starlight/light/SWMRNibbleArray.java
@@ -325,31 +_,35 @@
     }
 
     // operation type: updating
-    public boolean updateVisible() {
+    public synchronized boolean updateVisible() {
         if (!this.isDirty()) {
             return false;
         }
 
-        synchronized (this) {
-            if (this.stateUpdating == INIT_STATE_NULL || this.stateUpdating == INIT_STATE_UNINIT) {
+        final int localState = this.stateUpdating;
+        final byte[] localStorage = this.storageUpdating;
+
+        if (localState == INIT_STATE_NULL || localState == INIT_STATE_UNINIT) {
+            this.storageVisible = null;
+        } else {
+            if (localStorage == null) {
                 this.storageVisible = null;
             } else {
                 if (this.storageVisible == null) {
-                    this.storageVisible = this.storageUpdating.clone();
+                    this.storageVisible = localStorage.clone();
                 } else {
-                    if (this.storageUpdating != this.storageVisible) {
-                        System.arraycopy(this.storageUpdating, 0, this.storageVisible, 0, ARRAY_SIZE);
-                    }
+                    System.arraycopy(localStorage, 0, this.storageVisible, 0, ARRAY_SIZE);
                 }
 
-                if (this.storageUpdating != this.storageVisible) {
-                    freeBytes(this.storageUpdating);
+                if (localStorage != this.storageVisible) {
+                    freeBytes(localStorage);
                 }
-                this.storageUpdating = this.storageVisible;
             }
-            this.updatingDirty = false;
-            this.stateVisible = this.stateUpdating;
         }
+
+        this.storageUpdating = this.storageVisible;
+        this.updatingDirty = false;
+        this.stateVisible = localState;
 
         return true;
     }
