--- a/ca/spottedleaf/moonrise/patches/chunk_system/level/entity/EntityLookup.java
+++ b/ca/spottedleaf/moonrise/patches/chunk_system/level/entity/EntityLookup.java
@@ -398,6 +_,7 @@
     }
 
     protected boolean addEntity(final Entity entity, final boolean fromDisk, final boolean event) {
+        synchronized (((net.minecraft.server.level.ServerLevel) entity.level()).entityLevelCallbackLock) { // Canvas - sync-lock
         final BlockPos pos = entity.blockPosition();
         final int sectionX = pos.getX() >> 4;
         final int sectionY = Mth.clamp(pos.getY() >> 4, WorldUtil.getMinSection(this.world), WorldUtil.getMaxSection(this.world));
@@ -447,6 +_,7 @@
         this.entityStatusChange(entity, slices, Visibility.HIDDEN, getEntityStatus(entity), false, !fromDisk, false);
 
         return true;
+        } // Canvas - sync-lock
     }
 
     public boolean canRemoveEntity(final Entity entity) {
@@ -961,6 +_,7 @@
         @Override
         public void onMove() {
             final Entity entity = this.entity;
+            synchronized (((net.minecraft.server.level.ServerLevel) entity.level()).entityLevelCallbackLock) { // Canvas - sync-lock
             final Visibility oldVisibility = getEntityStatus(entity);
             final ChunkEntitySlices newSlices = EntityLookup.this.moveEntity(this.entity);
             if (newSlices == null) {
@@ -971,11 +_,13 @@
             final Visibility newVisibility = getEntityStatus(entity);
 
             EntityLookup.this.entityStatusChange(entity, newSlices, oldVisibility, newVisibility, true, false, false);
+            } // Canvas - sync-lock
         }
 
         @Override
         public void onRemove(final Entity.RemovalReason reason) {
             final Entity entity = this.entity;
+            synchronized (((net.minecraft.server.level.ServerLevel) entity.level()).entityLevelCallbackLock) { // Canvas - sync-lock
             EntityLookup.this.checkThread(entity, "Cannot remove entity off-main");
             final Visibility tickingState = EntityLookup.getEntityStatus(entity);
 
@@ -986,6 +_,7 @@
             EntityLookup.this.removeEntityCallback(entity);
 
             this.entity.setLevelCallback(NoOpCallback.INSTANCE);
+            } // Canvas - sync-lock
         }
     }
 
