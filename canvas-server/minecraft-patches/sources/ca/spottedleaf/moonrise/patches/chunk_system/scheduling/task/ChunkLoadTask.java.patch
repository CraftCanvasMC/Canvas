--- a/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/task/ChunkLoadTask.java
+++ b/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/task/ChunkLoadTask.java
@@ -11,6 +_,7 @@
 import ca.spottedleaf.moonrise.patches.chunk_system.level.poi.PoiChunk;
 import ca.spottedleaf.moonrise.patches.chunk_system.scheduling.ChunkTaskScheduler;
 import ca.spottedleaf.moonrise.patches.chunk_system.scheduling.NewChunkHolder;
+import io.canvasmc.canvas.server.chunk.ChunkPriorityManager;
 import net.minecraft.core.registries.Registries;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.server.level.ServerLevel;
@@ -195,16 +_,16 @@
     public void setPriority(final Priority priority) {
         final EntityDataLoadTask entityLoad = this.chunkHolder.getEntityDataLoadTask();
         if (entityLoad != null) {
-            entityLoad.setPriority(priority);
+            entityLoad.setPriority(this.world.getPriorityManager().getPriority(chunkX, chunkZ, ChunkPriorityManager.TaskType.LOAD)); // Canvas - optimize moonrise
         }
 
         final PoiDataLoadTask poiLoad = this.chunkHolder.getPoiDataLoadTask();
 
         if (poiLoad != null) {
-            poiLoad.setPriority(priority);
+            poiLoad.setPriority(this.world.getPriorityManager().getPriority(chunkX, chunkZ, ChunkPriorityManager.TaskType.LOAD)); // Canvas - optimize moonrise
         }
 
-        this.loadTask.setPriority(priority);
+        this.loadTask.setPriority(this.world.getPriorityManager().getPriority(chunkX, chunkZ, ChunkPriorityManager.TaskType.LOAD)); // Canvas - optimize moonrise
     }
 
     @Override
@@ -294,7 +_,7 @@
 
         @Override
         protected PrioritisedExecutor.PrioritisedTask createOffMain(final Runnable run, final Priority priority) {
-            return this.scheduler.loadExecutor.createTask(run, priority);
+            return this.scheduler.loadExecutor.createTask(run, this.world.getPriorityManager().getPriority(chunkX, chunkZ, ChunkPriorityManager.TaskType.LOAD)); // Canvas - optimize moonrise
         }
 
         @Override
@@ -391,7 +_,7 @@
 
         @Override
         protected PrioritisedExecutor.PrioritisedTask createOffMain(final Runnable run, final Priority priority) {
-            return this.scheduler.loadExecutor.createTask(run, priority);
+            return this.scheduler.loadExecutor.createTask(run, this.world.getPriorityManager().getPriority(chunkX, chunkZ, ChunkPriorityManager.TaskType.LOAD)); // Canvas - optimize moonrise
         }
 
         @Override
@@ -453,7 +_,7 @@
 
         @Override
         protected PrioritisedExecutor.PrioritisedTask createOffMain(final Runnable run, final Priority priority) {
-            return this.scheduler.loadExecutor.createTask(run, priority);
+            return this.scheduler.loadExecutor.createTask(run, this.world.getPriorityManager().getPriority(chunkX, chunkZ, ChunkPriorityManager.TaskType.LOAD)); // Canvas - optimize moonrise
         }
 
         @Override
