--- a/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/task/ChunkLoadTask.java
+++ b/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/task/ChunkLoadTask.java
@@ -55,8 +_,8 @@
     private void tryCompleteLoad() {
         final int count = this.taskCountToComplete.decrementAndGet();
         if (count == 0) {
-            final GenericDataLoadTask.TaskResult<ChunkAccess, Throwable> result = this.cancelled ? null : this.loadResult; // only after the getAndDecrement
-            ChunkLoadTask.this.complete(result == null ? null : result.left(), result == null ? null : result.right());
+            final GenericDataLoadTask.TaskResult<?, Throwable> result = this.cancelled ? null : this.loadResult; // only after the getAndDecrement // Canvas - off main
+            ChunkLoadTask.this.complete(result == null ? null : (result.left() instanceof ReadChunk readChunk ? readChunk.protoChunk : (ChunkAccess) result.left()), result == null ? null : result.right()); // Canvas - off main
         } else if (count < 0) {
             throw new IllegalStateException("Called tryCompleteLoad() too many times");
         }
@@ -289,7 +_,7 @@
 
         @Override
         protected boolean hasOnMain() {
-            return true;
+            return false; // Canvas - make async
         }
 
         @Override
