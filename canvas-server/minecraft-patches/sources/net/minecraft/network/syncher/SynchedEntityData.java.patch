--- a/net/minecraft/network/syncher/SynchedEntityData.java
+++ b/net/minecraft/network/syncher/SynchedEntityData.java
@@ -4,6 +_,7 @@
 import io.netty.handler.codec.DecoderException;
 import io.netty.handler.codec.EncoderException;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import java.util.Locale;
 import java.util.Objects;
@@ -84,7 +_,7 @@
             return null;
         } else {
             this.isDirty = false;
-            List<SynchedEntityData.DataValue<?>> list = new ArrayList<>();
+            List<SynchedEntityData.DataValue<?>> list = Collections.synchronizedList(new ArrayList<>()); // Canvas - synchronized
 
             for (SynchedEntityData.DataItem<?> dataItem : this.itemsById) {
                 if (dataItem.isDirty()) {
@@ -104,7 +_,7 @@
         for (SynchedEntityData.DataItem<?> dataItem : this.itemsById) {
             if (!dataItem.isSetToDefault()) {
                 if (list == null) {
-                    list = new ArrayList<>();
+                    list = Collections.synchronizedList(new ArrayList<>()); // Canvas - synchronized
                 }
 
                 list.add(dataItem.value());
@@ -181,7 +_,7 @@
     // We need to pack all as we cannot rely on "non default values" or "dirty" ones.
     // Because these values can possibly be desynced on the client.
     public List<SynchedEntityData.DataValue<?>> packAll() {
-        final List<SynchedEntityData.DataValue<?>> list = new ArrayList<>(this.itemsById.length);
+        final List<SynchedEntityData.DataValue<?>> list = Collections.synchronizedList(new ArrayList<>(this.itemsById.length)); // Canvas - synchronized
         for (final DataItem<?> dataItem : this.itemsById) {
             list.add(dataItem.value());
         }
