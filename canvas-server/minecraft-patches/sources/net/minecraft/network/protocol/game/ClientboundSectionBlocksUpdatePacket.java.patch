--- a/net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket.java
+++ b/net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket.java
@@ -1,6 +_,8 @@
 package net.minecraft.network.protocol.game;
 
+import it.unimi.dsi.fastutil.shorts.ShortArraySet;
 import it.unimi.dsi.fastutil.shorts.ShortSet;
+import java.util.Set;
 import java.util.function.BiConsumer;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.SectionPos;
@@ -18,17 +_,17 @@
     );
     private static final int POS_IN_SECTION_BITS = 12;
     private final SectionPos sectionPos;
-    private final short[] positions;
+    private final Short[] positions; // Canvas
     private final BlockState[] states;
 
     public ClientboundSectionBlocksUpdatePacket(SectionPos sectionPos, ShortSet positions, LevelChunkSection section) {
         this.sectionPos = sectionPos;
         int size = positions.size();
-        this.positions = new short[size];
+        this.positions = new Short[size]; // Canvas
         this.states = new BlockState[size];
         int i = 0;
 
-        for (short s : positions) {
+        for (short s : new ShortArraySet(positions)) { // Canvas
             this.positions[i] = s;
             this.states[i] = (section != null) ? section.getBlockState(SectionPos.sectionRelativeX(s), SectionPos.sectionRelativeY(s), SectionPos.sectionRelativeZ(s)) : net.minecraft.world.level.block.Blocks.AIR.defaultBlockState(); // CraftBukkit - SPIGOT-6076, Mojang bug when empty chunk section notified
             i++;
@@ -37,14 +_,14 @@
     // CraftBukkit start - Add constructor
     public ClientboundSectionBlocksUpdatePacket(SectionPos sectionposition, ShortSet shortset, BlockState[] states) {
         this.sectionPos = sectionposition;
-        this.positions = shortset.toShortArray();
+        this.positions = shortset.toArray(new Short[0]); // Canvas
         this.states = states;
     }
     // CraftBukkit end
     // Paper start - Multi Block Change API
-    public ClientboundSectionBlocksUpdatePacket(SectionPos sectionPos, it.unimi.dsi.fastutil.shorts.Short2ObjectMap<BlockState> blockChanges) {
+    public ClientboundSectionBlocksUpdatePacket(SectionPos sectionPos, java.util.Map<Short, BlockState> blockChanges) { // Canvas
         this.sectionPos = sectionPos;
-        this.positions = blockChanges.keySet().toShortArray();
+        this.positions = blockChanges.keySet().toArray(new Short[0]); // Canvas
         this.states = blockChanges.values().toArray(new BlockState[0]);
     }
     // Paper end - Multi Block Change API
@@ -53,7 +_,7 @@
     private ClientboundSectionBlocksUpdatePacket(FriendlyByteBuf buffer) {
         this.sectionPos = SectionPos.of(buffer.readLong());
         int varInt = buffer.readVarInt();
-        this.positions = new short[varInt];
+        this.positions = new Short[varInt]; // Canvas
         this.states = new BlockState[varInt];
 
         for (int i = 0; i < varInt; i++) {
