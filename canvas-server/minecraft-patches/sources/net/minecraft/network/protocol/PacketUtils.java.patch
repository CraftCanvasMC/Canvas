--- a/net/minecraft/network/protocol/PacketUtils.java
+++ b/net/minecraft/network/protocol/PacketUtils.java
@@ -2,11 +_,14 @@
 
 import com.mojang.logging.LogUtils;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.server.network.PlayerJoinThread;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
 import net.minecraft.network.PacketListener;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.RunningOnDifferentThreadException;
+import net.minecraft.server.TickTask;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.util.thread.BlockableEventLoop;
 import org.slf4j.Logger;
@@ -14,12 +_,10 @@
 public class PacketUtils {
     private static final Logger LOGGER = LogUtils.getLogger();
 
-    public static <T extends PacketListener> void ensureRunningOnSameThread(Packet<T> packet, T processor, ServerLevel level) throws RunningOnDifferentThreadException {
-        ensureRunningOnSameThread(packet, processor, level.getServer());
-    }
-
-    public static <T extends PacketListener> void ensureRunningOnSameThread(Packet<T> packet, T processor, BlockableEventLoop<?> executor) throws RunningOnDifferentThreadException {
-        if (!executor.isSameThread()) {
+    // Canvas start
+    public static <T extends PacketListener> void ensureRunningOnSameThread(Packet<T> packet, T processor, BlockableEventLoop<TickTask> executor) throws RunningOnDifferentThreadException {
+        if (!MinecraftServer.getServer().isSameThread()) { // Run on main
+    // Canvas end
             executor.executeIfPossible(() -> {
                 packetProcessing.push(processor); // Paper - detailed watchdog information
                 try { // Paper - detailed watchdog information
