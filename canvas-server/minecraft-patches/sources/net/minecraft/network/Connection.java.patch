--- a/net/minecraft/network/Connection.java
+++ b/net/minecraft/network/Connection.java
@@ -4,6 +_,7 @@
 import com.google.common.collect.Queues;
 import com.google.common.util.concurrent.ThreadFactoryBuilder;
 import com.mojang.logging.LogUtils;
+import io.canvasmc.canvas.server.network.ConnectionHandlePhases;
 import io.netty.bootstrap.Bootstrap;
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelException;
@@ -58,7 +_,9 @@
 import net.minecraft.network.protocol.login.LoginProtocols;
 import net.minecraft.network.protocol.status.ClientStatusPacketListener;
 import net.minecraft.network.protocol.status.StatusProtocols;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.RunningOnDifferentThreadException;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.util.Mth;
 import net.minecraft.util.debugchart.LocalSampleLogger;
 import org.apache.commons.lang3.Validate;
@@ -861,6 +_,7 @@
     }
 
     public void handleDisconnection() {
+        MinecraftServer.getServer().connectionPool.disconnect(this); // Canvas - Threaded Dimensions
         if (this.channel != null && !this.channel.isOpen()) {
             if (this.disconnectionHandled) {
                 // LOGGER.warn("handleDisconnection() called twice"); // Paper - Don't log useless message
@@ -923,6 +_,24 @@
         }
         this.pendingActions.clear();
     }
+    // Canvas start - async player joining
+    private final Object lockObject = new Object();
+    private volatile ConnectionHandlePhases phase = ConnectionHandlePhases.JOIN;
+
+    public void setPhase(ConnectionHandlePhases phase) {
+        synchronized (lockObject) {
+            this.phase = phase;
+        }
+    }
+
+    public ConnectionHandlePhases getPhase() {
+        ConnectionHandlePhases phase;
+        synchronized (lockObject) {
+            phase = this.phase;
+        }
+        return phase;
+    }
+    // Canvas end
 
     private static class InnerUtil { // Attempt to hide these methods from ProtocolLib, so it doesn't accidently pick them up.
 
