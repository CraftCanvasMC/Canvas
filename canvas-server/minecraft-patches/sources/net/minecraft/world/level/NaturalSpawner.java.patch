--- a/net/minecraft/world/level/NaturalSpawner.java
+++ b/net/minecraft/world/level/NaturalSpawner.java
@@ -18,6 +_,7 @@
 import net.minecraft.core.registries.BuiltInRegistries;
 import net.minecraft.core.registries.Registries;
 import net.minecraft.server.level.ServerLevel;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.tags.BiomeTags;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.util.Mth;
@@ -137,7 +_,7 @@
             int limit = mobCategory.getMaxInstancesPerChunk();
             SpawnCategory spawnCategory = CraftSpawnCategory.toBukkit(mobCategory);
             if (CraftSpawnCategory.isValidForLimits(spawnCategory)) {
-                spawnThisTick = level.ticksPerSpawnCategory.getLong(spawnCategory) != 0 && worlddata.getGameTime() % level.ticksPerSpawnCategory.getLong(spawnCategory) == 0;
+                spawnThisTick = level.ticksPerSpawnCategory.getLong(spawnCategory) != 0 && level.getRedstoneGameTime() % level.ticksPerSpawnCategory.getLong(spawnCategory) == 0; // Canvas - Threaded Regions
                 limit = level.getWorld().getSpawnLimit(spawnCategory);
             }
 
@@ -179,8 +_,12 @@
                     level.moonrise$getNearbyPlayers().getPlayers(chunk.getPos(), ca.spottedleaf.moonrise.common.misc.NearbyPlayers.NearbyMapType.TICK_VIEW_DISTANCE);
                 if (inRange != null) {
                     final net.minecraft.server.level.ServerPlayer[] backingSet = inRange.getRawDataUnchecked();
-                    for (int k = 0, len = inRange.size(); k < len; k++) {
-                        minDiff = Math.min(limit - level.getChunkSource().chunkMap.getMobCountNear(backingSet[k], mobCategory), minDiff);
+                    for (int k = 0, backingSetLength = backingSet.length; k < backingSetLength; k++) { // Canvas - use length instead of size
+                        // Canvas start - caution ref lists
+                        ServerPlayer player = backingSet[k];
+                        if (player == null) continue;
+                        minDiff = Math.min(limit - level.getChunkSource().chunkMap.getMobCountNear(player, mobCategory), minDiff);
+                        // Canvas end
                     }
                 }
 
