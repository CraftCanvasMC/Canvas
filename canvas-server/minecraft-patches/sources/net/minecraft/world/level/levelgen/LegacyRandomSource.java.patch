--- a/net/minecraft/world/level/levelgen/LegacyRandomSource.java
+++ b/net/minecraft/world/level/levelgen/LegacyRandomSource.java
@@ -30,22 +_,21 @@
 
     @Override
     public void setSeed(long seed) {
-        if (!this.seed.compareAndSet(this.seed.get(), (seed ^ 25214903917L) & 281474976710655L)) {
-            throw ThreadingDetector.makeThreadingException("LegacyRandomSource", null);
-        } else {
-            this.gaussianSource.reset();
-        }
+        this.seed.set((seed ^ 25214903917L) & 281474976710655L); // Canvas - Multithreaded Dimension Ticking
     }
 
     @Override
     public int next(int size) {
-        long l = this.seed.get();
-        long l1 = l * 25214903917L + 11L & 281474976710655L;
-        if (!this.seed.compareAndSet(l, l1)) {
-            throw ThreadingDetector.makeThreadingException("LegacyRandomSource", null);
-        } else {
-            return (int)(l1 >> 48 - size);
-        }
+        // Canvas start - Threaded Dimensions
+        long l;
+        long m;
+        do {
+            l = this.seed.get();
+            m = l * 25214903917L + 11L & 281474976710655L;
+        } while (!this.seed.compareAndSet(l, m));
+
+        return (int)(m >>> 48 - size);
+        // Canvas end
     }
 
     @Override
@@ -53,12 +_,13 @@
         return this.gaussianSource.nextGaussian();
     }
 
-    public static class LegacyPositionalRandomFactory implements PositionalRandomFactory {
-        private final long seed;
-
-        public LegacyPositionalRandomFactory(long seed) {
-            this.seed = seed;
-        }
+    // Canvas start
+    /**
+     * Made to record class
+     * @param seed Canvas - private -> public
+     */
+    public record LegacyPositionalRandomFactory(long seed) implements PositionalRandomFactory {
+    // Canvas end
 
         @Override
         public RandomSource at(int x, int y, int z) {
