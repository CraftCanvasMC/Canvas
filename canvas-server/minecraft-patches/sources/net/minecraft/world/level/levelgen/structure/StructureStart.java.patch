--- a/net/minecraft/world/level/levelgen/structure/StructureStart.java
+++ b/net/minecraft/world/level/levelgen/structure/StructureStart.java
@@ -2,6 +_,7 @@
 
 import com.mojang.logging.LogUtils;
 import java.util.List;
+import java.util.concurrent.atomic.AtomicInteger;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Registry;
@@ -26,7 +_,7 @@
     private final Structure structure;
     private final PiecesContainer pieceContainer;
     private final ChunkPos chunkPos;
-    private int references;
+    private final AtomicInteger references = new AtomicInteger();
     @Nullable
     private volatile BoundingBox cachedBoundingBox;
 
@@ -39,7 +_,7 @@
     public StructureStart(Structure structure, ChunkPos chunkPos, int references, PiecesContainer pieceContainer) {
         this.structure = structure;
         this.chunkPos = chunkPos;
-        this.references = references;
+        this.references.set(references);
         this.pieceContainer = pieceContainer;
     }
 
@@ -126,7 +_,7 @@
             compoundTag.putString("id", context.registryAccess().lookupOrThrow(Registries.STRUCTURE).getKey(this.structure).toString());
             compoundTag.putInt("ChunkX", chunkPos.x);
             compoundTag.putInt("ChunkZ", chunkPos.z);
-            compoundTag.putInt("references", this.references);
+            compoundTag.putInt("references", this.references.get());
             compoundTag.put("Children", this.pieceContainer.save(context));
             return compoundTag;
         } else {
@@ -144,15 +_,15 @@
     }
 
     public boolean canBeReferenced() {
-        return this.references < this.getMaxReferences();
+        return this.references.get() < this.getMaxReferences();
     }
 
     public void addReference() {
-        this.references++;
+        this.references.getAndIncrement();
     }
 
     public int getReferences() {
-        return this.references;
+        return this.references.get();
     }
 
     protected int getMaxReferences() {
