--- a/net/minecraft/world/level/ChunkPos.java
+++ b/net/minecraft/world/level/ChunkPos.java
@@ -68,6 +_,20 @@
         this.z = (int)(packedPos >> 32);
         this.longKey = asLong(this.x, this.z); // Paper
     }
+    // Canvas start
+
+    public Stream<ChunkPos> adjacentChunks() {
+        return Stream.of(
+            new ChunkPos(x - 1, z - 1), new ChunkPos(x, z - 1), new ChunkPos(x + 1, z - 1),
+            new ChunkPos(x - 1, z), new ChunkPos(x + 1, z),
+            new ChunkPos(x - 1, z + 1), new ChunkPos(x, z + 1), new ChunkPos(x + 1, z + 1)
+        ).filter(chunk -> isAdjacent(chunk.x - x, chunk.z - z));
+    }
+
+    public boolean isAdjacent(int dx, int dz) {
+        return dx == -1 && dz == -1 || dx == 0 && dz == -1 || dx == 1 && dz == -1 || dx == -1 && dz == 0 || dx == 1 && dz == 0 || dx == -1 && dz == 1 || dx == 0 && dz == 1 || dx == 1 && dz == 1;
+    }
+    // Canvas end
 
     public static ChunkPos minFromRegion(int chunkX, int chunkZ) {
         return new ChunkPos(chunkX << 5, chunkZ << 5);
