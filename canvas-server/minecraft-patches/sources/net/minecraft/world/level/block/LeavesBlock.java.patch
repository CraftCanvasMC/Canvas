--- a/net/minecraft/world/level/block/LeavesBlock.java
+++ b/net/minecraft/world/level/block/LeavesBlock.java
@@ -2,6 +_,7 @@
 
 import com.mojang.serialization.MapCodec;
 import java.util.OptionalInt;
+import io.canvasmc.canvas.Config;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.particles.ParticleTypes;
@@ -77,12 +_,32 @@
     }
 
     protected boolean decaying(BlockState state) {
-        return !state.getValue(PERSISTENT) && state.getValue(DISTANCE) == 7;
+        return !Config.INSTANCE.disableLeafDecay && !state.getValue(PERSISTENT) && state.getValue(DISTANCE) == 7; // Canvas - disable leaf decay
     }
 
     @Override
     protected void tick(BlockState state, ServerLevel level, BlockPos pos, RandomSource random) {
-        level.setBlock(pos, updateDistance(state, level, pos), 3);
+        // Canvas start - dont set the block if it doesnt need to
+        // leaf decay config
+        if (Config.INSTANCE.disableLeafDecay) {
+            return;
+        }
+        int newValue = 7;
+        int oldValue = state.getValue(DISTANCE);
+        BlockPos.MutableBlockPos mutable = new BlockPos.MutableBlockPos();
+
+        for (Direction direction : Direction.values()) {
+            mutable.setWithOffset(pos, direction);
+            newValue = Math.min(newValue, getDistanceAt(level.getBlockState(mutable)) + 1);
+            if (newValue == 1) {
+                break;
+            }
+        }
+
+        if (newValue != oldValue) {
+            level.setBlock(pos, state.setValue(DISTANCE, newValue), 3);
+        }
+        // Canvas end
     }
 
     @Override
