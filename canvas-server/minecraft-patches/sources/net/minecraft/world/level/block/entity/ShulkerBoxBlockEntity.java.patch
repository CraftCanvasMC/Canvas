--- a/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
@@ -3,6 +_,7 @@
 import java.util.List;
 import java.util.stream.IntStream;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.entity.SleepingBlockEntity;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.HolderLookup;
@@ -27,12 +_,13 @@
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.ShulkerBoxBlock;
 import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.chunk.LevelChunk;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.material.PushReaction;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 
-public class ShulkerBoxBlockEntity extends RandomizableContainerBlockEntity implements WorldlyContainer {
+public class ShulkerBoxBlockEntity extends RandomizableContainerBlockEntity implements WorldlyContainer, SleepingBlockEntity { // Canvas
     public static final int COLUMNS = 9;
     public static final int ROWS = 3;
     public static final int CONTAINER_SIZE = 27;
@@ -48,6 +_,30 @@
     private float progressOld;
     @Nullable
     private final DyeColor color;
+    // Canvas start
+    private LevelChunk.RebindableTickingBlockEntityWrapper tickWrapper = null;
+    private TickingBlockEntity sleepingTicker = null;
+
+    @Override
+    public LevelChunk.RebindableTickingBlockEntityWrapper lithium$getTickWrapper() {
+        return tickWrapper;
+    }
+
+    @Override
+    public void lithium$setTickWrapper(LevelChunk.RebindableTickingBlockEntityWrapper tickWrapper) {
+        this.tickWrapper = tickWrapper;
+    }
+
+    @Override
+    public TickingBlockEntity lithium$getSleepingTicker() {
+        return sleepingTicker;
+    }
+
+    @Override
+    public void lithium$setSleepingTicker(TickingBlockEntity sleepingTicker) {
+        this.sleepingTicker = sleepingTicker;
+    }
+    // Canvas end
 
     // CraftBukkit start - add fields and methods
     public List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<>();
@@ -91,6 +_,7 @@
     }
 
     public static void tick(Level level, BlockPos pos, BlockState state, ShulkerBoxBlockEntity blockEntity) {
+        if (blockEntity.isSleeping()) return; // Canvas - sleeping block entities
         blockEntity.updateAnimation(level, pos, state);
     }
 
@@ -129,6 +_,11 @@
                     doNeighborUpdates(level, pos, state);
                 }
         }
+        // Canvas start
+        if (this.animationStatus == ShulkerBoxBlockEntity.AnimationStatus.CLOSED && this.progressOld == 0.0f && this.progress == 0.0f) {
+            this.lithium$startSleeping();
+        }
+        // Canvas end
     }
 
     public ShulkerBoxBlockEntity.AnimationStatus getAnimationStatus() {
@@ -169,6 +_,11 @@
 
     @Override
     public boolean triggerEvent(int id, int type) {
+        // Canvas start
+        if (this.sleepingTicker != null) {
+            this.wakeUpNow();
+        }
+        // Canvas end
         if (id == 1) {
             this.openCount = type;
             if (type == 0) {
