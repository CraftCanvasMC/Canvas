--- a/net/minecraft/world/level/block/DoorBlock.java
+++ b/net/minecraft/world/level/block/DoorBlock.java
@@ -4,6 +_,7 @@
 import com.mojang.serialization.codecs.RecordCodecBuilder;
 import java.util.function.BiConsumer;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.Config;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.server.level.ServerLevel;
@@ -204,7 +_,7 @@
 
     @Override
     protected InteractionResult useWithoutItem(BlockState state, Level level, BlockPos pos, Player player, BlockHitResult hitResult) {
-        if (!this.type.canOpenByHand()) {
+        if (!Config.INSTANCE.canOpenAnyDoorWithHand && !this.type.canOpenByHand()) { // Canvas
             return InteractionResult.PASS;
         } else if (requiresRedstone(level, state, pos)) { return InteractionResult.CONSUME; // Purpur - Option to make doors require redstone
         } else {
@@ -212,6 +_,12 @@
             level.setBlock(pos, state, 10);
             this.playSound(player, level, pos, state.getValue(OPEN));
             level.gameEvent(player, this.isOpen(state) ? GameEvent.BLOCK_OPEN : GameEvent.BLOCK_CLOSE, pos);
+            // Canvas start
+            if (Config.INSTANCE.ensureCorrectDoors) {
+                final BlockState finalBlock = state;
+                level.scheduleOnMain(() -> level.setBlock(pos, finalBlock, 10));
+            }
+            // Canvas end
             return InteractionResult.SUCCESS;
         }
     }
