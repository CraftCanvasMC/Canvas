--- a/net/minecraft/world/level/biome/BiomeManager.java
+++ b/net/minecraft/world/level/biome/BiomeManager.java
@@ -1,6 +_,8 @@
 package net.minecraft.world.level.biome;
 
 import com.google.common.hash.Hashing;
+import io.canvasmc.canvas.Config;
+import io.canvasmc.canvas.util.Bindings;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Holder;
 import net.minecraft.core.QuartPos;
@@ -29,39 +_,63 @@
     }
 
     public Holder<Biome> getBiome(BlockPos pos) {
-        int i = pos.getX() - 2;
-        int i1 = pos.getY() - 2;
-        int i2 = pos.getZ() - 2;
-        int i3 = i >> 2;
-        int i4 = i1 >> 2;
-        int i5 = i2 >> 2;
-        double d = (i & 3) / 4.0;
-        double d1 = (i1 & 3) / 4.0;
-        double d2 = (i2 & 3) / 4.0;
-        int i6 = 0;
-        double d3 = Double.POSITIVE_INFINITY;
+        // Canvas start - optimize
+        if (Config.INSTANCE.chunks.nativeAccelerationEnabled) {
+            int mask = Bindings.c2me_natives_biome_access_sample(this.biomeZoomSeed, pos.getX(), pos.getY(), pos.getZ());
 
-        for (int i7 = 0; i7 < 8; i7++) {
-            boolean flag = (i7 & 4) == 0;
-            boolean flag1 = (i7 & 2) == 0;
-            boolean flag2 = (i7 & 1) == 0;
-            int i8 = flag ? i3 : i3 + 1;
-            int i9 = flag1 ? i4 : i4 + 1;
-            int i10 = flag2 ? i5 : i5 + 1;
-            double d4 = flag ? d : d - 1.0;
-            double d5 = flag1 ? d1 : d1 - 1.0;
-            double d6 = flag2 ? d2 : d2 - 1.0;
-            double fiddledDistance = getFiddledDistance(this.biomeZoomSeed, i8, i9, i10, d4, d5, d6);
-            if (d3 > fiddledDistance) {
-                i6 = i7;
-                d3 = fiddledDistance;
+            return this.noiseBiomeSource.getNoiseBiome(
+                ((pos.getX() - 2) >> 2) + ((mask & 4) != 0 ? 1 : 0),
+                ((pos.getY() - 2) >> 2) + ((mask & 2) != 0 ? 1 : 0),
+                ((pos.getZ() - 2) >> 2) + ((mask & 1) != 0 ? 1 : 0)
+            );
+        } else {
+            final int var0 = pos.getX() - 2;
+            final int var1 = pos.getY() - 2;
+            final int var2 = pos.getZ() - 2;
+            final int var3 = var0 >> 2;
+            final int var4 = var1 >> 2;
+            final int var5 = var2 >> 2;
+            final double var6 = (double) (var0 & 3) / 4.0;
+            final double var7 = (double) (var1 & 3) / 4.0;
+            final double var8 = (double) (var2 & 3) / 4.0;
+            int var9 = 0;
+            double var10 = Double.POSITIVE_INFINITY;
+            for (int var11 = 0; var11 < 8; ++var11) {
+                boolean var12 = (var11 & 4) == 0;
+                boolean var13 = (var11 & 2) == 0;
+                boolean var14 = (var11 & 1) == 0;
+                long var15 = var12 ? var3 : var3 + 1;
+                long var16 = var13 ? var4 : var4 + 1;
+                long var17 = var14 ? var5 : var5 + 1;
+                double var18 = var12 ? var6 : var6 - 1.0;
+                double var19 = var13 ? var7 : var7 - 1.0;
+                double var20 = var14 ? var8 : var8 - 1.0;
+                long var21 = this.biomeZoomSeed * (this.biomeZoomSeed * 6364136223846793005L + 1442695040888963407L) + var15;
+                var21 = var21 * (var21 * 6364136223846793005L + 1442695040888963407L) + var16;
+                var21 = var21 * (var21 * 6364136223846793005L + 1442695040888963407L) + var17;
+                var21 = var21 * (var21 * 6364136223846793005L + 1442695040888963407L) + var15;
+                var21 = var21 * (var21 * 6364136223846793005L + 1442695040888963407L) + var16;
+                var21 = var21 * (var21 * 6364136223846793005L + 1442695040888963407L) + var17;
+                double var22 = (double)((var21 >> 24) & 1023) / 1024.0;
+                double var23 = (var22 - 0.5) * 0.9;
+                var21 = var21 * (var21 * 6364136223846793005L + 1442695040888963407L) + this.biomeZoomSeed;
+                double var24 = (double)((var21 >> 24) & 1023) / 1024.0;
+                double var25 = (var24 - 0.5) * 0.9;
+                var21 = var21 * (var21 * 6364136223846793005L + 1442695040888963407L) + this.biomeZoomSeed;
+                double var26 = (double)((var21 >> 24) & 1023) / 1024.0;
+                double var27 = (var26 - 0.5) * 0.9;
+                double var28 = Mth.square(var20 + var27) + Mth.square(var19 + var25) + Mth.square(var18 + var23);
+                if (var10 > var28) {
+                    var9 = var11;
+                    var10 = var28;
+                }
             }
+            int resX = (var9 & 4) == 0 ? var3 : var3 + 1;
+            int resY = (var9 & 2) == 0 ? var4 : var4 + 1;
+            int resZ = (var9 & 1) == 0 ? var5 : var5 + 1;
+            return this.noiseBiomeSource.getNoiseBiome(resX, resY, resZ);
         }
-
-        int i7x = (i6 & 4) == 0 ? i3 : i3 + 1;
-        int i11 = (i6 & 2) == 0 ? i4 : i4 + 1;
-        int i12 = (i6 & 1) == 0 ? i5 : i5 + 1;
-        return this.noiseBiomeSource.getNoiseBiome(i7x, i11, i12);
+        // Canvas end
     }
 
     public Holder<Biome> getNoiseBiomeAtPosition(double x, double y, double z) {
