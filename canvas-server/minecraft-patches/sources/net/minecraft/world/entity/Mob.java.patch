--- a/net/minecraft/world/entity/Mob.java
+++ b/net/minecraft/world/entity/Mob.java
@@ -145,6 +_,35 @@
     private BlockPos restrictCenter = BlockPos.ZERO;
     private float restrictRadius = -1.0F;
     public boolean aware = true; // CraftBukkit
+    // Canvas start
+    private PathNavigation registeredNavigation;
+
+    public boolean lithium$isRegisteredToWorld() {
+        return this.registeredNavigation != null;
+    }
+
+    public void lithium$setRegisteredToWorld(PathNavigation navigation) {
+        this.registeredNavigation = navigation;
+    }
+
+    public PathNavigation lithium$getRegisteredNavigation() {
+        return this.registeredNavigation;
+    }
+
+    public void lithium$updateNavigationRegistration() {
+        if (this.lithium$isRegisteredToWorld()) {
+            PathNavigation navigation = this.getNavigation();
+            if (this.registeredNavigation != navigation) {
+                ((ServerLevel) this.level()).lithium$setNavigationInactive((Mob) (Object) this);
+                this.registeredNavigation = navigation;
+
+                if (navigation.getPath() != null) {
+                    ((ServerLevel) this.level()).lithium$setNavigationActive((Mob) (Object) this);
+                }
+            }
+        }
+    }
+    // Canvas end
     public int ticksSinceLastInteraction; // Purpur - Entity lifespan
 
     protected Mob(EntityType<? extends Mob> entityType, Level level) {
@@ -841,7 +_,7 @@
         if (this.level().getDifficulty() == Difficulty.PEACEFUL && this.shouldDespawnInPeaceful()) {
             this.discard(EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause
         } else if (!this.isPersistenceRequired() && !this.requiresCustomPersistence()) {
-            Entity nearestPlayer = this.level().findNearbyPlayer(this, -1.0, EntitySelector.PLAYER_AFFECTS_SPAWNING); // Paper - Affects Spawning API
+            Entity nearestPlayer = this.canvas$optimizeNearbyPlayerLookups(this.level(), this, -1.0); // Paper - Affects Spawning API // Canvas - faster player lookups
             if (nearestPlayer != null) {
                 // Paper start - Configurable despawn distances
                 final io.papermc.paper.configuration.WorldConfiguration.Entities.Spawning.DespawnRangePair despawnRangePair = this.level().paperConfig().entities.spawning.despawnRanges.get(this.getType().getCategory());
@@ -869,6 +_,19 @@
             this.noActionTime = 0;
         }
     }
+    // Canvas start - optimize nearby player lookups
+
+    private Player canvas$optimizeNearbyPlayerLookups(Level instance, Entity entity, double maxDistance) {
+        final Player closestPlayer = instance.getNearestPlayer(entity, this.getType().getCategory().getDespawnDistance());
+        if (closestPlayer != null) {
+            return closestPlayer;
+        } else {
+            final List<? extends Player> players = this.level().players();
+            if (players.isEmpty()) return null;
+            return players.get(0);
+        }
+    }
+    // Canvas end
 
     @Override
     protected final void serverAiStep() {
@@ -1555,6 +_,7 @@
             // Paper end - Expand EntityUnleashEvent
         }
 
+        this.lithium$updateNavigationRegistration(); // Canvas
         return flag;
     }
 
