--- a/net/minecraft/world/entity/animal/Bee.java
+++ b/net/minecraft/world/entity/animal/Bee.java
@@ -936,7 +_,7 @@
                         } else {
                             Bee.this.pathfindRandomlyTowards(Bee.this.hivePos);
                         }
-                    } else {
+                    } else if (navigation.getPath() != null && navigation.getPath().isProcessed()) { // Canvas - check processing
                         boolean flag = this.pathfindDirectlyTowards(Bee.this.hivePos);
                         if (!flag) {
                             this.dropAndBlacklistHive();
@@ -990,7 +_,7 @@
                 return true;
             } else {
                 Path path = Bee.this.navigation.getPath();
-                return path != null && path.getTarget().equals(pos) && path.canReach() && path.isDone();
+                return path != null && path.isProcessed() && path.getTarget().equals(pos) && path.canReach() && path.isDone(); // Canvas - ensure path is processed
             }
         }
     }
@@ -1407,12 +_,12 @@
                 Bee.this.dropFlower();
             }
 
-            this.lastValidateTick = Bee.this.level().getGameTime();
+            this.lastValidateTick = Bee.this.tickCount; // Canvas - use tickCount for damage source timestamps
         }
 
         @Override
         public boolean canBeeUse() {
-            return Bee.this.level().getGameTime() > this.lastValidateTick + this.validateFlowerCooldown;
+            return Bee.this.tickCount > this.lastValidateTick + this.validateFlowerCooldown; // Canvas - use tickCount for damage source timestamps
         }
 
         @Override
@@ -1435,12 +_,12 @@
                 Bee.this.dropHive();
             }
 
-            this.lastValidateTick = Bee.this.level().getGameTime();
+            this.lastValidateTick = Bee.this.tickCount; // Canvas - use tickCount for validation ticks
         }
 
         @Override
         public boolean canBeeUse() {
-            return Bee.this.level().getGameTime() > this.lastValidateTick + this.VALIDATE_HIVE_COOLDOWN;
+            return Bee.this.tickCount > this.lastValidateTick + this.VALIDATE_HIVE_COOLDOWN; // Canvas - use tickCount for damage source timestamps
         }
 
         @Override
