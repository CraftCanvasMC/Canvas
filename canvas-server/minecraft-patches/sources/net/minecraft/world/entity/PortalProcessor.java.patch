--- a/net/minecraft/world/entity/PortalProcessor.java
+++ b/net/minecraft/world/entity/PortalProcessor.java
@@ -1,6 +_,8 @@
 package net.minecraft.world.entity;
 
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.Config;
+import io.canvasmc.canvas.region.ServerRegions;
 import net.minecraft.core.BlockPos;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.level.block.Portal;
@@ -24,9 +_,19 @@
             return false;
         } else {
             this.insidePortalThisTick = false;
-            return canChangeDimensions && this.portalTime++ >= this.portal.getPortalTransitionTime(level, entity);
+            return canChangeDimensions && lagCompensation(this.portalTime++, level) >= this.portal.getPortalTransitionTime(level, entity); // Canvas
         }
     }
+    // Canvas start
+
+    private int lagCompensation(int original, ServerLevel world) {
+        if (!Config.INSTANCE.lagCompensation.enabled || !Config.INSTANCE.lagCompensation.portalAcceleration) return original;
+        if (world.isClientSide()) return original;
+
+        portalTime = portalTime + ServerRegions.getTickData(world).tpsCalculator.applicableMissedTicks(); // Canvas - lag compensationn - Threaded Regions
+        return portalTime;
+    }
+    // Canvas end
 
     @Nullable
     public TeleportTransition getPortalDestination(ServerLevel level, Entity entity) {
