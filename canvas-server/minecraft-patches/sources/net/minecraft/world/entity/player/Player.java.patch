--- a/net/minecraft/world/entity/player/Player.java
+++ b/net/minecraft/world/entity/player/Player.java
@@ -15,6 +_,8 @@
 import java.util.function.Predicate;
 import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.Config;
+import io.canvasmc.canvas.region.ServerRegions;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
@@ -282,6 +_,14 @@
         builder.define(DATA_SHOULDER_LEFT, new CompoundTag());
         builder.define(DATA_SHOULDER_RIGHT, new CompoundTag());
     }
+    // Canvas start - lag compensation
+
+    private int lagCompensation(int original, ServerRegions.WorldTickData tickData) { // Canvas - Threaded Regions
+        if (!Config.INSTANCE.lagCompensation.enabled || !Config.INSTANCE.lagCompensation.sleepingAcceleration) return original;
+        if (this.level().isClientSide) return original;
+        return original + tickData.tpsCalculator.applicableMissedTicks(); // Canvas - Threaded Regions
+    }
+    // Canvas end
 
     @Override
     public void tick() {
@@ -300,25 +_,28 @@
             this.takeXpDelay--;
         }
 
+        ServerRegions.WorldTickData tickData = ServerRegions.getTickData(this.level().level()); // Canvas - Threaded Regions
         if (this.isSleeping()) {
-            this.sleepCounter++;
+            lagCompensation(this.sleepCounter++, tickData); // Canvas - lag compensation - Threaded Regions
             // Paper start - Add PlayerDeepSleepEvent
-            if (this.sleepCounter == SLEEP_DURATION) {
+            if (lagCompensation(this.sleepCounter, tickData) == SLEEP_DURATION) { // Canvas - lag compensation - Threaded Regions
                 if (!new io.papermc.paper.event.player.PlayerDeepSleepEvent((org.bukkit.entity.Player) getBukkitEntity()).callEvent()) {
                     this.sleepCounter = Integer.MIN_VALUE;
                 }
             }
             // Paper end - Add PlayerDeepSleepEvent
-            if (this.sleepCounter > 100) {
+            if (lagCompensation(this.sleepCounter, tickData) > 100) { // Canvas - lag compensation - Threaded Regions
                 this.sleepCounter = 100;
             }
 
             if (!this.level().isClientSide && this.level().isDay()) {
                 this.stopSleepInBed(false, true);
             }
-        } else if (this.sleepCounter > 0) {
-            this.sleepCounter++;
-            if (this.sleepCounter >= 110) {
+        // Canvas start - lag compensation
+        } else if (lagCompensation(this.sleepCounter, tickData) > 0) { // Canvas - Threaded Regions
+            lagCompensation(this.sleepCounter++, tickData); // Canvas - Threaded Regions
+            if (lagCompensation(this.sleepCounter, tickData) >= 110) { // Canvas - Threaded Regions
+        // Canvas end
                 this.sleepCounter = 0;
             }
         }
