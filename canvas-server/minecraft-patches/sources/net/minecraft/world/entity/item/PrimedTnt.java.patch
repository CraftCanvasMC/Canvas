--- a/net/minecraft/world/entity/item/PrimedTnt.java
+++ b/net/minecraft/world/entity/item/PrimedTnt.java
@@ -2,6 +_,8 @@
 
 import java.util.Optional;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.Config;
+import io.canvasmc.canvas.region.ServerRegions;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.core.registries.Registries;
@@ -57,6 +_,15 @@
     private boolean usedPortal;
     public float explosionPower = 4.0F;
     public boolean isIncendiary = false; // CraftBukkit - add field
+    // Canvas start - merge tnt logic
+    float setPower = 4.0F;
+
+    public void addPower() {
+        if (setPower < 16.0F) {
+            setPower += 0.1F;
+        }
+    }
+    // Canvas end
 
     public PrimedTnt(EntityType<? extends PrimedTnt> entityType, Level level) {
         super(entityType, level);
@@ -98,7 +_,7 @@
 
     @Override
     public void tick() {
-        if (this.level().spigotConfig.maxTntTicksPerTick > 0 && ++this.level().spigotConfig.currentPrimedTnt > this.level().spigotConfig.maxTntTicksPerTick) { return; } // Spigot
+        if (this.level().spigotConfig.maxTntTicksPerTick > 0 && ++ServerRegions.getTickData(this.level().level()).currentPrimedTnt > this.level().spigotConfig.maxTntTicksPerTick) { return; } // Spigot // Canvas - Threaded Regions
         this.handlePortal();
         this.applyGravity();
         this.move(MoverType.SELF, this.getDeltaMovement());
@@ -137,7 +_,7 @@
              */
             // Send position and velocity updates to nearby players on every tick while the TNT is in water.
             // This does pretty well at keeping their clients in sync with the server.
-            net.minecraft.server.level.ChunkMap.TrackedEntity ete = ((net.minecraft.server.level.ServerLevel) this.level()).getChunkSource().chunkMap.entityMap.get(this.getId());
+            net.minecraft.server.level.ChunkMap.TrackedEntity ete = this.moonrise$getTrackedEntity(); // Canvas - Threaded Regions
             if (ete != null) {
                 net.minecraft.network.protocol.game.ClientboundSetEntityMotionPacket velocityPacket = new net.minecraft.network.protocol.game.ClientboundSetEntityMotionPacket(this);
                 net.minecraft.network.protocol.game.ClientboundTeleportEntityPacket positionPacket = net.minecraft.network.protocol.game.ClientboundTeleportEntityPacket.teleport(this.getId(), net.minecraft.world.entity.PositionMoveRotation.of(this), java.util.Set.of(), this.onGround);
@@ -160,6 +_,13 @@
             return;
         }
         // CraftBukkit end
+        // Canvas start - merge tnt logic
+        // The reason we dont add to HEAD is so we respect the plugin event.
+        if (Config.INSTANCE.blocks.tnt.mergeTntLogic) {
+            this.level().explode(this, Explosion.getDefaultDamageSource(this.level(), this), this.usedPortal ? USED_PORTAL_DAMAGE_CALCULATOR : null, this.getX(), this.getY(0.0625), this.getZ(), this.setPower, false, Level.ExplosionInteraction.TNT);
+            return;
+        }
+        // Canvas end
         this.level()
             .explode(
                 this,
