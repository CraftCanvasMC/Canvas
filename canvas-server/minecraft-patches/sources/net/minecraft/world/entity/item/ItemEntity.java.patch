--- a/net/minecraft/world/entity/item/ItemEntity.java
+++ b/net/minecraft/world/entity/item/ItemEntity.java
@@ -3,6 +_,8 @@
 import java.util.Objects;
 import java.util.UUID;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.Config;
+import io.canvasmc.canvas.region.ServerRegions;
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
@@ -153,8 +_,26 @@
     }
     // Paper end - EAR 2
 
+    // Canvas start
+    private void lagCompensation() {
+        ServerRegions.WorldTickData tickData = ServerRegions.getTickData(this.level().level()); // Canvas - Threaded Regions
+        if (!Config.INSTANCE.lagCompensation.enabled || !Config.INSTANCE.lagCompensation.pickupAcceleration) return;
+        if ((this).level().isClientSide()) return;
+
+        if (pickupDelay == 0) return;
+
+        if (pickupDelay - tickData.applicableMissedTicks() <= 0) { // Canvas - Threaded Regions
+            pickupDelay = 0;
+            return;
+        }
+
+        pickupDelay = pickupDelay - tickData.applicableMissedTicks(); // Canvas - Threaded Regions
+    }
+
     @Override
     public void tick() {
+        lagCompensation();
+    // Canvas end
         if (this.getItem().isEmpty()) {
             this.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause
         } else {
@@ -209,7 +_,8 @@
                 || Mth.floor(this.yo) != Mth.floor(this.getY())
                 || Mth.floor(this.zo) != Mth.floor(this.getZ());
             int i = flag ? 2 : 40;
-            if (this.tickCount % i == 0 && !this.level().isClientSide && this.isMergable()) {
+            ItemStack item = this.getItem(); // Canvas - short cut count check
+            if (item.getCount() < item.getMaxStackSize() && (this.tickCount % i == 0 && !this.level().isClientSide && this.isMergable())) { // Canvas - short cut count check
                 this.mergeWithNeighbours();
             }
 
@@ -540,7 +_,8 @@
     @Override
     public Entity teleport(TeleportTransition teleportTransition) {
         Entity entity = super.teleport(teleportTransition);
-        if (!this.level().isClientSide && entity instanceof ItemEntity itemEntity) {
+        ItemStack item = this.getItem(); // Canvas - short cut count check
+        if (item.getCount() < item.getMaxStackSize() && !this.level().isClientSide && entity instanceof ItemEntity itemEntity) { // Canvas - short cut count check
             itemEntity.mergeWithNeighbours();
         }
 
