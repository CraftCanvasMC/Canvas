--- a/net/minecraft/world/item/Item.java
+++ b/net/minecraft/world/item/Item.java
@@ -10,6 +_,8 @@
 import java.util.Objects;
 import java.util.Optional;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.Config;
+import io.canvasmc.canvas.util.TPSUtil;
 import net.minecraft.SharedConstants;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
@@ -26,6 +_,7 @@
 import net.minecraft.resources.DependantName;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.resources.ResourceLocation;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.tags.DamageTypeTags;
@@ -260,8 +_,19 @@
 
     public int getUseDuration(ItemStack stack, LivingEntity entity) {
         Consumable consumable = stack.get(DataComponents.CONSUMABLE);
-        return consumable != null ? consumable.consumeTicks() : 0;
-    }
+    // Canvas start
+        int original = consumable != null ? consumable.consumeTicks() : 0;
+        if (entity.level() instanceof ServerLevel serverLevel) {
+            return lagCompensation(original, serverLevel);
+        }
+        return original;
+    }
+
+    private int lagCompensation(int original, ServerLevel level) {
+        if (!Config.INSTANCE.lagCompensation.enabled || !Config.INSTANCE.lagCompensation.eatingAcceleration || original == 0) return original;
+        return TPSUtil.tt20(original, true, level);
+    }
+    // Canvas end
 
     public boolean releaseUsing(ItemStack stack, Level level, LivingEntity entity, int timeLeft) {
         return false;
