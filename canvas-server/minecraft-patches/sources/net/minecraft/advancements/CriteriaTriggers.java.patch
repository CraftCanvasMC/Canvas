--- a/net/minecraft/advancements/CriteriaTriggers.java
+++ b/net/minecraft/advancements/CriteriaTriggers.java
@@ -1,6 +_,7 @@
 package net.minecraft.advancements;
 
 import com.mojang.serialization.Codec;
+import io.canvasmc.canvas.Config;
 import net.minecraft.advancements.critereon.AnyBlockInteractionTrigger;
 import net.minecraft.advancements.critereon.BeeNestDestroyedTrigger;
 import net.minecraft.advancements.critereon.BredAnimalsTrigger;
@@ -35,6 +_,7 @@
 import net.minecraft.advancements.critereon.RecipeCraftedTrigger;
 import net.minecraft.advancements.critereon.RecipeUnlockedTrigger;
 import net.minecraft.advancements.critereon.ShotCrossbowTrigger;
+import net.minecraft.advancements.critereon.SimpleCriterionTrigger;
 import net.minecraft.advancements.critereon.SlideDownBlockTrigger;
 import net.minecraft.advancements.critereon.StartRidingTrigger;
 import net.minecraft.advancements.critereon.SummonedEntityTrigger;
@@ -46,6 +_,7 @@
 import net.minecraft.advancements.critereon.UsingItemTrigger;
 import net.minecraft.core.Registry;
 import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.server.MinecraftServer;
 
 public class CriteriaTriggers {
     public static final Codec<CriterionTrigger<?>> CODEC = BuiltInRegistries.TRIGGER_TYPES.byNameCodec();
@@ -107,6 +_,15 @@
     public static final FallAfterExplosionTrigger FALL_AFTER_EXPLOSION = register("fall_after_explosion", new FallAfterExplosionTrigger());
 
     private static <T extends CriterionTrigger<?>> T register(String name, T trigger) {
+        // Canvas start
+        for (String pattern : Config.INSTANCE.blacklistedCriterionTriggers) {
+            if (trigger instanceof SimpleCriterionTrigger simpleTrigger && (pattern.equalsIgnoreCase("*") || name.equalsIgnoreCase(pattern))) {
+                simpleTrigger.setDisabled(true);
+                MinecraftServer.LOGGER.info("Disabled criterion trigger '{}'", name);
+                break;
+            }
+        }
+        // Canvas end
         return Registry.register(BuiltInRegistries.TRIGGER_TYPES, name, trigger);
     }
 
