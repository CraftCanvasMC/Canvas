--- a/net/minecraft/server/level/ServerEntityGetter.java
+++ b/net/minecraft/server/level/ServerEntityGetter.java
@@ -3,9 +_,11 @@
 import java.util.ArrayList;
 import java.util.List;
 import javax.annotation.Nullable;
+import net.minecraft.core.BlockPos;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.ai.targeting.TargetingConditions;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.EntityGetter;
 import net.minecraft.world.phys.AABB;
 
@@ -14,17 +_,17 @@
 
     @Nullable
     default Player getNearestPlayer(TargetingConditions targetingConditions, LivingEntity source) {
-        return this.getNearestEntity(this.players(), targetingConditions, source, source.getX(), source.getY(), source.getZ());
+        return this.getNearestEntity(this.getLocalPlayers(source.chunkPosition()), targetingConditions, source, source.getX(), source.getY(), source.getZ()); // Canvas - Threaded Regions
     }
 
     @Nullable
     default Player getNearestPlayer(TargetingConditions targetingConditions, LivingEntity source, double x, double y, double z) {
-        return this.getNearestEntity(this.players(), targetingConditions, source, x, y, z);
+        return this.getNearestEntity(this.getLocalPlayers(source.chunkPosition()), targetingConditions, source, x, y, z); // Canvas - Threaded Regions
     }
 
     @Nullable
     default Player getNearestPlayer(TargetingConditions targetingConditions, double x, double y, double z) {
-        return this.getNearestEntity(this.players(), targetingConditions, null, x, y, z);
+        return this.getNearestEntity(this.getLocalPlayers(new ChunkPos(new BlockPos((int) Math.round(x), (int) Math.round(y), (int) Math.round(z)))), targetingConditions, null, x, y, z); // Canvas - Threaded Regions
     }
 
     @Nullable
@@ -57,7 +_,7 @@
     default List<Player> getNearbyPlayers(TargetingConditions targetingConditions, LivingEntity source, AABB area) {
         List<Player> list = new ArrayList<>();
 
-        for (Player player : this.players()) {
+        for (Player player : this.getLocalPlayers(source.chunkPosition())) { // Canvas - Threaded Regions
             if (area.contains(player.getX(), player.getY(), player.getZ()) && targetingConditions.test(this.getLevel(), source, player)) {
                 list.add(player);
             }
