--- a/net/minecraft/server/commands/TeleportCommand.java
+++ b/net/minecraft/server/commands/TeleportCommand.java
@@ -9,7 +_,9 @@
 import java.util.EnumSet;
 import java.util.Locale;
 import java.util.Set;
+import java.util.function.Consumer;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.Config;
 import net.minecraft.commands.CommandSourceStack;
 import net.minecraft.commands.Commands;
 import net.minecraft.commands.arguments.EntityAnchorArgument;
@@ -28,6 +_,8 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.Location;
+import org.bukkit.event.player.PlayerTeleportEvent;
 
 public class TeleportCommand {
     private static final SimpleCommandExceptionType INVALID_POSITION = new SimpleCommandExceptionType(
@@ -283,6 +_,24 @@
         if (!Level.isInSpawnableBounds(blockPos)) {
             throw INVALID_POSITION.create();
         } else {
+            // Canvas start - async teleport
+            Consumer<Boolean> resultConsumer = (result) -> {
+                if (result) {
+                    if (lookAt != null) {
+                        lookAt.perform(source, target);
+                    }
+
+                    if (!(target instanceof LivingEntity livingEntity && livingEntity.isFallFlying())) {
+                        target.setDeltaMovement(target.getDeltaMovement().multiply(1.0, 0.0, 1.0));
+                        target.setOnGround(true);
+                    }
+
+                    if (target instanceof PathfinderMob pathfinderMob) {
+                        pathfinderMob.getNavigation().stop();
+                    }
+                }
+            };
+            // Canvas end
             double d = relatives.contains(Relative.X) ? x - target.getX() : x;
             double d1 = relatives.contains(Relative.Y) ? y - target.getY() : y;
             double d2 = relatives.contains(Relative.Z) ? z - target.getZ() : z;
@@ -310,24 +_,19 @@
                 f3 = to.getPitch();
                 level = ((org.bukkit.craftbukkit.CraftWorld) to.getWorld()).getHandle();
 
+                // Canvas start - async teleport
+                if (Config.INSTANCE.commands.teleport.teleportAsync) {
+                    target.getBukkitEntity().teleportAsync(
+                        new Location(level.getWorld(), d, d1, d2, f2, f3),
+                        PlayerTeleportEvent.TeleportCause.COMMAND
+                    ).thenAccept(resultConsumer);
+                    return;
+                }
+                // Canvas end
                 result = target.teleportTo(level, d, d1, d2, relatives, f2, f3, true);
             }
 
-            if (result) {
-                // CraftBukkit end
-                if (lookAt != null) {
-                    lookAt.perform(source, target);
-                }
-
-                if (!(target instanceof LivingEntity livingEntity && livingEntity.isFallFlying())) {
-                    target.setDeltaMovement(target.getDeltaMovement().multiply(1.0, 0.0, 1.0));
-                    target.setOnGround(true);
-                }
-
-                if (target instanceof PathfinderMob pathfinderMob) {
-                    pathfinderMob.getNavigation().stop();
-                }
-            }
+            resultConsumer.accept(result); // Canvas - move to consumer
         }
     }
 }
