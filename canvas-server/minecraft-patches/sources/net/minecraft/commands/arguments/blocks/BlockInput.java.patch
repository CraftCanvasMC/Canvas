--- a/net/minecraft/commands/arguments/blocks/BlockInput.java
+++ b/net/minecraft/commands/arguments/blocks/BlockInput.java
@@ -18,6 +_,7 @@
     private final Set<Property<?>> properties;
     @Nullable
     public final CompoundTag tag;
+    private final Object lock = new Object(); // Canvas
 
     public BlockInput(BlockState state, Set<Property<?>> properties, @Nullable CompoundTag tag) {
         this.state = state;
@@ -35,6 +_,7 @@
 
     @Override
     public boolean test(BlockInWorld block) {
+        synchronized (lock) { // Canvas
         BlockState state = block.getState();
         if (!state.is(this.state.getBlock())) {
             return false;
@@ -52,6 +_,7 @@
                 return entity != null && NbtUtils.compareNbt(this.tag, entity.saveWithFullMetadata(block.getLevel().registryAccess()), true);
             }
         }
+        } // Canvas
     }
 
     public boolean test(ServerLevel level, BlockPos pos) {
@@ -59,6 +_,7 @@
     }
 
     public boolean place(ServerLevel level, BlockPos pos, int flags) {
+        synchronized (lock) { // Canvas
         BlockState blockState = Block.updateFromNeighbourShapes(this.state, level, pos);
         if (blockState.isAir()) {
             blockState = this.state;
@@ -77,6 +_,7 @@
 
             return true;
         }
+        } // Canvas
     }
 
     private BlockState overwriteWithDefinedProperties(BlockState state) {
