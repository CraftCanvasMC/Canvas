From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Fri, 17 Jan 2025 00:08:23 -0800
Subject: [PATCH] Optimize InventoryChangeTrigger


diff --git a/net/minecraft/advancements/critereon/InventoryChangeTrigger.java b/net/minecraft/advancements/critereon/InventoryChangeTrigger.java
index 52eebc36951097d8fdcce0ece518e779e6f41319..1f6f7016f497ab16abd80c76a1a6ad5397f2bc8b 100644
--- a/net/minecraft/advancements/critereon/InventoryChangeTrigger.java
+++ b/net/minecraft/advancements/critereon/InventoryChangeTrigger.java
@@ -2,6 +2,7 @@ package net.minecraft.advancements.critereon;
 
 import com.mojang.serialization.Codec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
+import io.canvasmc.canvas.Config;
 import it.unimi.dsi.fastutil.objects.ObjectArrayList;
 import java.util.List;
 import java.util.Map;
@@ -22,24 +23,45 @@ public class InventoryChangeTrigger extends SimpleCriterionTrigger<InventoryChan
         return InventoryChangeTrigger.TriggerInstance.CODEC;
     }
 
+    // Canvas start - optimize inventory change triggers via skip-ticks
+    private int ticksSkipped;
+
+    private boolean tryTick() {
+        int skipTicksAmount = Config.INSTANCE.skipTicksAdvancements;
+        if (skipTicksAmount <= 0)
+            return true;
+
+        this.ticksSkipped++;
+        if (this.ticksSkipped > skipTicksAmount) {
+            this.ticksSkipped = 0;
+            return true;
+        }
+
+        return false;
+    }
+
     public void trigger(ServerPlayer player, Inventory inventory, ItemStack stack) {
+        if (!this.tryTick())
+            return;
+
         int i = 0;
-        int i1 = 0;
-        int i2 = 0;
+        int j = 0;
+        int k = 0;
 
-        for (int i3 = 0; i3 < inventory.getContainerSize(); i3++) {
-            ItemStack item = inventory.getItem(i3);
-            if (item.isEmpty()) {
-                i1++;
+        for (int l = 0; l < inventory.getContainerSize(); ++l) {
+            ItemStack itemstack = inventory.getItem(l);
+            if (itemstack.isEmpty()) {
+                ++j;
             } else {
-                i2++;
-                if (item.getCount() >= item.getMaxStackSize()) {
-                    i++;
+                ++k;
+                if (itemstack.getCount() >= itemstack.getMaxStackSize()) {
+                    ++i;
                 }
             }
         }
 
-        this.trigger(player, inventory, stack, i, i1, i2);
+        this.trigger(player, inventory, stack, i, j, k);
+    // Canvas end
     }
 
     private void trigger(ServerPlayer player, Inventory inventory, ItemStack stack, int full, int empty, int occupied) {
