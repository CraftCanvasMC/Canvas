From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dueris <jedimastertoothless@hotmail.com>
Date: Sat, 1 Feb 2025 22:24:01 -0800
Subject: [PATCH] Allow modification of items dropped on death radius


diff --git a/net/minecraft/server/level/ServerPlayer.java b/net/minecraft/server/level/ServerPlayer.java
index 504c4aa74a0dcb7bf72e25435545e60d0103c8b0..c07608f73a76cca77f6e9cabe7090332f8dba381 100644
--- a/net/minecraft/server/level/ServerPlayer.java
+++ b/net/minecraft/server/level/ServerPlayer.java
@@ -15,6 +15,7 @@ import java.util.Set;
 import java.util.UUID;
 import java.util.stream.Collectors;
 import javax.annotation.Nullable;
+import io.canvasmc.canvas.Config;
 import net.minecraft.ChatFormatting;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
@@ -1077,8 +1078,10 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
     }
     // Paper end - PlayerDeathEvent#getItemsToKeep
 
+    public boolean processingDeath = false; // Canvas
     @Override
     public void die(DamageSource cause) {
+        processingDeath = true; // Canvas
         // this.gameEvent(GameEvent.ENTITY_DIE); // Paper - move below event cancellation check
         boolean _boolean = this.serverLevel().getGameRules().getBoolean(GameRules.RULE_SHOWDEATHMESSAGES); final boolean showDeathMessage = _boolean; // Paper - OBFHELPER
         // CraftBukkit start - fire PlayerDeathEvent
@@ -1195,6 +1198,7 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
         this.getCombatTracker().recheckStatus();
         this.setLastDeathLocation(Optional.of(GlobalPos.of(this.level().dimension(), this.blockPosition())));
         this.setClientLoaded(false);
+        processingDeath = false; // Canvas
     }
 
     private void tellNeutralMobsThatIDied() {
@@ -2821,6 +2825,18 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
                 );
             }
 
+            // Canvas start
+            if (processingDeath) {
+                float halfedRandom = this.random.nextFloat() * 0.5F;
+                float piRandom = this.random.nextFloat() * (float) (Math.PI * 2);
+                double factor = Config.INSTANCE.itemEntitySpreadFactor;
+                itemEntity.setDeltaMovement(
+                    (-Mth.sin(piRandom) * halfedRandom) * factor,
+                    0.2F * factor,
+                    (Mth.cos(piRandom) * halfedRandom) * factor
+                );
+            }
+            // Canvas end
             return itemEntity;
         }
     }
